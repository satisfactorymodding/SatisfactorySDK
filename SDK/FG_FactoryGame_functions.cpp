// Satisfactory SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "FG_FactoryGame_parameters.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function FactoryGame.FGActorRepresentation.OnRep_ShouldShowOnMap
// (Final, Native, Protected)

void UFGActorRepresentation::OnRep_ShouldShowOnMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.OnRep_ShouldShowOnMap");

	UFGActorRepresentation_OnRep_ShouldShowOnMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentation.OnRep_ShouldShowInCompass
// (Final, Native, Protected)

void UFGActorRepresentation::OnRep_ShouldShowInCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.OnRep_ShouldShowInCompass");

	UFGActorRepresentation_OnRep_ShouldShowInCompass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentation.OnRep_ActorRepresentationUpdated
// (Final, Native, Protected)

void UFGActorRepresentation::OnRep_ActorRepresentationUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.OnRep_ActorRepresentationUpdated");

	UFGActorRepresentation_OnRep_ActorRepresentationUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentation.IsActorStatic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentation::IsActorStatic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.IsActorStatic");

	UFGActorRepresentation_IsActorStatic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetShouldShowOnMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentation::GetShouldShowOnMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetShouldShowOnMap");

	UFGActorRepresentation_GetShouldShowOnMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetShouldShowInCompass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentation::GetShouldShowInCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetShouldShowInCompass");

	UFGActorRepresentation_GetShouldShowInCompass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetRepresentationType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERepresentationType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ERepresentationType UFGActorRepresentation::GetRepresentationType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetRepresentationType");

	UFGActorRepresentation_GetRepresentationType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetRepresentationTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGActorRepresentation::GetRepresentationTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetRepresentationTexture");

	UFGActorRepresentation_GetRepresentationTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetRepresentationText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGActorRepresentation::GetRepresentationText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetRepresentationText");

	UFGActorRepresentation_GetRepresentationText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetRepresentationColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor UFGActorRepresentation::GetRepresentationColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetRepresentationColor");

	UFGActorRepresentation_GetRepresentationColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetRealActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFGActorRepresentation::GetRealActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetRealActor");

	UFGActorRepresentation_GetRealActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetIsTemporary
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentation::GetIsTemporary()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetIsTemporary");

	UFGActorRepresentation_GetIsTemporary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetFogOfWarRevealType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFogOfWarRevealType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFogOfWarRevealType UFGActorRepresentation::GetFogOfWarRevealType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetFogOfWarRevealType");

	UFGActorRepresentation_GetFogOfWarRevealType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetFogOfWarRevealRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGActorRepresentation::GetFogOfWarRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetFogOfWarRevealRadius");

	UFGActorRepresentation_GetFogOfWarRevealRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetCompassViewDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECompassViewDistance           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECompassViewDistance UFGActorRepresentation::GetCompassViewDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetCompassViewDistance");

	UFGActorRepresentation_GetCompassViewDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetActorRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UFGActorRepresentation::GetActorRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetActorRotation");

	UFGActorRepresentation_GetActorRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentation.GetActorLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGActorRepresentation::GetActorLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentation.GetActorLocation");

	UFGActorRepresentation_GetActorLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.UpdateRepresentation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::UpdateRepresentation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.UpdateRepresentation");

	UFGActorRepresentationInterface_UpdateRepresentation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.SetActorRepresentationText
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FText*                  newText                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGActorRepresentationInterface::SetActorRepresentationText(struct FText* newText)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.SetActorRepresentationText");

	UFGActorRepresentationInterface_SetActorRepresentationText_Params params;
	params.newText = newText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.SetActorRepresentationColor
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor*           NewColor                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGActorRepresentationInterface::SetActorRepresentationColor(struct FLinearColor* NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.SetActorRepresentationColor");

	UFGActorRepresentationInterface_SetActorRepresentationColor_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentationInterface.SetActorCompassViewDistance
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECompassViewDistance*          compassViewDistance            (Parm, ZeroConstructor, IsPlainOldData)
// ECompassViewDistance           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECompassViewDistance UFGActorRepresentationInterface::SetActorCompassViewDistance(ECompassViewDistance* compassViewDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.SetActorCompassViewDistance");

	UFGActorRepresentationInterface_SetActorCompassViewDistance_Params params;
	params.compassViewDistance = compassViewDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.RemoveAsRepresentation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::RemoveAsRepresentation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.RemoveAsRepresentation");

	UFGActorRepresentationInterface_RemoveAsRepresentation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.IsActorStatic
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::IsActorStatic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.IsActorStatic");

	UFGActorRepresentationInterface_IsActorStatic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetRealActorRotation
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UFGActorRepresentationInterface::GetRealActorRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetRealActorRotation");

	UFGActorRepresentationInterface_GetRealActorRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetRealActorLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGActorRepresentationInterface::GetRealActorLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetRealActorLocation");

	UFGActorRepresentationInterface_GetRealActorLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorShouldShowOnMap
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::GetActorShouldShowOnMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorShouldShowOnMap");

	UFGActorRepresentationInterface_GetActorShouldShowOnMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorShouldShowInCompass
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::GetActorShouldShowInCompass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorShouldShowInCompass");

	UFGActorRepresentationInterface_GetActorShouldShowInCompass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationType
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ERepresentationType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ERepresentationType UFGActorRepresentationInterface::GetActorRepresentationType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationType");

	UFGActorRepresentationInterface_GetActorRepresentationType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationTexture
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGActorRepresentationInterface::GetActorRepresentationTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationTexture");

	UFGActorRepresentationInterface_GetActorRepresentationTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGActorRepresentationInterface::GetActorRepresentationText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationText");

	UFGActorRepresentationInterface_GetActorRepresentationText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationColor
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor UFGActorRepresentationInterface::GetActorRepresentationColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorRepresentationColor");

	UFGActorRepresentationInterface_GetActorRepresentationColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorFogOfWarRevealType
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EFogOfWarRevealType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFogOfWarRevealType UFGActorRepresentationInterface::GetActorFogOfWarRevealType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorFogOfWarRevealType");

	UFGActorRepresentationInterface_GetActorFogOfWarRevealType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorFogOfWarRevealRadius
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGActorRepresentationInterface::GetActorFogOfWarRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorFogOfWarRevealRadius");

	UFGActorRepresentationInterface_GetActorFogOfWarRevealRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.GetActorCompassViewDistance
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECompassViewDistance           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECompassViewDistance UFGActorRepresentationInterface::GetActorCompassViewDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.GetActorCompassViewDistance");

	UFGActorRepresentationInterface_GetActorCompassViewDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationInterface.AddAsRepresentation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGActorRepresentationInterface::AddAsRepresentation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationInterface.AddAsRepresentation");

	UFGActorRepresentationInterface_AddAsRepresentation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.UpdateRepresentation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 realActor                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isLocal                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGActorRepresentationManager::UpdateRepresentation(class AActor** realActor, bool* isLocal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.UpdateRepresentation");

	AFGActorRepresentationManager_UpdateRepresentation_Params params;
	params.realActor = realActor;
	params.isLocal = isLocal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.SetMapRepresentationTypeFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn**                  owningPlayerPawn               (Parm, ZeroConstructor, IsPlainOldData)
// ERepresentationType*           Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          visible                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGActorRepresentationManager::SetMapRepresentationTypeFilter(class APawn** owningPlayerPawn, ERepresentationType* Type, bool* visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.SetMapRepresentationTypeFilter");

	AFGActorRepresentationManager_SetMapRepresentationTypeFilter_Params params;
	params.owningPlayerPawn = owningPlayerPawn;
	params.Type = Type;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentationManager.SetCompassViewDistanceForActorRepresentation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)
// ECompassViewDistance*          viewDistance                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGActorRepresentationManager::SetCompassViewDistanceForActorRepresentation(class UFGActorRepresentation** actorRepresentation, ECompassViewDistance* viewDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.SetCompassViewDistanceForActorRepresentation");

	AFGActorRepresentationManager_SetCompassViewDistanceForActorRepresentation_Params params;
	params.actorRepresentation = actorRepresentation;
	params.viewDistance = viewDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentationManager.SetCompassRepresentationTypeFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn**                  owningPlayerPawn               (Parm, ZeroConstructor, IsPlainOldData)
// ERepresentationType*           Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          visible                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGActorRepresentationManager::SetCompassRepresentationTypeFilter(class APawn** owningPlayerPawn, ERepresentationType* Type, bool* visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.SetCompassRepresentationTypeFilter");

	AFGActorRepresentationManager_SetCompassRepresentationTypeFilter_Params params;
	params.owningPlayerPawn = owningPlayerPawn;
	params.Type = Type;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentationManager.RemoveRepresentationOfActor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 realActor                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGActorRepresentationManager::RemoveRepresentationOfActor(class AActor** realActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.RemoveRepresentationOfActor");

	AFGActorRepresentationManager_RemoveRepresentationOfActor_Params params;
	params.realActor = realActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.OnRep_ReplicatedRepresentations
// (Final, Native, Private)

void AFGActorRepresentationManager::OnRep_ReplicatedRepresentations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.OnRep_ReplicatedRepresentations");

	AFGActorRepresentationManager_OnRep_ReplicatedRepresentations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGActorRepresentationManager.GetMapRepresentationTypeFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn**                  owningPlayerPawn               (Parm, ZeroConstructor, IsPlainOldData)
// ERepresentationType*           Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGActorRepresentationManager::GetMapRepresentationTypeFilter(class APawn** owningPlayerPawn, ERepresentationType* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.GetMapRepresentationTypeFilter");

	AFGActorRepresentationManager_GetMapRepresentationTypeFilter_Params params;
	params.owningPlayerPawn = owningPlayerPawn;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.GetDistanceValueFromCompassViewDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECompassViewDistance*          compassViewDistance            (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGActorRepresentationManager::GetDistanceValueFromCompassViewDistance(ECompassViewDistance* compassViewDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.GetDistanceValueFromCompassViewDistance");

	AFGActorRepresentationManager_GetDistanceValueFromCompassViewDistance_Params params;
	params.compassViewDistance = compassViewDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.GetCompassRepresentationTypeFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn**                  owningPlayerPawn               (Parm, ZeroConstructor, IsPlainOldData)
// ERepresentationType*           Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGActorRepresentationManager::GetCompassRepresentationTypeFilter(class APawn** owningPlayerPawn, ERepresentationType* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.GetCompassRepresentationTypeFilter");

	AFGActorRepresentationManager_GetCompassRepresentationTypeFilter_Params params;
	params.owningPlayerPawn = owningPlayerPawn;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.GetAllActorRepresentations
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UFGActorRepresentation*> out_AllRepresentations         (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGActorRepresentationManager::GetAllActorRepresentations(TArray<class UFGActorRepresentation*>* out_AllRepresentations)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.GetAllActorRepresentations");

	AFGActorRepresentationManager_GetAllActorRepresentations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_AllRepresentations != nullptr)
		*out_AllRepresentations = params.out_AllRepresentations;
}


// Function FactoryGame.FGActorRepresentationManager.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGActorRepresentationManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGActorRepresentationManager* AFGActorRepresentationManager::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.Get");

	AFGActorRepresentationManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.CreateAndAddNewRepresentationNoActor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             compassTexture                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           compassColor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         LifeTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          shouldShowInCompass            (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          shouldShowOnMap                (Parm, ZeroConstructor, IsPlainOldData)
// ERepresentationType*           representationType             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isLocal                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGActorRepresentationManager::CreateAndAddNewRepresentationNoActor(struct FVector* Location, class UTexture2D** compassTexture, struct FLinearColor* compassColor, float* LifeTime, bool* shouldShowInCompass, bool* shouldShowOnMap, ERepresentationType* representationType, bool* isLocal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.CreateAndAddNewRepresentationNoActor");

	AFGActorRepresentationManager_CreateAndAddNewRepresentationNoActor_Params params;
	params.Location = Location;
	params.compassTexture = compassTexture;
	params.compassColor = compassColor;
	params.LifeTime = LifeTime;
	params.shouldShowInCompass = shouldShowInCompass;
	params.shouldShowOnMap = shouldShowOnMap;
	params.representationType = representationType;
	params.isLocal = isLocal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGActorRepresentationManager.CreateAndAddNewRepresentation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 realActor                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isLocal                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGActorRepresentationManager::CreateAndAddNewRepresentation(class AActor** realActor, bool* isLocal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGActorRepresentationManager.CreateAndAddNewRepresentation");

	AFGActorRepresentationManager_CreateAndAddNewRepresentation_Params params;
	params.realActor = realActor;
	params.isLocal = isLocal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAdminInterface.SetSessionVisibility
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// TEnumAsByte<ESessionVisibility>* Visibility                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGAdminInterface::SetSessionVisibility(TEnumAsByte<ESessionVisibility>* Visibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.SetSessionVisibility");

	AFGAdminInterface_SetSessionVisibility_Params params;
	params.Visibility = Visibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.Server_SaveGame
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int16_t*                       RequestID                      (Parm, ZeroConstructor, IsPlainOldData)
// class FString*                 SaveGame                       (Parm, ZeroConstructor)

void AFGAdminInterface::Server_SaveGame(int16_t* RequestID, class FString* SaveGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.Server_SaveGame");

	AFGAdminInterface_Server_SaveGame_Params params;
	params.RequestID = RequestID;
	params.SaveGame = SaveGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.Server_LoadGame
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FSaveHeader*            Header                         (ConstParm, Parm, ReferenceParm)

void AFGAdminInterface::Server_LoadGame(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.Server_LoadGame");

	AFGAdminInterface_Server_LoadGame_Params params;
	params.Header = Header;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.Server_EnumerateSaveGames
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int16_t*                       RequestID                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGAdminInterface::Server_EnumerateSaveGames(int16_t* RequestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.Server_EnumerateSaveGames");

	AFGAdminInterface_Server_EnumerateSaveGames_Params params;
	params.RequestID = RequestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.Server_DeleteSaveFiles
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<class FString>*         saveNames                      (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// int16_t*                       RequestID                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGAdminInterface::Server_DeleteSaveFiles(TArray<class FString>* saveNames, int16_t* RequestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.Server_DeleteSaveFiles");

	AFGAdminInterface_Server_DeleteSaveFiles_Params params;
	params.saveNames = saveNames;
	params.RequestID = RequestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.SaveGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          locally                        (Parm, ZeroConstructor, IsPlainOldData)
// class FString*                 saveName                       (Parm, ZeroConstructor)
// struct FScriptDelegate*        completeDelegate               (Parm, ZeroConstructor)

void AFGAdminInterface::SaveGame(bool* locally, class FString* saveName, struct FScriptDelegate* completeDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.SaveGame");

	AFGAdminInterface_SaveGame_Params params;
	params.locally = locally;
	params.saveName = saveName;
	params.completeDelegate = completeDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.LoadGame
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool*                          locally                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSaveHeader*            save                           (ConstParm, Parm, OutParm, ReferenceParm)

void AFGAdminInterface::LoadGame(bool* locally, struct FSaveHeader* save)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.LoadGame");

	AFGAdminInterface_LoadGame_Params params;
	params.locally = locally;
	params.save = save;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.KickPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class APlayerState**           PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGAdminInterface::KickPlayer(class APlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.KickPlayer");

	AFGAdminInterface_KickPlayer_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.EnumerateSaveGames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          localSaves                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        completeDelegate               (Parm, ZeroConstructor)

void AFGAdminInterface::EnumerateSaveGames(bool* localSaves, struct FScriptDelegate* completeDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.EnumerateSaveGames");

	AFGAdminInterface_EnumerateSaveGames_Params params;
	params.localSaves = localSaves;
	params.completeDelegate = completeDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.DeleteSaveSession
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool*                          localSaves                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FSessionSaveStruct*     session                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FScriptDelegate*        completeDelegate               (Parm, ZeroConstructor)

void AFGAdminInterface::DeleteSaveSession(bool* localSaves, struct FSessionSaveStruct* session, struct FScriptDelegate* completeDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.DeleteSaveSession");

	AFGAdminInterface_DeleteSaveSession_Params params;
	params.localSaves = localSaves;
	params.session = session;
	params.completeDelegate = completeDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.DeleteSaveFiles
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool*                          localSaves                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class FString>*         saveNames                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FScriptDelegate*        completeDelegate               (Parm, ZeroConstructor)

void AFGAdminInterface::DeleteSaveFiles(bool* localSaves, TArray<class FString>* saveNames, struct FScriptDelegate* completeDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.DeleteSaveFiles");

	AFGAdminInterface_DeleteSaveFiles_Params params;
	params.localSaves = localSaves;
	params.saveNames = saveNames;
	params.completeDelegate = completeDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.DeleteSaveFile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          localSaves                     (Parm, ZeroConstructor, IsPlainOldData)
// class FString*                 saveName                       (Parm, ZeroConstructor)
// struct FScriptDelegate*        completeDelegate               (Parm, ZeroConstructor)

void AFGAdminInterface::DeleteSaveFile(bool* localSaves, class FString* saveName, struct FScriptDelegate* completeDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.DeleteSaveFile");

	AFGAdminInterface_DeleteSaveFile_Params params;
	params.localSaves = localSaves;
	params.saveName = saveName;
	params.completeDelegate = completeDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.Client_OnSaveGameCompleted
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool*                          success                        (Parm, ZeroConstructor, IsPlainOldData)
// int16_t*                       RequestID                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  errorMessage                   (ConstParm, Parm, ReferenceParm)

void AFGAdminInterface::Client_OnSaveGameCompleted(bool* success, int16_t* RequestID, struct FText* errorMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.Client_OnSaveGameCompleted");

	AFGAdminInterface_Client_OnSaveGameCompleted_Params params;
	params.success = success;
	params.RequestID = RequestID;
	params.errorMessage = errorMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.Client_OnEnumerateSaveGamesCompleted
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool*                          success                        (Parm, ZeroConstructor, IsPlainOldData)
// int16_t*                       RequestID                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FSaveHeader>*    saves                          (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AFGAdminInterface::Client_OnEnumerateSaveGamesCompleted(bool* success, int16_t* RequestID, TArray<struct FSaveHeader>* saves)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.Client_OnEnumerateSaveGamesCompleted");

	AFGAdminInterface_Client_OnEnumerateSaveGamesCompleted_Params params;
	params.success = success;
	params.RequestID = RequestID;
	params.saves = saves;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAdminInterface.Client_DeleteSaveFilesCompleted
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool*                          success                        (Parm, ZeroConstructor, IsPlainOldData)
// int16_t*                       RequestID                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGAdminInterface::Client_DeleteSaveFilesCompleted(bool* success, int16_t* RequestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAdminInterface.Client_DeleteSaveFilesCompleted");

	AFGAdminInterface_Client_DeleteSaveFilesCompleted_Params params;
	params.success = success;
	params.RequestID = RequestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAggroTargetInterface.UnregisterAttacker
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFGEnemyController**     forController                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGAggroTargetInterface::UnregisterAttacker(class AFGEnemyController** forController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.UnregisterAttacker");

	UFGAggroTargetInterface_UnregisterAttacker_Params params;
	params.forController = forController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAggroTargetInterface.ShouldAutoregisterAsTargetable
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAggroTargetInterface::ShouldAutoregisterAsTargetable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.ShouldAutoregisterAsTargetable");

	UFGAggroTargetInterface_ShouldAutoregisterAsTargetable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.RegisterIncomingAttacker
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFGEnemyController**     forController                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGAggroTargetInterface::RegisterIncomingAttacker(class AFGEnemyController** forController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.RegisterIncomingAttacker");

	UFGAggroTargetInterface_RegisterIncomingAttacker_Params params;
	params.forController = forController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAggroTargetInterface.IsAlive
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAggroTargetInterface::IsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.IsAlive");

	UFGAggroTargetInterface_IsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.GetTargetComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPrimitiveComponent* UFGAggroTargetInterface::GetTargetComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.GetTargetComponent");

	UFGAggroTargetInterface_GetTargetComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.GetEnemyTargetDesirability
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFGEnemyController**     forController                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGAggroTargetInterface::GetEnemyTargetDesirability(class AFGEnemyController** forController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.GetEnemyTargetDesirability");

	UFGAggroTargetInterface_GetEnemyTargetDesirability_Params params;
	params.forController = forController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.GetAttackLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGAggroTargetInterface::GetAttackLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.GetAttackLocation");

	UFGAggroTargetInterface_GetAttackLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAggroTargetInterface.GetActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFGAggroTargetInterface::GetActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAggroTargetInterface.GetActor");

	UFGAggroTargetInterface_GetActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAISystem.UnpardonActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::UnpardonActor(class AActor** InActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.UnpardonActor");

	UFGAISystem_UnpardonActor_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.RemoveFromTargetableList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface>* aggroTarget                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::STATIC_RemoveFromTargetableList(TScriptInterface<class UFGAggroTargetInterface>* aggroTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.RemoveFromTargetableList");

	UFGAISystem_RemoveFromTargetableList_Params params;
	params.aggroTarget = aggroTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.PlayerDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 destroyedPlayer                (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::PlayerDestroyed(class AActor** destroyedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.PlayerDestroyed");

	UFGAISystem_PlayerDestroyed_Params params;
	params.destroyedPlayer = destroyedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.PardonActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::PardonActor(class AActor** InActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.PardonActor");

	UFGAISystem_PardonActor_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.IsActorPardoned
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAISystem::IsActorPardoned(class AActor** InActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.IsActorPardoned");

	UFGAISystem_IsActorPardoned_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAISystem.GetAggroTargetList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TScriptInterface<class UFGAggroTargetInterface>> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<TScriptInterface<class UFGAggroTargetInterface>> UFGAISystem::GetAggroTargetList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.GetAggroTargetList");

	UFGAISystem_GetAggroTargetList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAISystem.CreatureDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 destroyedEnemy                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::CreatureDestroyed(class AActor** destroyedEnemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.CreatureDestroyed");

	UFGAISystem_CreatureDestroyed_Params params;
	params.destroyedEnemy = destroyedEnemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.ClearAllPardonedActors
// (Final, Native, Public, BlueprintCallable)

void UFGAISystem::ClearAllPardonedActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.ClearAllPardonedActors");

	UFGAISystem_ClearAllPardonedActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.AggroTargetDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::AggroTargetDestroyed(class AActor** DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.AggroTargetDestroyed");

	UFGAISystem_AggroTargetDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAISystem.AddToTargetableList
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface>* aggroTarget                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGAISystem::STATIC_AddToTargetableList(TScriptInterface<class UFGAggroTargetInterface>* aggroTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAISystem.AddToTargetableList");

	UFGAISystem_AddToTargetableList_Params params;
	params.aggroTarget = aggroTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAmbientSettings.ShouldIgnoreListenerRotation
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAmbientSettings::ShouldIgnoreListenerRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.ShouldIgnoreListenerRotation");

	UFGAmbientSettings_ShouldIgnoreListenerRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAmbientSettings.OnExitOuterVolume
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UAkComponent**           ambientComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGAmbientSettings::OnExitOuterVolume(class UAkComponent** ambientComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.OnExitOuterVolume");

	UFGAmbientSettings_OnExitOuterVolume_Params params;
	params.ambientComponent = ambientComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAmbientSettings.OnExitInnerVolume
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UAkComponent**           ambientComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGAmbientSettings::OnExitInnerVolume(class UAkComponent** ambientComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.OnExitInnerVolume");

	UFGAmbientSettings_OnExitInnerVolume_Params params;
	params.ambientComponent = ambientComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAmbientSettings.OnEnterOuterVolume
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UAkComponent**           ambientComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGAmbientSettings::OnEnterOuterVolume(class UAkComponent** ambientComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.OnEnterOuterVolume");

	UFGAmbientSettings_OnEnterOuterVolume_Params params;
	params.ambientComponent = ambientComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAmbientSettings.OnEnterInnerVolume
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UAkComponent**           ambientComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGAmbientSettings::OnEnterInnerVolume(class UAkComponent** ambientComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.OnEnterInnerVolume");

	UFGAmbientSettings_OnEnterInnerVolume_Params params;
	params.ambientComponent = ambientComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAmbientSettings.GetEnterOuterVolumeEvent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGAmbientSettings::GetEnterOuterVolumeEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.GetEnterOuterVolumeEvent");

	UFGAmbientSettings_GetEnterOuterVolumeEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAmbientSettings.GetEnterInnerVolumeEvent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGAmbientSettings::GetEnterInnerVolumeEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSettings.GetEnterInnerVolumeEvent");

	UFGAmbientSettings_GetEnterInnerVolumeEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAmbientSoundSpline.GetSplineComponent
// (Final, Native, Public)
// Parameters:
// class USplineComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USplineComponent* AFGAmbientSoundSpline::GetSplineComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAmbientSoundSpline.GetSplineComponent");

	AFGAmbientSoundSpline_GetSplineComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.OnRadialDamageTaken
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGCharacterAnimInstance::OnRadialDamageTaken()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.OnRadialDamageTaken");

	UFGCharacterAnimInstance_OnRadialDamageTaken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterAnimInstance.OnPointDamageTaken
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                shootDIrection                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGCharacterAnimInstance::OnPointDamageTaken(struct FVector* shootDIrection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.OnPointDamageTaken");

	UFGCharacterAnimInstance_OnPointDamageTaken_Params params;
	params.shootDIrection = shootDIrection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterAnimInstance.OnAnyDamageTaken
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGCharacterAnimInstance::OnAnyDamageTaken()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.OnAnyDamageTaken");

	UFGCharacterAnimInstance_OnAnyDamageTaken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterAnimInstance.GetVelocityDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCharacterAnimInstance::GetVelocityDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetVelocityDirection");

	UFGCharacterAnimInstance_GetVelocityDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.GetVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGCharacterAnimInstance::GetVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetVelocity");

	UFGCharacterAnimInstance_GetVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.GetDesiredWalkRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UFGCharacterAnimInstance::GetDesiredWalkRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetDesiredWalkRotation");

	UFGCharacterAnimInstance_GetDesiredWalkRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.GetDesiredRunLeanRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UFGCharacterAnimInstance::GetDesiredRunLeanRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetDesiredRunLeanRotation");

	UFGCharacterAnimInstance_GetDesiredRunLeanRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.GetCachedCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGCharacterBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterBase* UFGCharacterAnimInstance::GetCachedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetCachedCharacter");

	UFGCharacterAnimInstance_GetCachedCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterAnimInstance.GetAccelerationVectorLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCharacterAnimInstance::GetAccelerationVectorLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterAnimInstance.GetAccelerationVectorLength");

	UFGCharacterAnimInstance_GetAccelerationVectorLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.RememberPickUp
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGItemDescriptor::STATIC_RememberPickUp(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.RememberPickUp");

	UFGItemDescriptor_RememberPickUp_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetStackSizeConverted
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGItemDescriptor::STATIC_GetStackSizeConverted(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetStackSizeConverted");

	UFGItemDescriptor_GetStackSizeConverted_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetStackSize
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGItemDescriptor::STATIC_GetStackSize(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetStackSize");

	UFGItemDescriptor_GetStackSize_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetSmallIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGItemDescriptor::STATIC_GetSmallIcon(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetSmallIcon");

	UFGItemDescriptor_GetSmallIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetRadioactiveDecay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGItemDescriptor::STATIC_GetRadioactiveDecay(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetRadioactiveDecay");

	UFGItemDescriptor_GetRadioactiveDecay_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetPreviewView
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemView               out_previewView                (Parm, OutParm)

void UFGItemDescriptor::STATIC_GetPreviewView(class UClass** inClass, struct FItemView* out_previewView)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetPreviewView");

	UFGItemDescriptor_GetPreviewView_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_previewView != nullptr)
		*out_previewView = params.out_previewView;
}


// Function FactoryGame.FGItemDescriptor.GetItemName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGItemDescriptor::STATIC_GetItemName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetItemName");

	UFGItemDescriptor_GetItemName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetItemMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGItemDescriptor::STATIC_GetItemMesh(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetItemMesh");

	UFGItemDescriptor_GetItemMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetItemIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UFGItemDescriptor::STATIC_GetItemIcon(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetItemIcon");

	UFGItemDescriptor_GetItemIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetItemDescription
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGItemDescriptor::STATIC_GetItemDescription(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetItemDescription");

	UFGItemDescriptor_GetItemDescription_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetItemCategory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGItemDescriptor::STATIC_GetItemCategory(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetItemCategory");

	UFGItemDescriptor_GetItemCategory_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetIconView
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FItemView               out_itemView                   (Parm, OutParm)

void UFGItemDescriptor::STATIC_GetIconView(class UClass** inClass, struct FItemView* out_itemView)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetIconView");

	UFGItemDescriptor_GetIconView_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_itemView != nullptr)
		*out_itemView = params.out_itemView;
}


// Function FactoryGame.FGItemDescriptor.GetForm
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// EResourceForm                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EResourceForm UFGItemDescriptor::STATIC_GetForm(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetForm");

	UFGItemDescriptor_GetForm_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetFluidViscosity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGItemDescriptor::STATIC_GetFluidViscosity(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetFluidViscosity");

	UFGItemDescriptor_GetFluidViscosity_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetFluidFriction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGItemDescriptor::STATIC_GetFluidFriction(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetFluidFriction");

	UFGItemDescriptor_GetFluidFriction_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetFluidDensity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGItemDescriptor::STATIC_GetFluidDensity(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetFluidDensity");

	UFGItemDescriptor_GetFluidDensity_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetFluidColorLinear
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor UFGItemDescriptor::STATIC_GetFluidColorLinear(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetFluidColorLinear");

	UFGItemDescriptor_GetFluidColorLinear_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetFluidColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FColor UFGItemDescriptor::STATIC_GetFluidColor(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetFluidColor");

	UFGItemDescriptor_GetFluidColor_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetEnergyValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGItemDescriptor::STATIC_GetEnergyValue(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetEnergyValue");

	UFGItemDescriptor_GetEnergyValue_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.GetBigIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGItemDescriptor::STATIC_GetBigIcon(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.GetBigIcon");

	UFGItemDescriptor_GetBigIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptor.CanBeDiscarded
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGItemDescriptor::STATIC_CanBeDiscarded(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptor.CanBeDiscarded");

	UFGItemDescriptor_CanBeDiscarded_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.SpawnHologramFromRecipe
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass**                 inRecipe                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 hologramOwner                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  hologramInstigator             (Parm, ZeroConstructor, IsPlainOldData)
// class AFGHologram*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGHologram* AFGHologram::STATIC_SpawnHologramFromRecipe(class UClass** inRecipe, class AActor** hologramOwner, struct FVector* SpawnLocation, class APawn** hologramInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.SpawnHologramFromRecipe");

	AFGHologram_SpawnHologramFromRecipe_Params params;
	params.inRecipe = inRecipe;
	params.hologramOwner = hologramOwner;
	params.SpawnLocation = SpawnLocation;
	params.hologramInstigator = hologramInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.SpawnChildHologramFromRecipe
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AFGHologram**            Parent                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 hologramOwner                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  hologramInstigator             (Parm, ZeroConstructor, IsPlainOldData)
// class AFGHologram*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGHologram* AFGHologram::STATIC_SpawnChildHologramFromRecipe(class AFGHologram** Parent, class UClass** Recipe, class AActor** hologramOwner, struct FVector* SpawnLocation, class APawn** hologramInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.SpawnChildHologramFromRecipe");

	AFGHologram_SpawnChildHologramFromRecipe_Params params;
	params.Parent = Parent;
	params.Recipe = Recipe;
	params.hologramOwner = hologramOwner;
	params.SpawnLocation = SpawnLocation;
	params.hologramInstigator = hologramInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.SetSplineMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHologramSplinePathMode*       Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGHologram::SetSplineMode(EHologramSplinePathMode* Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.SetSplineMode");

	AFGHologram_SetSplineMode_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHologram.Server_SetSnapToGuideLines
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool*                          IsEnabled                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGHologram::Server_SetSnapToGuideLines(bool* IsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.Server_SetSnapToGuideLines");

	AFGHologram_Server_SetSnapToGuideLines_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHologram.OnRep_PlacementMaterial
// (Final, Native, Protected)

void AFGHologram::OnRep_PlacementMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.OnRep_PlacementMaterial");

	AFGHologram_OnRep_PlacementMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHologram.OnRep_InitialScrollModeValue
// (Final, Native, Private)

void AFGHologram::OnRep_InitialScrollModeValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.OnRep_InitialScrollModeValue");

	AFGHologram_OnRep_InitialScrollModeValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHologram.OnPendingConstructionHologramCreated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFGHologram**            fromHologram                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGHologram::OnPendingConstructionHologramCreated(class AFGHologram** fromHologram)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.OnPendingConstructionHologramCreated");

	AFGHologram_OnPendingConstructionHologramCreated_Params params;
	params.fromHologram = fromHologram;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHologram.IsChanged
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHologram::IsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.IsChanged");

	AFGHologram_IsChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.GetSupportedSplineModes
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// TArray<EHologramSplinePathMode> out_splineModes                (Parm, OutParm, ZeroConstructor)

void AFGHologram::GetSupportedSplineModes(TArray<EHologramSplinePathMode>* out_splineModes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.GetSupportedSplineModes");

	AFGHologram_GetSupportedSplineModes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_splineModes != nullptr)
		*out_splineModes = params.out_splineModes;
}


// Function FactoryGame.FGHologram.GetSplineMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHologramSplinePathMode        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EHologramSplinePathMode AFGHologram::GetSplineMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.GetSplineMode");

	AFGHologram_GetSplineMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.GetNoSnapMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHologram::GetNoSnapMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.GetNoSnapMode");

	AFGHologram_GetNoSnapMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.GetConstructDisqualifiers
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class UClass*>          out_constructResults           (Parm, OutParm, ZeroConstructor)

void AFGHologram::GetConstructDisqualifiers(TArray<class UClass*>* out_constructResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.GetConstructDisqualifiers");

	AFGHologram_GetConstructDisqualifiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_constructResults != nullptr)
		*out_constructResults = params.out_constructResults;
}


// Function FactoryGame.FGHologram.Client_PlaySnapSound
// (Final, Net, NetReliable, Native, Event, Private, NetClient)

void AFGHologram::Client_PlaySnapSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.Client_PlaySnapSound");

	AFGHologram_Client_PlaySnapSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHologram.CanConstruct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHologram::CanConstruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.CanConstruct");

	AFGHologram_CanConstruct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHologram.AddValidHitClass
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UClass**                 hitClass                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGHologram::AddValidHitClass(class UClass** hitClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHologram.AddValidHitClass");

	AFGHologram_AddValidHitClass_Params params;
	params.hitClass = hitClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableHologram.ReceiveConfigureComponents
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFGBuildable**           inBuildable                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableHologram::ReceiveConfigureComponents(class AFGBuildable** inBuildable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableHologram.ReceiveConfigureComponents");

	AFGBuildableHologram_ReceiveConfigureComponents_Params params;
	params.inBuildable = inBuildable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableHologram.ReceiveConfigureActor
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFGBuildable**           inBuildable                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableHologram::ReceiveConfigureActor(class AFGBuildable** inBuildable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableHologram.ReceiveConfigureActor");

	AFGBuildableHologram_ReceiveConfigureActor_Params params;
	params.inBuildable = inBuildable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAttack.GetStopsMovement
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAttack::STATIC_GetStopsMovement(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetStopsMovement");

	UFGAttack_GetStopsMovement_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetDamageType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGAttack::STATIC_GetDamageType(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetDamageType");

	UFGAttack_GetDamageType_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetDamage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGAttack::STATIC_GetDamage(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetDamage");

	UFGAttack_GetDamage_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetAttackRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGAttack::STATIC_GetAttackRange(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetAttackRange");

	UFGAttack_GetAttackRange_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetAttackMontage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* UFGAttack::STATIC_GetAttackMontage(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetAttackMontage");

	UFGAttack_GetAttackMontage_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetAttackAngle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGAttack::STATIC_GetAttackAngle(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetAttackAngle");

	UFGAttack_GetAttackAngle_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttack.GetAttackActivationDistance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGAttack::STATIC_GetAttackActivationDistance(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttack.GetAttackActivationDistance");

	UFGAttack_GetAttackActivationDistance_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttackMeleeJump.GetPreJumpMontage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimMontage*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimMontage* UFGAttackMeleeJump::STATIC_GetPreJumpMontage(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttackMeleeJump.GetPreJumpMontage");

	UFGAttackMeleeJump_GetPreJumpMontage_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttackMeleeJump.GetJumpVelocity
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGAttackMeleeJump::STATIC_GetJumpVelocity(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttackMeleeJump.GetJumpVelocity");

	UFGAttackMeleeJump_GetJumpVelocity_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttackMeleeJump.GetJumpRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGAttackMeleeJump::STATIC_GetJumpRange(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttackMeleeJump.GetJumpRange");

	UFGAttackMeleeJump_GetJumpRange_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAttackRanged.SpawnProjectile
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor**                 targetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// class AFGEnemy**               sourceActor                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGAttackRanged::SpawnProjectile(class AActor** targetActor, class AFGEnemy** sourceActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttackRanged.SpawnProjectile");

	UFGAttackRanged_SpawnProjectile_Params params;
	params.targetActor = targetActor;
	params.sourceActor = sourceActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAttentionPingActor.SpawnAttentionPingEffects
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFGAttentionPingActor::SpawnAttentionPingEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttentionPingActor.SpawnAttentionPingEffects");

	AFGAttentionPingActor_SpawnAttentionPingEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAttentionPingActor.OnRep_OwningPlayerState
// (Final, Native, Public)

void AFGAttentionPingActor::OnRep_OwningPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttentionPingActor.OnRep_OwningPlayerState");

	AFGAttentionPingActor_OnRep_OwningPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAttentionPingActor.GetOwningPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGPlayerState* AFGAttentionPingActor::GetOwningPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAttentionPingActor.GetOwningPlayerState");

	AFGAttentionPingActor_GetOwningPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMessageBase.GetMessageDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UFGMessageBase::STATIC_GetMessageDefaultObject(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMessageBase.GetMessageDefaultObject");

	UFGMessageBase_GetMessageDefaultObject_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAudioMessage.StartPlayback
// (Final, Native, Public, BlueprintCallable)

void UFGAudioMessage::StartPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.StartPlayback");

	UFGAudioMessage_StartPlayback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAudioMessage.PlayNextDialogue
// (Native, Event, Public, BlueprintEvent)

void UFGAudioMessage::PlayNextDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.PlayNextDialogue");

	UFGAudioMessage_PlayNextDialogue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAudioMessage.GetCurrentDialogue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAudioSubtitlePair      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAudioSubtitlePair UFGAudioMessage::GetCurrentDialogue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.GetCurrentDialogue");

	UFGAudioMessage_GetCurrentDialogue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGAudioMessage.ContinuePlayback
// (Final, Native, Public)

void UFGAudioMessage::ContinuePlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.ContinuePlayback");

	UFGAudioMessage_ContinuePlayback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAudioMessage.CancelPlayback
// (Final, Native, Public, BlueprintCallable)

void UFGAudioMessage::CancelPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.CancelPlayback");

	UFGAudioMessage_CancelPlayback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAudioMessage.AssignOnConcludedDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptDelegate*        concludedDelegate              (Parm, ZeroConstructor)

void UFGAudioMessage::AssignOnConcludedDelegate(struct FScriptDelegate* concludedDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAudioMessage.AssignOnConcludedDelegate");

	UFGAudioMessage_AssignOnConcludedDelegate_Params params;
	params.concludedDelegate = concludedDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGAvailabilityDependency.AreDependenciesMet
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGAvailabilityDependency::AreDependenciesMet(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGAvailabilityDependency.AreDependenciesMet");

	UFGAvailabilityDependency_AreDependenciesMet_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBaseUI.SetPopup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGPopupWidget**         inPopup                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGBaseUI::SetPopup(class UFGPopupWidget** inPopup)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.SetPopup");

	UFGBaseUI_SetPopup_Params params;
	params.inPopup = inPopup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBaseUI.PopPopupQueue
// (Final, Native, Public, BlueprintCallable)

void UFGBaseUI::PopPopupQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.PopPopupQueue");

	UFGBaseUI_PopPopupQueue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBaseUI.GetPopup
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGPopupWidget*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPopupWidget* UFGBaseUI::GetPopup()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.GetPopup");

	UFGBaseUI_GetPopup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBaseUI.CreatePopupWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPopupData*             PopupData                      (Parm)
// class UFGPopupWidget*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPopupWidget* UFGBaseUI::CreatePopupWidget(struct FPopupData* PopupData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.CreatePopupWidget");

	UFGBaseUI_CreatePopupWidget_Params params;
	params.PopupData = PopupData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBaseUI.ClosePopup
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGBaseUI::ClosePopup()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.ClosePopup");

	UFGBaseUI_ClosePopup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBaseUI.AddPopup
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText*                  Title                          (Parm)
// struct FText*                  Body                           (Parm)
// struct FScriptDelegate*        ConfirmClickDelegate           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EPopupId>*         PopupID                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 PopupClass                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGBaseUI::AddPopup(struct FText* Title, struct FText* Body, struct FScriptDelegate* ConfirmClickDelegate, TEnumAsByte<EPopupId>* PopupID, class UClass** PopupClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBaseUI.AddPopup");

	UFGBaseUI_AddPopup_Params params;
	params.Title = Title;
	params.Body = Body;
	params.ConfirmClickDelegate = ConfirmClickDelegate;
	params.PopupID = PopupID;
	params.PopupClass = PopupClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBeacon.PickUpBeacon
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGBeacon::PickUpBeacon(class AFGCharacterPlayer** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBeacon.PickUpBeacon");

	AFGBeacon_PickUpBeacon_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.UpdateUseState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FUseState               State                          (Parm, OutParm, ReferenceParm)
// class UClass**                 newState                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_UpdateUseState(class UClass** newState, struct FUseState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.UpdateUseState");

	UFGBlueprintFunctionLibrary_UpdateUseState_Params params;
	params.newState = newState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (State != nullptr)
		*State = params.State;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.TravelToMainMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_TravelToMainMenu(class APlayerController** PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.TravelToMainMenu");

	UFGBlueprintFunctionLibrary_TravelToMainMenu_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.ShowOutline
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    comp                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// EOutlineColor*                 Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_ShowOutline(class UPrimitiveComponent** comp, EOutlineColor* Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.ShowOutline");

	UFGBlueprintFunctionLibrary_ShowOutline_Params params;
	params.comp = comp;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RoundFloatWithPrecision
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           MaximumFractionalDigits        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBlueprintFunctionLibrary::STATIC_RoundFloatWithPrecision(float* Value, int* MaximumFractionalDigits)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RoundFloatWithPrecision");

	UFGBlueprintFunctionLibrary_RoundFloatWithPrecision_Params params;
	params.Value = Value;
	params.MaximumFractionalDigits = MaximumFractionalDigits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveTrainFromSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_RemoveTrainFromSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveTrainFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveTrainFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveGenericTickObjectFromSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_RemoveGenericTickObjectFromSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveGenericTickObjectFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveGenericTickObjectFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveGainSignificanceObjectFromSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_RemoveGainSignificanceObjectFromSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveGainSignificanceObjectFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveGainSignificanceObjectFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveFromSignificanceManagerGeneric
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_RemoveFromSignificanceManagerGeneric(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveFromSignificanceManagerGeneric");

	UFGBlueprintFunctionLibrary_RemoveFromSignificanceManagerGeneric_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveFactoryObjectFromSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_RemoveFactoryObjectFromSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveFactoryObjectFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveFactoryObjectFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveConveyorBeltFromSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_RemoveConveyorBeltFromSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveConveyorBeltFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveConveyorBeltFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveAudioVolumeFromSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_RemoveAudioVolumeFromSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveAudioVolumeFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveAudioVolumeFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.RemoveAmbientSoundSplineFromSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_RemoveAmbientSoundSplineFromSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.RemoveAmbientSoundSplineFromSignificanceManager");

	UFGBlueprintFunctionLibrary_RemoveAmbientSoundSplineFromSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.OccludeOutlineByComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    comp                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          occlude                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_OccludeOutlineByComponent(class UPrimitiveComponent** comp, bool* occlude)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.OccludeOutlineByComponent");

	UFGBlueprintFunctionLibrary_OccludeOutlineByComponent_Params params;
	params.comp = comp;
	params.occlude = occlude;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.OccludeOutlineByActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          occlude                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_OccludeOutlineByActor(class AActor** Actor, bool* occlude)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.OccludeOutlineByActor");

	UFGBlueprintFunctionLibrary_OccludeOutlineByActor_Params params;
	params.Actor = Actor;
	params.occlude = occlude;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.LogX
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         Base                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBlueprintFunctionLibrary::STATIC_LogX(float* Base, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.LogX");

	UFGBlueprintFunctionLibrary_LogX_Params params;
	params.Base = Base;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.LinearColorToHex
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor*           inColor                        (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGBlueprintFunctionLibrary::STATIC_LinearColorToHex(struct FLinearColor* inColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.LinearColorToHex");

	UFGBlueprintFunctionLibrary_LinearColorToHex_Params params;
	params.inColor = inColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsLocationNearABase
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                InLocation                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         closeDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::STATIC_IsLocationNearABase(class UObject** WorldContext, struct FVector* InLocation, float* closeDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsLocationNearABase");

	UFGBlueprintFunctionLibrary_IsLocationNearABase_Params params;
	params.WorldContext = WorldContext;
	params.InLocation = InLocation;
	params.closeDistance = closeDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsLocallyHumanControlled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn**                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::STATIC_IsLocallyHumanControlled(class APawn** Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsLocallyHumanControlled");

	UFGBlueprintFunctionLibrary_IsLocallyHumanControlled_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsInAlwaysLoadedLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::STATIC_IsInAlwaysLoadedLevel(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsInAlwaysLoadedLevel");

	UFGBlueprintFunctionLibrary_IsInAlwaysLoadedLevel_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsGameWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::STATIC_IsGameWorld(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsGameWorld");

	UFGBlueprintFunctionLibrary_IsGameWorld_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsEditorWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::STATIC_IsEditorWorld(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsEditorWorld");

	UFGBlueprintFunctionLibrary_IsEditorWorld_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.IsAlphaBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::STATIC_IsAlphaBuild()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.IsAlphaBuild");

	UFGBlueprintFunctionLibrary_IsAlphaBuild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.ImpactEffectIsWithinDistance
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         visibleCullDistance            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::STATIC_ImpactEffectIsWithinDistance(class UObject** WorldContext, class APawn** Instigator, struct FVector* SpawnLocation, float* visibleCullDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.ImpactEffectIsWithinDistance");

	UFGBlueprintFunctionLibrary_ImpactEffectIsWithinDistance_Params params;
	params.WorldContext = WorldContext;
	params.Instigator = Instigator;
	params.SpawnLocation = SpawnLocation;
	params.visibleCullDistance = visibleCullDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.ImpactEffectIsRelevant
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         visibleCullDistance            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         alwaysSuccessDistance          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          skipLOSCheck                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::STATIC_ImpactEffectIsRelevant(class UObject** WorldContext, class APawn** Instigator, struct FVector* SpawnLocation, float* visibleCullDistance, float* alwaysSuccessDistance, bool* skipLOSCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.ImpactEffectIsRelevant");

	UFGBlueprintFunctionLibrary_ImpactEffectIsRelevant_Params params;
	params.WorldContext = WorldContext;
	params.Instigator = Instigator;
	params.SpawnLocation = SpawnLocation;
	params.visibleCullDistance = visibleCullDistance;
	params.alwaysSuccessDistance = alwaysSuccessDistance;
	params.skipLOSCheck = skipLOSCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.HideOutline
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    comp                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_HideOutline(class UPrimitiveComponent** comp)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.HideOutline");

	UFGBlueprintFunctionLibrary_HideOutline_Params params;
	params.comp = comp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetVersionString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGBlueprintFunctionLibrary::STATIC_GetVersionString()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetVersionString");

	UFGBlueprintFunctionLibrary_GetVersionString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetSubCategoriesForSchematicCategory
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 buildCategory                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_subCategories              (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::STATIC_GetSubCategoriesForSchematicCategory(class UObject** WorldContext, class UClass** buildCategory, TArray<class UClass*>* out_subCategories)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetSubCategoriesForSchematicCategory");

	UFGBlueprintFunctionLibrary_GetSubCategoriesForSchematicCategory_Params params;
	params.WorldContext = WorldContext;
	params.buildCategory = buildCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_subCategories != nullptr)
		*out_subCategories = params.out_subCategories;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetOuterActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                Obj                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFGBlueprintFunctionLibrary::STATIC_GetOuterActor(class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetOuterActor");

	UFGBlueprintFunctionLibrary_GetOuterActor_Params params;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGBlueprintFunctionLibrary::STATIC_GetLanguage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetLanguage");

	UFGBlueprintFunctionLibrary_GetLanguage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetComponentFlagSoftLanding
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UFGBlueprintFunctionLibrary::STATIC_GetComponentFlagSoftLanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetComponentFlagSoftLanding");

	UFGBlueprintFunctionLibrary_GetComponentFlagSoftLanding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetCategoriesWithAffordableRecipes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     playerPawn                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 forProducer                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGBlueprintFunctionLibrary::STATIC_GetCategoriesWithAffordableRecipes(class AFGCharacterPlayer** playerPawn, class UClass** forProducer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetCategoriesWithAffordableRecipes");

	UFGBlueprintFunctionLibrary_GetCategoriesWithAffordableRecipes_Params params;
	params.playerPawn = playerPawn;
	params.forProducer = forProducer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableSubCategoriesForCategory
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 buildCategory                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_subCategories              (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::STATIC_GetAvailableSubCategoriesForCategory(class UObject** WorldContext, class UClass** buildCategory, TArray<class UClass*>* out_subCategories)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableSubCategoriesForCategory");

	UFGBlueprintFunctionLibrary_GetAvailableSubCategoriesForCategory_Params params;
	params.WorldContext = WorldContext;
	params.buildCategory = buildCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_subCategories != nullptr)
		*out_subCategories = params.out_subCategories;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableRecipesInSubCategory
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 subCategory                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::STATIC_GetAvailableRecipesInSubCategory(class UObject** WorldContext, class UClass** subCategory, TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableRecipesInSubCategory");

	UFGBlueprintFunctionLibrary_GetAvailableRecipesInSubCategory_Params params;
	params.WorldContext = WorldContext;
	params.subCategory = subCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableRecipesInCategory
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 buildCategory                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::STATIC_GetAvailableRecipesInCategory(class UObject** WorldContext, class UClass** buildCategory, TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAvailableRecipesInCategory");

	UFGBlueprintFunctionLibrary_GetAvailableRecipesInCategory_Params params;
	params.WorldContext = WorldContext;
	params.buildCategory = buildCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAllWidgetsOfClassInHierarchy
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UWidget**                hierarchyContext               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass**                 WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UWidget*>         FoundWidgets                   (Parm, OutParm, ZeroConstructor)

void UFGBlueprintFunctionLibrary::STATIC_GetAllWidgetsOfClassInHierarchy(class UWidget** hierarchyContext, class UClass** WidgetClass, TArray<class UWidget*>* FoundWidgets)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAllWidgetsOfClassInHierarchy");

	UFGBlueprintFunctionLibrary_GetAllWidgetsOfClassInHierarchy_Params params;
	params.hierarchyContext = hierarchyContext;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (FoundWidgets != nullptr)
		*FoundWidgets = params.FoundWidgets;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAllItemsInCategory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 itemCategory                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGBlueprintFunctionLibrary::STATIC_GetAllItemsInCategory(class UObject** WorldContext, class UClass** itemCategory)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAllItemsInCategory");

	UFGBlueprintFunctionLibrary_GetAllItemsInCategory_Params params;
	params.WorldContext = WorldContext;
	params.itemCategory = itemCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAllDescriptorsSorted
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_descriptors                (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::STATIC_GetAllDescriptorsSorted(class UObject** WorldContext, TArray<class UClass*>* out_descriptors)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAllDescriptorsSorted");

	UFGBlueprintFunctionLibrary_GetAllDescriptorsSorted_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_descriptors != nullptr)
		*out_descriptors = params.out_descriptors;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.GetAllBuildCategories
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_buildCategories            (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBlueprintFunctionLibrary::STATIC_GetAllBuildCategories(class UObject** WorldContext, TArray<class UClass*>* out_buildCategories)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.GetAllBuildCategories");

	UFGBlueprintFunctionLibrary_GetAllBuildCategories_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_buildCategories != nullptr)
		*out_buildCategories = params.out_buildCategories;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.CreateSessionAndTravelToMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController**      Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class FString*                 mapName                        (Parm, ZeroConstructor)
// class FString*                 options                        (Parm, ZeroConstructor)
// class FString*                 SessionName                    (Parm, ZeroConstructor)
// TEnumAsByte<ESessionVisibility>* sessionVisibility              (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_CreateSessionAndTravelToMap(class APlayerController** Player, class FString* mapName, class FString* options, class FString* SessionName, TEnumAsByte<ESessionVisibility>* sessionVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.CreateSessionAndTravelToMap");

	UFGBlueprintFunctionLibrary_CreateSessionAndTravelToMap_Params params;
	params.Player = Player;
	params.mapName = mapName;
	params.options = options;
	params.SessionName = SessionName;
	params.sessionVisibility = sessionVisibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.CmS2KmH
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         CmS                            (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBlueprintFunctionLibrary::STATIC_CmS2KmH(float* CmS)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.CmS2KmH");

	UFGBlueprintFunctionLibrary_CmS2KmH_Params params;
	params.CmS = CmS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.ClosePopup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController**      Controller                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_ClosePopup(class APlayerController** Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.ClosePopup");

	UFGBlueprintFunctionLibrary_ClosePopup_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.Cheat_GetAllDescriptors
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UClass*>          out_descriptors                (Parm, OutParm, ZeroConstructor)

void UFGBlueprintFunctionLibrary::STATIC_Cheat_GetAllDescriptors(TArray<class UClass*>* out_descriptors)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.Cheat_GetAllDescriptors");

	UFGBlueprintFunctionLibrary_Cheat_GetAllDescriptors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_descriptors != nullptr)
		*out_descriptors = params.out_descriptors;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.ChangeLanguage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString*                 Target                         (Parm, ZeroConstructor)

void UFGBlueprintFunctionLibrary::STATIC_ChangeLanguage(class FString* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.ChangeLanguage");

	UFGBlueprintFunctionLibrary_ChangeLanguage_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.CanBeOnConveyor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBlueprintFunctionLibrary::STATIC_CanBeOnConveyor(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.CanBeOnConveyor");

	UFGBlueprintFunctionLibrary_CanBeOnConveyor_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddTrainToSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_AddTrainToSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddTrainToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddTrainToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddPopupWithCloseDelegate
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APlayerController**      Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  Title                          (Parm)
// struct FText*                  Body                           (Parm)
// struct FScriptDelegate*        CloseDelegate                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EPopupId>*         PopupID                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 PopupClass                     (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                popupInstigator                (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_AddPopupWithCloseDelegate(class APlayerController** Controller, struct FText* Title, struct FText* Body, struct FScriptDelegate* CloseDelegate, TEnumAsByte<EPopupId>* PopupID, class UClass** PopupClass, class UObject** popupInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddPopupWithCloseDelegate");

	UFGBlueprintFunctionLibrary_AddPopupWithCloseDelegate_Params params;
	params.Controller = Controller;
	params.Title = Title;
	params.Body = Body;
	params.CloseDelegate = CloseDelegate;
	params.PopupID = PopupID;
	params.PopupClass = PopupClass;
	params.popupInstigator = popupInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddPopup
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APlayerController**      Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  Title                          (Parm)
// struct FText*                  Body                           (Parm)
// struct FScriptDelegate*        ConfirmClickDelegate           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EPopupId>*         PopupID                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 PopupClass                     (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                popupInstigator                (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_AddPopup(class APlayerController** Controller, struct FText* Title, struct FText* Body, struct FScriptDelegate* ConfirmClickDelegate, TEnumAsByte<EPopupId>* PopupID, class UClass** PopupClass, class UObject** popupInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddPopup");

	UFGBlueprintFunctionLibrary_AddPopup_Params params;
	params.Controller = Controller;
	params.Title = Title;
	params.Body = Body;
	params.ConfirmClickDelegate = ConfirmClickDelegate;
	params.PopupID = PopupID;
	params.PopupClass = PopupClass;
	params.popupInstigator = popupInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddPipelineToSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_AddPipelineToSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddPipelineToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddPipelineToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddGenericTickObjectToSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_AddGenericTickObjectToSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddGenericTickObjectToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddGenericTickObjectToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddGainSignificanceObjectToSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         desiredGainDistance            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_AddGainSignificanceObjectToSignificanceManager(class UObject** WorldContextObject, class UObject** Obj, float* desiredGainDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddGainSignificanceObjectToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddGainSignificanceObjectToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;
	params.desiredGainDistance = desiredGainDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddFactoryObjectToSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_AddFactoryObjectToSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddFactoryObjectToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddFactoryObjectToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddConveyorBeltToSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_AddConveyorBeltToSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddConveyorBeltToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddConveyorBeltToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddAudioVolumeToSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_AddAudioVolumeToSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddAudioVolumeToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddAudioVolumeToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBlueprintFunctionLibrary.AddAmbientSoundSplineToSignificanceManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                Obj                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGBlueprintFunctionLibrary::STATIC_AddAmbientSoundSplineToSignificanceManager(class UObject** WorldContextObject, class UObject** Obj)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBlueprintFunctionLibrary.AddAmbientSoundSplineToSignificanceManager");

	UFGBlueprintFunctionLibrary_AddAmbientSoundSplineToSignificanceManager_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Obj = Obj;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBoundedTextRenderComponent.AssignBoundingBox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBoxComponent**          BoxComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGBoundedTextRenderComponent::AssignBoundingBox(class UBoxComponent** BoxComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBoundedTextRenderComponent.AssignBoundingBox");

	UFGBoundedTextRenderComponent_AssignBoundingBox_Params params;
	params.BoxComponent = BoxComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.ShowHighlightEffect
// (Final, Native, Public, BlueprintCallable)

void AFGBuildable::ShowHighlightEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.ShowHighlightEffect");

	AFGBuildable_ShowHighlightEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.RemoveHighlightEffect
// (Final, Native, Public, BlueprintCallable)

void AFGBuildable::RemoveHighlightEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.RemoveHighlightEffect");

	AFGBuildable_RemoveHighlightEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.ReapplyColorSlot
// (Final, Native, Protected, BlueprintCallable)

void AFGBuildable::ReapplyColorSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.ReapplyColorSlot");

	AFGBuildable_ReapplyColorSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.PlayDismantleSound
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AFGBuildable::PlayDismantleSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.PlayDismantleSound");

	AFGBuildable_PlayDismantleSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.PlayDismantleEffects
// (Net, NetReliable, Native, Event, NetMulticast, Public)

void AFGBuildable::PlayDismantleEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.PlayDismantleEffects");

	AFGBuildable_PlayDismantleEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.PlayConstructSound
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AFGBuildable::PlayConstructSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.PlayConstructSound");

	AFGBuildable_PlayConstructSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.PlayBuildEffects
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 inInstigator                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildable::PlayBuildEffects(class AActor** inInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.PlayBuildEffects");

	AFGBuildable_PlayBuildEffects_Params params;
	params.inInstigator = inInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.OnRep_DidFirstTimeUse
// (Final, Native, Private)

void AFGBuildable::OnRep_DidFirstTimeUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.OnRep_DidFirstTimeUse");

	AFGBuildable_OnRep_DidFirstTimeUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.OnRep_ColorSlot
// (Final, Native, Private)

void AFGBuildable::OnRep_ColorSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.OnRep_ColorSlot");

	AFGBuildable_OnRep_ColorSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.GetNumPowerConnections
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AFGBuildable::GetNumPowerConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.GetNumPowerConnections");

	AFGBuildable_GetNumPowerConnections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildable.GetMainMeshes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UMeshComponent*>  ReturnValue                    (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class UMeshComponent*> AFGBuildable::GetMainMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.GetMainMeshes");

	AFGBuildable_GetMainMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildable.GetInteractWidgetClass
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGBuildable::GetInteractWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.GetInteractWidgetClass");

	AFGBuildable_GetInteractWidgetClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildable.GetDismantleBlueprintReturns
// (Event, Protected, HasOutParms, BlueprintEvent, Const)
// Parameters:
// TArray<struct FInventoryStack> out_returns                    (Parm, OutParm, ZeroConstructor)

void AFGBuildable::GetDismantleBlueprintReturns(TArray<struct FInventoryStack>* out_returns)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.GetDismantleBlueprintReturns");

	AFGBuildable_GetDismantleBlueprintReturns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_returns != nullptr)
		*out_returns = params.out_returns;
}


// Function FactoryGame.FGBuildable.GetClearanceComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UShapeComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UShapeComponent* AFGBuildable::GetClearanceComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.GetClearanceComponent");

	AFGBuildable_GetClearanceComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildable.Factory_ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildable::Factory_ReceiveTick(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.Factory_ReceiveTick");

	AFGBuildable_Factory_ReceiveTick_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildable.Factory_PeekOutput
// (Native, Event, Protected, HasOutParms, BlueprintEvent, Const)
// Parameters:
// class UFGFactoryConnectionComponent** Connection                     (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<struct FInventoryItem>  out_items                      (Parm, OutParm, ZeroConstructor)
// class UClass**                 Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildable::Factory_PeekOutput(class UFGFactoryConnectionComponent** Connection, class UClass** Type, TArray<struct FInventoryItem>* out_items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.Factory_PeekOutput");

	AFGBuildable_Factory_PeekOutput_Params params;
	params.Connection = Connection;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_items != nullptr)
		*out_items = params.out_items;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildable.Factory_GrabOutput
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class UFGFactoryConnectionComponent** Connection                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FInventoryItem          out_item                       (Parm, OutParm)
// float                          out_OffsetBeyond               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildable::Factory_GrabOutput(class UFGFactoryConnectionComponent** Connection, class UClass** Type, struct FInventoryItem* out_item, float* out_OffsetBeyond)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildable.Factory_GrabOutput");

	AFGBuildable_Factory_GrabOutput_Params params;
	params.Connection = Connection;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_item != nullptr)
		*out_item = params.out_item;
	if (out_OffsetBeyond != nullptr)
		*out_OffsetBeyond = params.out_OffsetBeyond;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.TryStopProductionLoopEffects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          didStopProducing               (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::TryStopProductionLoopEffects(bool* didStopProducing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.TryStopProductionLoopEffects");

	AFGBuildableFactory_TryStopProductionLoopEffects_Params params;
	params.didStopProducing = didStopProducing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.TryStopIdlingLoopEffects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          didLosePower                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::TryStopIdlingLoopEffects(bool* didLosePower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.TryStopIdlingLoopEffects");

	AFGBuildableFactory_TryStopIdlingLoopEffects_Params params;
	params.didLosePower = didLosePower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.TryStartProductionLoopEffects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          didStartProducing              (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::TryStartProductionLoopEffects(bool* didStartProducing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.TryStartProductionLoopEffects");

	AFGBuildableFactory_TryStartProductionLoopEffects_Params params;
	params.didStartProducing = didStartProducing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.TryStartIdlingLoopEffects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          didGainPower                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::TryStartIdlingLoopEffects(bool* didGainPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.TryStartIdlingLoopEffects");

	AFGBuildableFactory_TryStartIdlingLoopEffects_Params params;
	params.didGainPower = didGainPower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.StopProductionLoopEffects
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          didStopProducing               (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::StopProductionLoopEffects(bool* didStopProducing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.StopProductionLoopEffects");

	AFGBuildableFactory_StopProductionLoopEffects_Params params;
	params.didStopProducing = didStopProducing;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.StopIdlingLoopEffects
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          didLosePower                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::StopIdlingLoopEffects(bool* didLosePower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.StopIdlingLoopEffects");

	AFGBuildableFactory_StopIdlingLoopEffects_Params params;
	params.didLosePower = didLosePower;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.StartProductionLoopEffects
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          didStartProducing              (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::StartProductionLoopEffects(bool* didStartProducing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.StartProductionLoopEffects");

	AFGBuildableFactory_StartProductionLoopEffects_Params params;
	params.didStartProducing = didStartProducing;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.StartIdlingLoopEffects
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          didGainPower                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::StartIdlingLoopEffects(bool* didGainPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.StartIdlingLoopEffects");

	AFGBuildableFactory_StartIdlingLoopEffects_Params params;
	params.didGainPower = didGainPower;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.SetPendingPotential
// (Native, Public, BlueprintCallable)
// Parameters:
// float*                         newPendingPotential            (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::SetPendingPotential(float* newPendingPotential)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.SetPendingPotential");

	AFGBuildableFactory_SetPendingPotential_Params params;
	params.newPendingPotential = newPendingPotential;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.SetIsProductionPaused
// (Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsPaused                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::SetIsProductionPaused(bool* IsPaused)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.SetIsProductionPaused");

	AFGBuildableFactory_SetIsProductionPaused_Params params;
	params.IsPaused = IsPaused;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.RunsOnPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::RunsOnPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.RunsOnPower");

	AFGBuildableFactory_RunsOnPower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.ReceiveUpdateEffects
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::ReceiveUpdateEffects(float* DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.ReceiveUpdateEffects");

	AFGBuildableFactory_ReceiveUpdateEffects_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnRep_ReplicationDetailActor
// (Native, Protected)

void AFGBuildableFactory::OnRep_ReplicationDetailActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnRep_ReplicationDetailActor");

	AFGBuildableFactory_OnRep_ReplicationDetailActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnRep_IsProducing
// (Final, Native, Private)

void AFGBuildableFactory::OnRep_IsProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnRep_IsProducing");

	AFGBuildableFactory_OnRep_IsProducing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnPotentialInventoryItemRemoved
// (Final, Native, Private)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           numRemoved                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::OnPotentialInventoryItemRemoved(class UClass** ItemClass, int* numRemoved)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnPotentialInventoryItemRemoved");

	AFGBuildableFactory_OnPotentialInventoryItemRemoved_Params params;
	params.ItemClass = ItemClass;
	params.numRemoved = numRemoved;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnIsProducingChanged_Native
// (Final, Native, Protected)
// Parameters:
// bool*                          newIsProducing                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::OnIsProducingChanged_Native(bool* newIsProducing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnIsProducingChanged_Native");

	AFGBuildableFactory_OnIsProducingChanged_Native_Params params;
	params.newIsProducing = newIsProducing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnIsProducingChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          newIsProducing                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::OnIsProducingChanged(bool* newIsProducing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnIsProducingChanged");

	AFGBuildableFactory_OnIsProducingChanged_Params params;
	params.newIsProducing = newIsProducing;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnHasPowerChanged_Native
// (Final, Native, Protected)
// Parameters:
// bool*                          newHasPower                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::OnHasPowerChanged_Native(bool* newHasPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnHasPowerChanged_Native");

	AFGBuildableFactory_OnHasPowerChanged_Native_Params params;
	params.newHasPower = newHasPower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.OnHasPowerChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          newHasPower                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::OnHasPowerChanged(bool* newHasPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.OnHasPowerChanged");

	AFGBuildableFactory_OnHasPowerChanged_Params params;
	params.newHasPower = newHasPower;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.IsProductionPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::IsProductionPaused()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.IsProductionPaused");

	AFGBuildableFactory_IsProductionPaused_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.IsProducing
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::IsProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.IsProducing");

	AFGBuildableFactory_IsProducing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.IsConfigured
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::IsConfigured()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.IsConfigured");

	AFGBuildableFactory_IsConfigured_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.HasPower
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::HasPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.HasPower");

	AFGBuildableFactory_HasPower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetScaledFluidStackSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableFactory::GetScaledFluidStackSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetScaledFluidStackSize");

	AFGBuildableFactory_GetScaledFluidStackSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProductivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetProductivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProductivity");

	AFGBuildableFactory_GetProductivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProductionProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetProductionProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProductionProgress");

	AFGBuildableFactory_GetProductionProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProductionIndicatorStatus
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EProductionStatus              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EProductionStatus AFGBuildableFactory::GetProductionIndicatorStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProductionIndicatorStatus");

	AFGBuildableFactory_GetProductionIndicatorStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProductionCycleTimeForRecipe
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetProductionCycleTimeForRecipe(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProductionCycleTimeForRecipe");

	AFGBuildableFactory_GetProductionCycleTimeForRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProductionCycleTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetProductionCycleTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProductionCycleTime");

	AFGBuildableFactory_GetProductionCycleTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetProducingPowerConsumption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetProducingPowerConsumption()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetProducingPowerConsumption");

	AFGBuildableFactory_GetProducingPowerConsumption_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetPowerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPowerInfoComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPowerInfoComponent* AFGBuildableFactory::GetPowerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetPowerInfo");

	AFGBuildableFactory_GetPowerInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetPotentialInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableFactory::GetPotentialInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetPotentialInventory");

	AFGBuildableFactory_GetPotentialInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetPendingPotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetPendingPotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetPendingPotential");

	AFGBuildableFactory_GetPendingPotential_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetMinPotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetMinPotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetMinPotential");

	AFGBuildableFactory_GetMinPotential_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetMaxPossiblePotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetMaxPossiblePotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetMaxPossiblePotential");

	AFGBuildableFactory_GetMaxPossiblePotential_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetIsSignificant
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::GetIsSignificant()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetIsSignificant");

	AFGBuildableFactory_GetIsSignificant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetFluidInventoryStackSizeScalar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetFluidInventoryStackSizeScalar()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetFluidInventoryStackSizeScalar");

	AFGBuildableFactory_GetFluidInventoryStackSizeScalar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetDefaultProductionCycleTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetDefaultProductionCycleTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetDefaultProductionCycleTime");

	AFGBuildableFactory_GetDefaultProductionCycleTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetDefaultProducingPowerConsumption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetDefaultProducingPowerConsumption()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetDefaultProducingPowerConsumption");

	AFGBuildableFactory_GetDefaultProducingPowerConsumption_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetCurrentPotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetCurrentPotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetCurrentPotential");

	AFGBuildableFactory_GetCurrentPotential_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetCurrentMaxPotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::GetCurrentMaxPotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetCurrentMaxPotential");

	AFGBuildableFactory_GetCurrentMaxPotential_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetConnectionComponents
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// TArray<class UFGFactoryConnectionComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UFGFactoryConnectionComponent*> AFGBuildableFactory::GetConnectionComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetConnectionComponents");

	AFGBuildableFactory_GetConnectionComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.GetCanChangePotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::GetCanChangePotential()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.GetCanChangePotential");

	AFGBuildableFactory_GetCanChangePotential_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.Factory_ReceiveTickProducing
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::Factory_ReceiveTickProducing(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.Factory_ReceiveTickProducing");

	AFGBuildableFactory_Factory_ReceiveTickProducing_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.Factory_ReceiveStopProducing
// (Event, Protected, BlueprintEvent)

void AFGBuildableFactory::Factory_ReceiveStopProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.Factory_ReceiveStopProducing");

	AFGBuildableFactory_Factory_ReceiveStopProducing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.Factory_ReceiveStartProducing
// (Event, Protected, BlueprintEvent)

void AFGBuildableFactory::Factory_ReceiveStartProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.Factory_ReceiveStartProducing");

	AFGBuildableFactory_Factory_ReceiveStartProducing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.Factory_PushPipeOutput
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float*                         dt                             (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::Factory_PushPipeOutput(float* dt)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.Factory_PushPipeOutput");

	AFGBuildableFactory_Factory_PushPipeOutput_Params params;
	params.dt = dt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.Factory_PullPipeInput
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float*                         dt                             (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableFactory::Factory_PullPipeInput(float* dt)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.Factory_PullPipeInput");

	AFGBuildableFactory_Factory_PullPipeInput_Params params;
	params.dt = dt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.Factory_CollectInput
// (Native, Event, Protected, BlueprintEvent)

void AFGBuildableFactory::Factory_CollectInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.Factory_CollectInput");

	AFGBuildableFactory_Factory_CollectInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableFactory.CanProduce
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableFactory::CanProduce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.CanProduce");

	AFGBuildableFactory_CanProduce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.CalcProductionCycleTimeForPotential
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         potential                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::CalcProductionCycleTimeForPotential(float* potential)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.CalcProductionCycleTimeForPotential");

	AFGBuildableFactory_CalcProductionCycleTimeForPotential_Params params;
	params.potential = potential;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableFactory.CalcProducingPowerConsumptionForPotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         potential                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableFactory::CalcProducingPowerConsumptionForPotential(float* potential)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableFactory.CalcProducingPowerConsumptionForPotential");

	AFGBuildableFactory_CalcProducingPowerConsumptionForPotential_Params params;
	params.potential = potential;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.SetRecipe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableManufacturer::SetRecipe(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.SetRecipe");

	AFGBuildableManufacturer_SetRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableManufacturer.OnRep_CurrentRecipe
// (Final, Native, Protected)

void AFGBuildableManufacturer::OnRep_CurrentRecipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.OnRep_CurrentRecipe");

	AFGBuildableManufacturer_OnRep_CurrentRecipe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableManufacturer.MoveOrDropOutputInventory
// (Native, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableManufacturer::MoveOrDropOutputInventory(class AFGCharacterPlayer** Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.MoveOrDropOutputInventory");

	AFGBuildableManufacturer_MoveOrDropOutputInventory_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.MoveOrDropInputInventory
// (Native, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableManufacturer::MoveOrDropInputInventory(class AFGCharacterPlayer** Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.MoveOrDropInputInventory");

	AFGBuildableManufacturer_MoveOrDropInputInventory_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.GetOutputInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableManufacturer::GetOutputInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.GetOutputInventory");

	AFGBuildableManufacturer_GetOutputInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.GetManufacturingSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableManufacturer::GetManufacturingSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.GetManufacturingSpeed");

	AFGBuildableManufacturer_GetManufacturingSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.GetInputInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableManufacturer::GetInputInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.GetInputInventory");

	AFGBuildableManufacturer_GetInputInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.GetCurrentRecipe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGBuildableManufacturer::GetCurrentRecipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.GetCurrentRecipe");

	AFGBuildableManufacturer_GetCurrentRecipe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableManufacturer.GetAvailableRecipes
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor)

void AFGBuildableManufacturer::GetAvailableRecipes(TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableManufacturer.GetAvailableRecipes");

	AFGBuildableManufacturer_GetAvailableRecipes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGBuildableAutomatedWorkBench.SetManufacturingSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newManufacturingSpeed          (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableAutomatedWorkBench::SetManufacturingSpeed(float* newManufacturingSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableAutomatedWorkBench.SetManufacturingSpeed");

	AFGBuildableAutomatedWorkBench_SetManufacturingSpeed_Params params;
	params.newManufacturingSpeed = newManufacturingSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableCheatFluidSink.GetMaxContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableCheatFluidSink::GetMaxContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableCheatFluidSink.GetMaxContent");

	AFGBuildableCheatFluidSink_GetMaxContent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableCheatFluidSpawner.SetResourceType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Type                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableCheatFluidSpawner::SetResourceType(class UClass** Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableCheatFluidSpawner.SetResourceType");

	AFGBuildableCheatFluidSpawner_SetResourceType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableConverter.SetupItemFilter
// (Final, Native, Protected)

void AFGBuildableConverter::SetupItemFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConverter.SetupItemFilter");

	AFGBuildableConverter_SetupItemFilter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableConverter.GetNumberOfInputs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableConverter::GetNumberOfInputs()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConverter.GetNumberOfInputs");

	AFGBuildableConverter_GetNumberOfInputs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableConverter.FilterIngredientClasses
// (Final, Native, Protected, Const)
// Parameters:
// class UClass**                 Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableConverter::FilterIngredientClasses(class UClass** Object, int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConverter.FilterIngredientClasses");

	AFGBuildableConverter_FilterIngredientClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRemoteCallObject.Server_ConstructHologram
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FNetConstructionID*     NetConstructionID              (Parm)
// struct FConstructHologramMessage* MESSAGE                        (Parm)

void UFGRemoteCallObject::Server_ConstructHologram(struct FNetConstructionID* NetConstructionID, struct FConstructHologramMessage* MESSAGE)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRemoteCallObject.Server_ConstructHologram");

	UFGRemoteCallObject_Server_ConstructHologram_Params params;
	params.NetConstructionID = NetConstructionID;
	params.MESSAGE = MESSAGE;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRemoteCallObject.GetGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGGameState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGGameState* UFGRemoteCallObject::GetGameState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRemoteCallObject.GetGameState");

	UFGRemoteCallObject_GetGameState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGConveyorRemoteCallObject.Server_OnUse
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AFGBuildableConveyorBelt** Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           ItemIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int8_t*                        repVersion                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGConveyorRemoteCallObject::Server_OnUse(class AFGBuildableConveyorBelt** Target, class AFGCharacterPlayer** byCharacter, int* ItemIndex, int8_t* repVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConveyorRemoteCallObject.Server_OnUse");

	UFGConveyorRemoteCallObject_Server_OnUse_Params params;
	params.Target = Target;
	params.byCharacter = byCharacter;
	params.ItemIndex = ItemIndex;
	params.repVersion = repVersion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableConveyorBase.GetIsSignificant
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableConveyorBase::GetIsSignificant()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConveyorBase.GetIsSignificant");

	AFGBuildableConveyorBase_GetIsSignificant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableConveyorBelt.GetSplineMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* AFGBuildableConveyorBelt::GetSplineMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConveyorBelt.GetSplineMesh");

	AFGBuildableConveyorBelt_GetSplineMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableConveyorBelt.GetSplineData
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// TArray<struct FSplinePointData> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FSplinePointData> AFGBuildableConveyorBelt::GetSplineData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConveyorBelt.GetSplineData");

	AFGBuildableConveyorBelt_GetSplineData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableConveyorBelt.GetSplineComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USplineComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USplineComponent* AFGBuildableConveyorBelt::GetSplineComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConveyorBelt.GetSplineComponent");

	AFGBuildableConveyorBelt_GetSplineComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableConveyorLift.OnRep_TopTransform
// (Final, Native, Private)

void AFGBuildableConveyorLift::OnRep_TopTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableConveyorLift.OnRep_TopTransform");

	AFGBuildableConveyorLift_OnRep_TopTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDecor.SetDecorMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMesh**            Mesh                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableDecor::SetDecorMesh(class UStaticMesh** Mesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDecor.SetDecorMesh");

	AFGBuildableDecor_SetDecorMesh_Params params;
	params.Mesh = Mesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDecor.GetDecorMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* AFGBuildableDecor::GetDecorMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDecor.GetDecorMesh");

	AFGBuildableDecor_GetDecorMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.Undock
// (Native, Public, BlueprintCallable)

void AFGBuildableDockingStation::Undock()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.Undock");

	AFGBuildableDockingStation_Undock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.SetIsInLoadMode
// (Native, Public, BlueprintCallable)
// Parameters:
// bool*                          isInLoadMode                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableDockingStation::SetIsInLoadMode(bool* isInLoadMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.SetIsInLoadMode");

	AFGBuildableDockingStation_SetIsInLoadMode_Params params;
	params.isInLoadMode = isInLoadMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.OnTransferComplete
// (Event, Public, BlueprintEvent)

void AFGBuildableDockingStation::OnTransferComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.OnTransferComplete");

	AFGBuildableDockingStation_OnTransferComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.OnRep_FuelInventory
// (Final, Native, Protected)

void AFGBuildableDockingStation::OnRep_FuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.OnRep_FuelInventory");

	AFGBuildableDockingStation_OnRep_FuelInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.OnBeginUnloadVehicle
// (Event, Public, BlueprintEvent)

void AFGBuildableDockingStation::OnBeginUnloadVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.OnBeginUnloadVehicle");

	AFGBuildableDockingStation_OnBeginUnloadVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.OnBeginLoadVehicle
// (Event, Public, BlueprintEvent)

void AFGBuildableDockingStation::OnBeginLoadVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.OnBeginLoadVehicle");

	AFGBuildableDockingStation_OnBeginLoadVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableDockingStation.IsLoadUnloading
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableDockingStation::IsLoadUnloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.IsLoadUnloading");

	AFGBuildableDockingStation_IsLoadUnloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.GetIsInLoadMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableDockingStation::GetIsInLoadMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.GetIsInLoadMode");

	AFGBuildableDockingStation_GetIsInLoadMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.GetInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableDockingStation::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.GetInventory");

	AFGBuildableDockingStation_GetInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.GetFuelInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableDockingStation::GetFuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.GetFuelInventory");

	AFGBuildableDockingStation_GetFuelInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.GetDockedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFGBuildableDockingStation::GetDockedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.GetDockedActor");

	AFGBuildableDockingStation_GetDockedActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.FilterFuelClasses
// (Final, Native, Protected, Const)
// Parameters:
// class UClass**                 Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableDockingStation::FilterFuelClasses(class UClass** Object, int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.FilterFuelClasses");

	AFGBuildableDockingStation_FilterFuelClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableDockingStation.Dock
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableDockingStation::Dock(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableDockingStation.Dock");

	AFGBuildableDockingStation_Dock_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.IsFuseTriggered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGenerator::IsFuseTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.IsFuseTriggered");

	AFGBuildableGenerator_IsFuseTriggered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.GetPowerProductionCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGenerator::GetPowerProductionCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.GetPowerProductionCapacity");

	AFGBuildableGenerator_GetPowerProductionCapacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.GetLoadPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGenerator::GetLoadPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.GetLoadPercentage");

	AFGBuildableGenerator_GetLoadPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.GetDefaultPowerProductionCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGenerator::GetDefaultPowerProductionCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.GetDefaultPowerProductionCapacity");

	AFGBuildableGenerator_GetDefaultPowerProductionCapacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.Factory_TickPowerProduction
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float*                         dt                             (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableGenerator::Factory_TickPowerProduction(float* dt)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.Factory_TickPowerProduction");

	AFGBuildableGenerator_Factory_TickPowerProduction_Params params;
	params.dt = dt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableGenerator.Factory_StopPowerProduction
// (Native, Event, Protected, BlueprintEvent)

void AFGBuildableGenerator::Factory_StopPowerProduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.Factory_StopPowerProduction");

	AFGBuildableGenerator_Factory_StopPowerProduction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableGenerator.Factory_StartPowerProduction
// (Native, Event, Protected, BlueprintEvent)

void AFGBuildableGenerator::Factory_StartPowerProduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.Factory_StartPowerProduction");

	AFGBuildableGenerator_Factory_StartPowerProduction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableGenerator.CanStartPowerProduction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGenerator::CanStartPowerProduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.CanStartPowerProduction");

	AFGBuildableGenerator_CanStartPowerProduction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGenerator.CalcPowerProductionCapacityForPotential
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         potential                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGenerator::CalcPowerProductionCapacityForPotential(float* potential)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGenerator.CalcPowerProductionCapacityForPotential");

	AFGBuildableGenerator_CalcPowerProductionCapacityForPotential_Params params;
	params.potential = potential;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.OnRep_FuelInventory
// (Final, Native, Private)

void AFGBuildableGeneratorFuel::OnRep_FuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.OnRep_FuelInventory");

	AFGBuildableGeneratorFuel_OnRep_FuelInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableGeneratorFuel.IsValidSupplementalResource
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGeneratorFuel::IsValidSupplementalResource(class UClass** Resource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.IsValidSupplementalResource");

	AFGBuildableGeneratorFuel_IsValidSupplementalResource_Params params;
	params.Resource = Resource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.IsValidFuel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGeneratorFuel::IsValidFuel(class UClass** Resource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.IsValidFuel");

	AFGBuildableGeneratorFuel_IsValidFuel_Params params;
	params.Resource = Resource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.HasSuppleentalResource
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGeneratorFuel::HasSuppleentalResource()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.HasSuppleentalResource");

	AFGBuildableGeneratorFuel_HasSuppleentalResource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.HasFuel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGeneratorFuel::HasFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.HasFuel");

	AFGBuildableGeneratorFuel_HasFuel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetSupplementalResourceClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGBuildableGeneratorFuel::GetSupplementalResourceClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetSupplementalResourceClass");

	AFGBuildableGeneratorFuel_GetSupplementalResourceClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetSupplementalConsumptionRateMaximum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGeneratorFuel::GetSupplementalConsumptionRateMaximum()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetSupplementalConsumptionRateMaximum");

	AFGBuildableGeneratorFuel_GetSupplementalConsumptionRateMaximum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetSupplementalConsumptionRateCurrent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGeneratorFuel::GetSupplementalConsumptionRateCurrent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetSupplementalConsumptionRateCurrent");

	AFGBuildableGeneratorFuel_GetSupplementalConsumptionRateCurrent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetSupplementalAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGeneratorFuel::GetSupplementalAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetSupplementalAmount");

	AFGBuildableGeneratorFuel_GetSupplementalAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetRequiresSupplementalResource
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGeneratorFuel::GetRequiresSupplementalResource()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetRequiresSupplementalResource");

	AFGBuildableGeneratorFuel_GetRequiresSupplementalResource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetFuelResourceForm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EResourceForm                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EResourceForm AFGBuildableGeneratorFuel::GetFuelResourceForm()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetFuelResourceForm");

	AFGBuildableGeneratorFuel_GetFuelResourceForm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetFuelInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableGeneratorFuel::GetFuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetFuelInventory");

	AFGBuildableGeneratorFuel_GetFuelInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetFuelAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableGeneratorFuel::GetFuelAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetFuelAmount");

	AFGBuildableGeneratorFuel_GetFuelAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetCurrentFuelClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGBuildableGeneratorFuel::GetCurrentFuelClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetCurrentFuelClass");

	AFGBuildableGeneratorFuel_GetCurrentFuelClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.GetAvailableFuelClasses
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGBuildableGeneratorFuel::GetAvailableFuelClasses()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.GetAvailableFuelClasses");

	AFGBuildableGeneratorFuel_GetAvailableFuelClasses_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorFuel.FilterFuelClasses
// (Final, Native, Private, Const)
// Parameters:
// class UClass**                 Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableGeneratorFuel::FilterFuelClasses(class UClass** Object, int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorFuel.FilterFuelClasses");

	AFGBuildableGeneratorFuel_FilterFuelClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableGeneratorNuclear.GetWasteInventory
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableGeneratorNuclear::GetWasteInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableGeneratorNuclear.GetWasteInventory");

	AFGBuildableGeneratorNuclear_GetWasteInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableHubTerminal.GetTradingPost
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGBuildableTradingPost* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildableTradingPost* AFGBuildableHubTerminal::GetTradingPost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableHubTerminal.GetTradingPost");

	AFGBuildableHubTerminal_GetTradingPost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeBase.GetSplineMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* AFGBuildablePipeBase::GetSplineMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeBase.GetSplineMesh");

	AFGBuildablePipeBase_GetSplineMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeBase.GetSplineComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USplineComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USplineComponent* AFGBuildablePipeBase::GetSplineComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeBase.GetSplineComponent");

	AFGBuildablePipeBase_GetSplineComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeBase.GetIsSignificant
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildablePipeBase::GetIsSignificant()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeBase.GetIsSignificant");

	AFGBuildablePipeBase_GetIsSignificant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeBase.GetConnectionType
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGBuildablePipeBase::GetConnectionType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeBase.GetConnectionType");

	AFGBuildablePipeBase_GetConnectionType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeline.GetPipeConnection1
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPipeConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPipeConnectionComponent* AFGBuildablePipeline::GetPipeConnection1()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeline.GetPipeConnection1");

	AFGBuildablePipeline_GetPipeConnection1_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeline.GetPipeConnection0
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPipeConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPipeConnectionComponent* AFGBuildablePipeline::GetPipeConnection0()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeline.GetPipeConnection0");

	AFGBuildablePipeline_GetPipeConnection0_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeline.GetMaxContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeline::GetMaxContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeline.GetMaxContent");

	AFGBuildablePipeline_GetMaxContent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeline.GetIndicatorFlowPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeline::GetIndicatorFlowPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeline.GetIndicatorFlowPct");

	AFGBuildablePipeline_GetIndicatorFlowPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeline.GetIndicatorFlow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeline::GetIndicatorFlow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeline.GetIndicatorFlow");

	AFGBuildablePipeline_GetIndicatorFlow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeline.GetIndicatorContentPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeline::GetIndicatorContentPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeline.GetIndicatorContentPct");

	AFGBuildablePipeline_GetIndicatorContentPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeline.GetIndicatorContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeline::GetIndicatorContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeline.GetIndicatorContent");

	AFGBuildablePipeline_GetIndicatorContent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeline.GetFluidDescriptor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGBuildablePipeline::GetFluidDescriptor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeline.GetFluidDescriptor");

	AFGBuildablePipeline_GetFluidDescriptor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeline.GetFlowLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeline::GetFlowLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeline.GetFlowLimit");

	AFGBuildablePipeline_GetFlowLimit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeline.FlushPipeNetwork
// (Final, Native, Public, BlueprintCallable)

void AFGBuildablePipeline::FlushPipeNetwork()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeline.FlushPipeNetwork");

	AFGBuildablePipeline_FlushPipeNetwork_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildablePipelinePump.SetMaxHeadLift
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         design                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Max                            (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildablePipelinePump::SetMaxHeadLift(float* design, float* Max)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.SetMaxHeadLift");

	AFGBuildablePipelinePump_SetMaxHeadLift_Params params;
	params.design = design;
	params.Max = Max;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildablePipelinePump.SetFlowLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildablePipelinePump::SetFlowLimit(float* Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.SetFlowLimit");

	AFGBuildablePipelinePump_SetFlowLimit_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildablePipelinePump.GetMaxHeadLift
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipelinePump::GetMaxHeadLift()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.GetMaxHeadLift");

	AFGBuildablePipelinePump_GetMaxHeadLift_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipelinePump.GetIndicatorHeadLiftPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipelinePump::GetIndicatorHeadLiftPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.GetIndicatorHeadLiftPct");

	AFGBuildablePipelinePump_GetIndicatorHeadLiftPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipelinePump.GetIndicatorHeadLift
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipelinePump::GetIndicatorHeadLift()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.GetIndicatorHeadLift");

	AFGBuildablePipelinePump_GetIndicatorHeadLift_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipelinePump.GetIndicatorFlowPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipelinePump::GetIndicatorFlowPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.GetIndicatorFlowPct");

	AFGBuildablePipelinePump_GetIndicatorFlowPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipelinePump.GetIndicatorFlow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipelinePump::GetIndicatorFlow()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.GetIndicatorFlow");

	AFGBuildablePipelinePump_GetIndicatorFlow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipelinePump.GetFlowLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipelinePump::GetFlowLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.GetFlowLimit");

	AFGBuildablePipelinePump_GetFlowLimit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipelinePump.GetDesignHeadLift
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipelinePump::GetDesignHeadLift()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.GetDesignHeadLift");

	AFGBuildablePipelinePump_GetDesignHeadLift_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipelinePump.FluidDescriptorSetNotify
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UClass**                 fluidDesc                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildablePipelinePump::FluidDescriptorSetNotify(class UClass** fluidDesc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.FluidDescriptorSetNotify");

	AFGBuildablePipelinePump_FluidDescriptorSetNotify_Params params;
	params.fluidDesc = fluidDesc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildablePipelinePump.BuildEffectFinishedEvent
// (Event, Protected, BlueprintEvent)

void AFGBuildablePipelinePump::BuildEffectFinishedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelinePump.BuildEffectFinishedEvent");

	AFGBuildablePipelinePump_BuildEffectFinishedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildablePipelineSupport.GetConnectionType
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGBuildablePipelineSupport::GetConnectionType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipelineSupport.GetConnectionType");

	AFGBuildablePipelineSupport_GetConnectionType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeReservoir.GetFluidDescriptor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGBuildablePipeReservoir::GetFluidDescriptor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeReservoir.GetFluidDescriptor");

	AFGBuildablePipeReservoir_GetFluidDescriptor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeReservoir.GetFluidContentMax
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeReservoir::GetFluidContentMax()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeReservoir.GetFluidContentMax");

	AFGBuildablePipeReservoir_GetFluidContentMax_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeReservoir.GetFluidContent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeReservoir::GetFluidContent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeReservoir.GetFluidContent");

	AFGBuildablePipeReservoir_GetFluidContent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeReservoir.GetFlowLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeReservoir::GetFlowLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeReservoir.GetFlowLimit");

	AFGBuildablePipeReservoir_GetFlowLimit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeReservoir.GetFlowFill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeReservoir::GetFlowFill()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeReservoir.GetFlowFill");

	AFGBuildablePipeReservoir_GetFlowFill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePipeReservoir.GetFlowDrain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildablePipeReservoir::GetFlowDrain()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePipeReservoir.GetFlowDrain");

	AFGBuildablePipeReservoir_GetFlowDrain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePoweredWall.GetFoundationConnection
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UFGPowerConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPowerConnectionComponent* AFGBuildablePoweredWall::GetFoundationConnection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePoweredWall.GetFoundationConnection");

	AFGBuildablePoweredWall_GetFoundationConnection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePowerPole.OnShowConnectionFeedback
// (Event, Public, BlueprintEvent)

void AFGBuildablePowerPole::OnShowConnectionFeedback()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePowerPole.OnShowConnectionFeedback");

	AFGBuildablePowerPole_OnShowConnectionFeedback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildablePowerPole.GetPowerConnection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPowerConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPowerConnectionComponent* AFGBuildablePowerPole::GetPowerConnection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePowerPole.GetPowerConnection");

	AFGBuildablePowerPole_GetPowerConnection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePowerPole.GetPowerCircuit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPowerCircuit*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGPowerCircuit* AFGBuildablePowerPole::GetPowerCircuit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePowerPole.GetPowerCircuit");

	AFGBuildablePowerPole_GetPowerCircuit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildablePowerPole.GetCachedNumConnections
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildablePowerPole::GetCachedNumConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildablePowerPole.GetCachedNumConnections");

	AFGBuildablePowerPole_GetCachedNumConnections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.OnRep_OnRadiusUpdated
// (Final, Native, Private)

void AFGBuildableRadarTower::OnRep_OnRadiusUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.OnRep_OnRadiusUpdated");

	AFGBuildableRadarTower_OnRep_OnRadiusUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableRadarTower.GetTimeToNextExpansion
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRadarTower::GetTimeToNextExpansion()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetTimeToNextExpansion");

	AFGBuildableRadarTower_GetTimeToNextExpansion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetNumRadarExpansionSteps
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableRadarTower::GetNumRadarExpansionSteps()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetNumRadarExpansionSteps");

	AFGBuildableRadarTower_GetNumRadarExpansionSteps_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetNormalizedProgressValueForStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           step                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRadarTower::GetNormalizedProgressValueForStep(int* step)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetNormalizedProgressValueForStep");

	AFGBuildableRadarTower_GetNormalizedProgressValueForStep_Params params;
	params.step = step;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetMinRevealRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRadarTower::GetMinRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetMinRevealRadius");

	AFGBuildableRadarTower_GetMinRevealRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetMaxRevealRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRadarTower::GetMaxRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetMaxRevealRadius");

	AFGBuildableRadarTower_GetMaxRevealRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetCurrentRevealRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRadarTower::GetCurrentRevealRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetCurrentRevealRadius");

	AFGBuildableRadarTower_GetCurrentRevealRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRadarTower.GetCurrentExpansionStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableRadarTower::GetCurrentExpansionStep()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRadarTower.GetCurrentExpansionStep");

	AFGBuildableRadarTower_GetCurrentExpansionStep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRailroadBridge.GetLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRailroadBridge::GetLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadBridge.GetLength");

	AFGBuildableRailroadBridge_GetLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTrainPlatform.OnRep_UpdateDockingStatus
// (Native, Protected)

void AFGBuildableTrainPlatform::OnRep_UpdateDockingStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatform.OnRep_UpdateDockingStatus");

	AFGBuildableTrainPlatform_OnRep_UpdateDockingStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTrainPlatform.GetDockingStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETrainPlatformDockingStatus    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETrainPlatformDockingStatus AFGBuildableTrainPlatform::GetDockingStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatform.GetDockingStatus");

	AFGBuildableTrainPlatform_GetDockingStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRailroadStation.OnNameChanged
// (Event, Public, BlueprintEvent)

void AFGBuildableRailroadStation::OnNameChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadStation.OnNameChanged");

	AFGBuildableRailroadStation_OnNameChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableRailroadStation.GetStationIdentifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGTrainStationIdentifier* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTrainStationIdentifier* AFGBuildableRailroadStation::GetStationIdentifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadStation.GetStationIdentifier");

	AFGBuildableRailroadStation_GetStationIdentifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRailroadSwitchControl.UpdateSwitchPositionVisuals
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFGBuildableRailroadSwitchControl::UpdateSwitchPositionVisuals()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadSwitchControl.UpdateSwitchPositionVisuals");

	AFGBuildableRailroadSwitchControl_UpdateSwitchPositionVisuals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableRailroadSwitchControl.OnSwitchPositionChanged
// (Final, Native, Public)
// Parameters:
// int*                           NewPosition                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableRailroadSwitchControl::OnSwitchPositionChanged(int* NewPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadSwitchControl.OnSwitchPositionChanged");

	AFGBuildableRailroadSwitchControl_OnSwitchPositionChanged_Params params;
	params.NewPosition = NewPosition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableRailroadSwitchControl.OnRep_SwitchPosition
// (Final, Native, Protected)

void AFGBuildableRailroadSwitchControl::OnRep_SwitchPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadSwitchControl.OnRep_SwitchPosition");

	AFGBuildableRailroadSwitchControl_OnRep_SwitchPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableRailroadSwitchControl.GetSwitchPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableRailroadSwitchControl::GetSwitchPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadSwitchControl.GetSwitchPosition");

	AFGBuildableRailroadSwitchControl_GetSwitchPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRailroadTrack.GetSplineComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USplineComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USplineComponent* AFGBuildableRailroadTrack::GetSplineComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadTrack.GetSplineComponent");

	AFGBuildableRailroadTrack_GetSplineComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableRailroadTrack.GetLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableRailroadTrack::GetLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableRailroadTrack.GetLength");

	AFGBuildableRailroadTrack_GetLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.IsStartupComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableResourceExtractor::IsStartupComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.IsStartupComplete");

	AFGBuildableResourceExtractor_IsStartupComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.GetOutputInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableResourceExtractor::GetOutputInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.GetOutputInventory");

	AFGBuildableResourceExtractor_GetOutputInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.GetNumExtractedItemsPerCycleConverted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableResourceExtractor::GetNumExtractedItemsPerCycleConverted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.GetNumExtractedItemsPerCycleConverted");

	AFGBuildableResourceExtractor_GetNumExtractedItemsPerCycleConverted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.GetNumExtractedItemsPerCycle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableResourceExtractor::GetNumExtractedItemsPerCycle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.GetNumExtractedItemsPerCycle");

	AFGBuildableResourceExtractor_GetNumExtractedItemsPerCycle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.GetMiningParticle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* AFGBuildableResourceExtractor::GetMiningParticle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.GetMiningParticle");

	AFGBuildableResourceExtractor_GetMiningParticle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.GetMaxFlowRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableResourceExtractor::GetMaxFlowRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.GetMaxFlowRate");

	AFGBuildableResourceExtractor_GetMaxFlowRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.GetFlowRateSmoothed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableResourceExtractor::GetFlowRateSmoothed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.GetFlowRateSmoothed");

	AFGBuildableResourceExtractor_GetFlowRateSmoothed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceExtractor.GetExtractableResource
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UFGExtractableResourceInterface> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UFGExtractableResourceInterface> AFGBuildableResourceExtractor::GetExtractableResource()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceExtractor.GetExtractableResource");

	AFGBuildableResourceExtractor_GetExtractableResource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceSink.StartProducingTimer
// (Final, Native, Private)

void AFGBuildableResourceSink::StartProducingTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceSink.StartProducingTimer");

	AFGBuildableResourceSink_StartProducingTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableResourceSink.ReturnUnclaimedCoupons
// (Final, Native, Public, BlueprintCallable)

void AFGBuildableResourceSink::ReturnUnclaimedCoupons()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceSink.ReturnUnclaimedCoupons");

	AFGBuildableResourceSink_ReturnUnclaimedCoupons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableResourceSink.GetCouponInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableResourceSink::GetCouponInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceSink.GetCouponInventory");

	AFGBuildableResourceSink_GetCouponInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceSink.ClaimCoupons
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           numCoupons                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableResourceSink::ClaimCoupons(int* numCoupons)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceSink.ClaimCoupons");

	AFGBuildableResourceSink_ClaimCoupons_Params params;
	params.numCoupons = numCoupons;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceSinkShop.PurchaseResourceSinkSchematics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGInventoryComponent**  playerInventory                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class UClass*>*         Schematics                     (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableResourceSinkShop::PurchaseResourceSinkSchematics(class UFGInventoryComponent** playerInventory, TArray<class UClass*>* Schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceSinkShop.PurchaseResourceSinkSchematics");

	AFGBuildableResourceSinkShop_PurchaseResourceSinkSchematics_Params params;
	params.playerInventory = playerInventory;
	params.Schematics = Schematics;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceSinkShop.GetShopInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableResourceSinkShop::GetShopInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceSinkShop.GetShopInventory");

	AFGBuildableResourceSinkShop_GetShopInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableResourceSinkShop.CanInventoryFitPlannedPurchase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>*         Schematics                     (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableResourceSinkShop::CanInventoryFitPlannedPurchase(TArray<class UClass*>* Schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableResourceSinkShop.CanInventoryFitPlannedPurchase");

	AFGBuildableResourceSinkShop_CanInventoryFitPlannedPurchase_Params params;
	params.Schematics = Schematics;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSignWall.SetSignData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSignWallData*          SignData                       (Parm)
// bool*                          bUpdate                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableSignWall::SetSignData(struct FSignWallData* SignData, bool* bUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSignWall.SetSignData");

	AFGBuildableSignWall_SetSignData_Params params;
	params.SignData = SignData;
	params.bUpdate = bUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSignWall.OnRep_SignData
// (Final, Native, Protected)

void AFGBuildableSignWall::OnRep_SignData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSignWall.OnRep_SignData");

	AFGBuildableSignWall_OnRep_SignData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSignWall.GetSignData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSignWallData           ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FSignWallData AFGBuildableSignWall::GetSignData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSignWall.GetSignData");

	AFGBuildableSignWall_GetSignData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSpaceElevator.UpgradeTowTruck
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AFGBuildableSpaceElevator::UpgradeTowTruck()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.UpgradeTowTruck");

	AFGBuildableSpaceElevator_UpgradeTowTruck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSpaceElevator.PayOffFromInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGInventoryComponent**  inventory                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           inventorySlotIndex             (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableSpaceElevator::PayOffFromInventory(class UFGInventoryComponent** inventory, int* inventorySlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.PayOffFromInventory");

	AFGBuildableSpaceElevator_PayOffFromInventory_Params params;
	params.inventory = inventory;
	params.inventorySlotIndex = inventorySlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSpaceElevator.LaunchTowTruck
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AFGBuildableSpaceElevator::LaunchTowTruck()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.LaunchTowTruck");

	AFGBuildableSpaceElevator_LaunchTowTruck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSpaceElevator.IsReadyToUpgrade
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableSpaceElevator::IsReadyToUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.IsReadyToUpgrade");

	AFGBuildableSpaceElevator_IsReadyToUpgrade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSpaceElevator.IsFullyUpgraded
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableSpaceElevator::IsFullyUpgraded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.IsFullyUpgraded");

	AFGBuildableSpaceElevator_IsFullyUpgraded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSpaceElevator.GetNextPhaseCost
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FItemAmount>     out_cost                       (Parm, OutParm, ZeroConstructor)

void AFGBuildableSpaceElevator::GetNextPhaseCost(TArray<struct FItemAmount>* out_cost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.GetNextPhaseCost");

	AFGBuildableSpaceElevator_GetNextPhaseCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_cost != nullptr)
		*out_cost = params.out_cost;
}


// Function FactoryGame.FGBuildableSpaceElevator.GetInputInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableSpaceElevator::GetInputInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSpaceElevator.GetInputInventory");

	AFGBuildableSpaceElevator_GetInputInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSplitterSmart.SetSortRuleAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FSplitterSortRule*      Rule                           (Parm)

void AFGBuildableSplitterSmart::SetSortRuleAt(int* Index, struct FSplitterSortRule* Rule)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.SetSortRuleAt");

	AFGBuildableSplitterSmart_SetSortRuleAt_Params params;
	params.Index = Index;
	params.Rule = Rule;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSplitterSmart.RemoveSortRuleAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableSplitterSmart::RemoveSortRuleAt(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.RemoveSortRuleAt");

	AFGBuildableSplitterSmart_RemoveSortRuleAt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSplitterSmart.OnRep_SortRules
// (Final, Native, Private)

void AFGBuildableSplitterSmart::OnRep_SortRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.OnRep_SortRules");

	AFGBuildableSplitterSmart_OnRep_SortRules_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSplitterSmart.IsValidSortRuleAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableSplitterSmart::IsValidSortRuleAt(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.IsValidSortRuleAt");

	AFGBuildableSplitterSmart_IsValidSortRuleAt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSplitterSmart.GetSortRuleAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FSplitterSortRule       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSplitterSortRule AFGBuildableSplitterSmart::GetSortRuleAt(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.GetSortRuleAt");

	AFGBuildableSplitterSmart_GetSortRuleAt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSplitterSmart.GetNumSortRules
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableSplitterSmart::GetNumSortRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.GetNumSortRules");

	AFGBuildableSplitterSmart_GetNumSortRules_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSplitterSmart.GetMaxNumSortRules
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableSplitterSmart::GetMaxNumSortRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.GetMaxNumSortRules");

	AFGBuildableSplitterSmart_GetMaxNumSortRules_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSplitterSmart.AddSortRule
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSplitterSortRule*      Rule                           (Parm)

void AFGBuildableSplitterSmart::AddSortRule(struct FSplitterSortRule* Rule)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSplitterSmart.AddSortRule");

	AFGBuildableSplitterSmart_AddSortRule_Params params;
	params.Rule = Rule;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableStandaloneSign.OnRep_SignData
// (Final, Native, Protected)

void AFGBuildableStandaloneSign::OnRep_SignData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.OnRep_SignData");

	AFGBuildableStandaloneSign_OnRep_SignData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetTextScaleFromNormalizedValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetTextScaleFromNormalizedValue(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetTextScaleFromNormalizedValue");

	AFGBuildableStandaloneSign_GetTextScaleFromNormalizedValue_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetSignConstraints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSignElementConstraints ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSignElementConstraints AFGBuildableStandaloneSign::GetSignConstraints()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetSignConstraints");

	AFGBuildableStandaloneSign_GetSignConstraints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetCurrentNormalizedTextScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetCurrentNormalizedTextScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetCurrentNormalizedTextScale");

	AFGBuildableStandaloneSign_GetCurrentNormalizedTextScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStandaloneSign.GetCurrentNormalizedTextOffsetZ
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableStandaloneSign::GetCurrentNormalizedTextOffsetZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStandaloneSign.GetCurrentNormalizedTextOffsetZ");

	AFGBuildableStandaloneSign_GetCurrentNormalizedTextOffsetZ_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableStorage.GetStorageInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableStorage::GetStorageInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableStorage.GetStorageInventory");

	AFGBuildableStorage_GetStorageInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.SetColorSlotSecondary
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor*                 Color                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableSubsystem::SetColorSlotSecondary(unsigned char* Index, struct FColor* Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.SetColorSlotSecondary");

	AFGBuildableSubsystem_SetColorSlotSecondary_Params params;
	params.Index = Index;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSubsystem.SetColorSlotPrimary
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor*                 Color                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableSubsystem::SetColorSlotPrimary(unsigned char* Index, struct FColor* Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.SetColorSlotPrimary");

	AFGBuildableSubsystem_SetColorSlotPrimary_Params params;
	params.Index = Index;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSubsystem.ReplayBuildingEffects
// (Final, Native, Public)

void AFGBuildableSubsystem::ReplayBuildingEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.ReplayBuildingEffects");

	AFGBuildableSubsystem_ReplayBuildingEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableSubsystem.GetTypedBuildable
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AFGBuildable*>    out_buildables                 (Parm, OutParm, ZeroConstructor)

void AFGBuildableSubsystem::GetTypedBuildable(class UClass** inClass, TArray<class AFGBuildable*>* out_buildables)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.GetTypedBuildable");

	AFGBuildableSubsystem_GetTypedBuildable_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_buildables != nullptr)
		*out_buildables = params.out_buildables;
}


// Function FactoryGame.FGBuildableSubsystem.GetNbColorSlotsExposedToPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AFGBuildableSubsystem::GetNbColorSlotsExposedToPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.GetNbColorSlotsExposedToPlayers");

	AFGBuildableSubsystem_GetNbColorSlotsExposedToPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.GetColorSlotSecondaryLinear
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AFGBuildableSubsystem::GetColorSlotSecondaryLinear(unsigned char* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.GetColorSlotSecondaryLinear");

	AFGBuildableSubsystem_GetColorSlotSecondaryLinear_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.GetColorSlotSecondary
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FColor AFGBuildableSubsystem::GetColorSlotSecondary(unsigned char* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.GetColorSlotSecondary");

	AFGBuildableSubsystem_GetColorSlotSecondary_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.GetColorSlotPrimaryLinear
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AFGBuildableSubsystem::GetColorSlotPrimaryLinear(unsigned char* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.GetColorSlotPrimaryLinear");

	AFGBuildableSubsystem_GetColorSlotPrimaryLinear_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.GetColorSlotPrimary
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FColor AFGBuildableSubsystem::GetColorSlotPrimary(unsigned char* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.GetColorSlotPrimary");

	AFGBuildableSubsystem_GetColorSlotPrimary_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableSubsystem.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGBuildableSubsystem*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildableSubsystem* AFGBuildableSubsystem::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableSubsystem.Get");

	AFGBuildableSubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTradingPost.UpdateStorageVisibility
// (Final, Native, Public, BlueprintCallable)

void AFGBuildableTradingPost::UpdateStorageVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.UpdateStorageVisibility");

	AFGBuildableTradingPost_UpdateStorageVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTradingPost.UpdateMAMVisibility
// (Final, Native, Public, BlueprintCallable)

void AFGBuildableTradingPost::UpdateMAMVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.UpdateMAMVisibility");

	AFGBuildableTradingPost_UpdateMAMVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTradingPost.UpdateGeneratorVisibility
// (Final, Native, Public, BlueprintCallable)

void AFGBuildableTradingPost::UpdateGeneratorVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.UpdateGeneratorVisibility");

	AFGBuildableTradingPost_UpdateGeneratorVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTradingPost.OnTradingPostUpgraded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int*                           Level                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          suppressBuildEffects           (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableTradingPost::OnTradingPostUpgraded(int* Level, bool* suppressBuildEffects)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.OnTradingPostUpgraded");

	AFGBuildableTradingPost_OnTradingPostUpgraded_Params params;
	params.Level = Level;
	params.suppressBuildEffects = suppressBuildEffects;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTradingPost.OnRep_NeedPlayingBuildEffect
// (Final, Native, Private)

void AFGBuildableTradingPost::OnRep_NeedPlayingBuildEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.OnRep_NeedPlayingBuildEffect");

	AFGBuildableTradingPost_OnRep_NeedPlayingBuildEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTradingPost.GetTradingPostLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGBuildableTradingPost::GetTradingPostLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.GetTradingPostLevel");

	AFGBuildableTradingPost_GetTradingPostLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTradingPost.GetStorageInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableTradingPost::GetStorageInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.GetStorageInventory");

	AFGBuildableTradingPost_GetStorageInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTradingPost.AreChildBuildingsLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableTradingPost::AreChildBuildingsLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTradingPost.AreChildBuildingsLoaded");

	AFGBuildableTradingPost_AreChildBuildingsLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.Undock
// (Native, Public, BlueprintCallable)

void AFGBuildableTrainPlatformCargo::Undock()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.Undock");

	AFGBuildableTrainPlatformCargo_Undock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.SetIsInLoadMode
// (Native, Public, BlueprintCallable)
// Parameters:
// bool*                          isInLoadMode                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableTrainPlatformCargo::SetIsInLoadMode(bool* isInLoadMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.SetIsInLoadMode");

	AFGBuildableTrainPlatformCargo_SetIsInLoadMode_Params params;
	params.isInLoadMode = isInLoadMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.OnTransferComplete
// (Event, Public, BlueprintEvent)

void AFGBuildableTrainPlatformCargo::OnTransferComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.OnTransferComplete");

	AFGBuildableTrainPlatformCargo_OnTransferComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.OnCargoPowerStateChanged
// (Final, Native, Private)
// Parameters:
// bool*                          HasPower                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildableTrainPlatformCargo::OnCargoPowerStateChanged(bool* HasPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.OnCargoPowerStateChanged");

	AFGBuildableTrainPlatformCargo_OnCargoPowerStateChanged_Params params;
	params.HasPower = HasPower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.OnBeginUnloadSequence
// (Event, Public, BlueprintEvent)

void AFGBuildableTrainPlatformCargo::OnBeginUnloadSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.OnBeginUnloadSequence");

	AFGBuildableTrainPlatformCargo_OnBeginUnloadSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.OnBeginLoadSequence
// (Event, Public, BlueprintEvent)

void AFGBuildableTrainPlatformCargo::OnBeginLoadSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.OnBeginLoadSequence");

	AFGBuildableTrainPlatformCargo_OnBeginLoadSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.IsLoadUnloading
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableTrainPlatformCargo::IsLoadUnloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.IsLoadUnloading");

	AFGBuildableTrainPlatformCargo_IsLoadUnloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.GetIsInLoadMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableTrainPlatformCargo::GetIsInLoadMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.GetIsInLoadMode");

	AFGBuildableTrainPlatformCargo_GetIsInLoadMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.GetInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildableTrainPlatformCargo::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.GetInventory");

	AFGBuildableTrainPlatformCargo_GetInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.GetDockedVehicleOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableTrainPlatformCargo::GetDockedVehicleOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.GetDockedVehicleOffset");

	AFGBuildableTrainPlatformCargo_GetDockedVehicleOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.GetDockedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGRailroadVehicle*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRailroadVehicle* AFGBuildableTrainPlatformCargo::GetDockedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.GetDockedActor");

	AFGBuildableTrainPlatformCargo_GetDockedActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.FilterResourceForms
// (Final, Native, Private, Const)
// Parameters:
// class UClass**                 itemDesc                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableTrainPlatformCargo::FilterResourceForms(class UClass** itemDesc, int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.FilterResourceForms");

	AFGBuildableTrainPlatformCargo_FilterResourceForms_Params params;
	params.itemDesc = itemDesc;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableTrainPlatformCargo.Dock
// (Native, Public, BlueprintCallable)
// Parameters:
// class AFGRailroadVehicle**     Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildableTrainPlatformCargo::Dock(class AFGRailroadVehicle** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableTrainPlatformCargo.Dock");

	AFGBuildableTrainPlatformCargo_Dock_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableWire.GetLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildableWire::GetLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableWire.GetLength");

	AFGBuildableWire_GetLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildableWire.GetConnection
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UFGCircuitConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGCircuitConnectionComponent* AFGBuildableWire::GetConnection(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildableWire.GetConnection");

	AFGBuildableWire_GetConnection_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildCategory.GetCategoryName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGBuildCategory::STATIC_GetCategoryName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildCategory.GetCategoryName");

	UFGBuildCategory_GetCategoryName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildCategory.GetCategoryIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UFGBuildCategory::STATIC_GetCategoryIcon(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildCategory.GetCategoryIcon");

	UFGBuildCategory_GetCategoryIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildDescriptor.GetSubCategories
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_subCategories              (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGBuildDescriptor::STATIC_GetSubCategories(class UClass** inClass, TArray<class UClass*>* out_subCategories)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildDescriptor.GetSubCategories");

	UFGBuildDescriptor_GetSubCategories_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_subCategories != nullptr)
		*out_subCategories = params.out_subCategories;
}


// Function FactoryGame.FGBuildDescriptor.GetHologramClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGBuildDescriptor::STATIC_GetHologramClass(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildDescriptor.GetHologramClass");

	UFGBuildDescriptor_GetHologramClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildDescriptor.GetBuildMenuPriority
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBuildDescriptor::STATIC_GetBuildMenuPriority(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildDescriptor.GetBuildMenuPriority");

	UFGBuildDescriptor_GetBuildMenuPriority_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildDescriptor.GetBuildClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGBuildDescriptor::STATIC_GetBuildClass(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildDescriptor.GetBuildClass");

	UFGBuildDescriptor_GetBuildClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildDescriptor.GetBuildCategory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGBuildDescriptor::STATIC_GetBuildCategory(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildDescriptor.GetBuildCategory");

	UFGBuildDescriptor_GetBuildCategory_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildEffectSpline.SetupAttachment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGPipeBuilderTrail**    inAttachment                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildEffectSpline::SetupAttachment(class AFGPipeBuilderTrail** inAttachment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildEffectSpline.SetupAttachment");

	AFGBuildEffectSpline_SetupAttachment_Params params;
	params.inAttachment = inAttachment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildEffectSpline.GetAttachment
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGPipeBuilderTrail*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGPipeBuilderTrail* AFGBuildEffectSpline::GetAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildEffectSpline.GetAttachment");

	AFGBuildEffectSpline_GetAttachment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGuide.SetBuildGuideStartEnd
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                startPoint                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                endPoint                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         meshSize                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildGuide::SetBuildGuideStartEnd(struct FVector* startPoint, struct FVector* endPoint, float* meshSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGuide.SetBuildGuideStartEnd");

	AFGBuildGuide_SetBuildGuideStartEnd_Params params;
	params.startPoint = startPoint;
	params.endPoint = endPoint;
	params.meshSize = meshSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.TickState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunState::TickState(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.TickState");

	UFGBuildGunState_TickState_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.SecondaryFire
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::SecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.SecondaryFire");

	UFGBuildGunState_SecondaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ScrollUp
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::ScrollUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ScrollUp");

	UFGBuildGunState_ScrollUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ScrollDown
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::ScrollDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ScrollDown");

	UFGBuildGunState_ScrollDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ResetBuildGunDelay
// (Native, Public)

void UFGBuildGunState::ResetBuildGunDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ResetBuildGunDelay");

	UFGBuildGunState_ResetBuildGunDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.PrimaryFireRelease
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::PrimaryFireRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.PrimaryFireRelease");

	UFGBuildGunState_PrimaryFireRelease_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.PrimaryFire
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.PrimaryFire");

	UFGBuildGunState_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ModeSelectRelease
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::ModeSelectRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ModeSelectRelease");

	UFGBuildGunState_ModeSelectRelease_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ModeSelectPressed
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::ModeSelectPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ModeSelectPressed");

	UFGBuildGunState_ModeSelectPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunState::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.IsActive");

	UFGBuildGunState_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.HasBuildGunDelay
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunState::HasBuildGunDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.HasBuildGunDelay");

	UFGBuildGunState_HasBuildGunDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.HasAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunState::HasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.HasAuthority");

	UFGBuildGunState_HasAuthority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.GetBuildGunDelayPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBuildGunState::GetBuildGunDelayPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.GetBuildGunDelayPercentage");

	UFGBuildGunState_GetBuildGunDelayPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.GetBuildGunDelayMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGBuildGunState::GetBuildGunDelayMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.GetBuildGunDelayMessage");

	UFGBuildGunState_GetBuildGunDelayMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.GetBuildGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGBuildGun*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildGun* UFGBuildGunState::GetBuildGun()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.GetBuildGun");

	UFGBuildGunState_GetBuildGun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.EndState
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::EndState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.EndState");

	UFGBuildGunState_EndState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ChangeScrollMode
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::ChangeScrollMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ChangeScrollMode");

	UFGBuildGunState_ChangeScrollMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ChangeNoSnapMode
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::ChangeNoSnapMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ChangeNoSnapMode");

	UFGBuildGunState_ChangeNoSnapMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.ChangeGuideLinesSnapMode
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunState::ChangeGuideLinesSnapMode(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.ChangeGuideLinesSnapMode");

	UFGBuildGunState_ChangeGuideLinesSnapMode_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.BuildGunDelayIsComplete
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunState::BuildGunDelayIsComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.BuildGunDelayIsComplete");

	UFGBuildGunState_BuildGunDelayIsComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunState.BeginState
// (Native, Event, Public, BlueprintEvent)

void UFGBuildGunState::BeginState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.BeginState");

	UFGBuildGunState_BeginState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunState.BeginBuildGunDelay
// (Native, Public)

void UFGBuildGunState::BeginBuildGunDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunState.BeginBuildGunDelay");

	UFGBuildGunState_BeginBuildGunDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.WasUnEquipped
// (Native, Event, Protected, BlueprintEvent)

void AFGEquipment::WasUnEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.WasUnEquipped");

	AFGEquipment_WasUnEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.WasEquipped
// (Native, Event, Protected, BlueprintEvent)

void AFGEquipment::WasEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.WasEquipped");

	AFGEquipment_WasEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.UnEquip
// (Native, Public, BlueprintCallable)

void AFGEquipment::UnEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.UnEquip");

	AFGEquipment_UnEquip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.ShouldShowStinger
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipment::ShouldShowStinger()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.ShouldShowStinger");

	AFGEquipment_ShouldShowStinger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.Server_UpdateAttachmentUseState
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int*                           newUseState                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGEquipment::Server_UpdateAttachmentUseState(int* newUseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.Server_UpdateAttachmentUseState");

	AFGEquipment_Server_UpdateAttachmentUseState_Params params;
	params.newUseState = newUseState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.Server_DefaultPrimaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFGEquipment::Server_DefaultPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.Server_DefaultPrimaryFire");

	AFGEquipment_Server_DefaultPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.Server_ChargeForUse
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFGEquipment::Server_ChargeForUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.Server_ChargeForUse");

	AFGEquipment_Server_ChargeForUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.IsLocalInstigator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipment::IsLocalInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.IsLocalInstigator");

	AFGEquipment_IsLocalInstigator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.IsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipment::IsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.IsEquipped");

	AFGEquipment_IsEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.GetSecondaryAttachment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGEquipmentAttachment*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGEquipmentAttachment* AFGEquipment::GetSecondaryAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.GetSecondaryAttachment");

	AFGEquipment_GetSecondaryAttachment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.GetInstigatorCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* AFGEquipment::GetInstigatorCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.GetInstigatorCharacter");

	AFGEquipment_GetInstigatorCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.GetIdlePoseAnimation3p
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* AFGEquipment::GetIdlePoseAnimation3p()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.GetIdlePoseAnimation3p");

	AFGEquipment_GetIdlePoseAnimation3p_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.GetIdlePoseAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* AFGEquipment::GetIdlePoseAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.GetIdlePoseAnimation");

	AFGEquipment_GetIdlePoseAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.GetEquipmentSlot
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// EEquipmentSlot                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EEquipmentSlot AFGEquipment::STATIC_GetEquipmentSlot(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.GetEquipmentSlot");

	AFGEquipment_GetEquipmentSlot_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.GetAttachment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGEquipmentAttachment*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGEquipmentAttachment* AFGEquipment::GetAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.GetAttachment");

	AFGEquipment_GetAttachment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.Equip
// (Native, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGEquipment::Equip(class AFGCharacterPlayer** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.Equip");

	AFGEquipment_Equip_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.DoDefaultPrimaryFireEffects
// (Event, Public, BlueprintEvent)

void AFGEquipment::DoDefaultPrimaryFireEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.DoDefaultPrimaryFireEffects");

	AFGEquipment_DoDefaultPrimaryFireEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.DoDefaultPrimaryFire_Native
// (Final, Native, Public)

void AFGEquipment::DoDefaultPrimaryFire_Native()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.DoDefaultPrimaryFire_Native");

	AFGEquipment_DoDefaultPrimaryFire_Native_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.DoDefaultPrimaryFire
// (Event, Public, BlueprintEvent)

void AFGEquipment::DoDefaultPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.DoDefaultPrimaryFire");

	AFGEquipment_DoDefaultPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.DidNotAffordUse
// (Native, Event, Protected, BlueprintEvent)

void AFGEquipment::DidNotAffordUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.DidNotAffordUse");

	AFGEquipment_DidNotAffordUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.ChargeForUse
// (Final, Native, Protected, BlueprintCallable)

void AFGEquipment::ChargeForUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.ChargeForUse");

	AFGEquipment_ChargeForUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipment.CanDoDefaultPrimaryFire
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipment::CanDoDefaultPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.CanDoDefaultPrimaryFire");

	AFGEquipment_CanDoDefaultPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.CanAffordUse
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipment::CanAffordUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.CanAffordUse");

	AFGEquipment_CanAffordUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipment.AdjustDamage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGEquipment::AdjustDamage(float* damageAmount, class UDamageType** DamageType, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipment.AdjustDamage");

	AFGEquipment_AdjustDamage_Params params;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.Server_SecondaryFire
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGBuildGun::Server_SecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_SecondaryFire");

	AFGBuildGun_Server_SecondaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_ScrollUp
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGBuildGun::Server_ScrollUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_ScrollUp");

	AFGBuildGun_Server_ScrollUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_ScrollMode
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGBuildGun::Server_ScrollMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_ScrollMode");

	AFGBuildGun_Server_ScrollMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_ScrollDown
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGBuildGun::Server_ScrollDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_ScrollDown");

	AFGBuildGun_Server_ScrollDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_PrimaryFire
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGBuildGun::Server_PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_PrimaryFire");

	AFGBuildGun_Server_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_NoSnapMode
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGBuildGun::Server_NoSnapMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_NoSnapMode");

	AFGBuildGun_Server_NoSnapMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_GotoState
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// EBuildGunState*                State                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildGun::Server_GotoState(EBuildGunState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_GotoState");

	AFGBuildGun_Server_GotoState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.Server_GotoBuildState
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildGun::Server_GotoBuildState(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.Server_GotoBuildState");

	AFGBuildGun_Server_GotoBuildState_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.IsInState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EBuildGunState*                inState                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildGun::IsInState(EBuildGunState* inState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.IsInState");

	AFGBuildGun_IsInState_Params params;
	params.inState = inState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GotoMenuState
// (Final, Native, Public, BlueprintCallable)

void AFGBuildGun::GotoMenuState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GotoMenuState");

	AFGBuildGun_GotoMenuState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.GotoDismantleState
// (Final, Native, Public, BlueprintCallable)

void AFGBuildGun::GotoDismantleState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GotoDismantleState");

	AFGBuildGun_GotoDismantleState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.GotoBuildState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGBuildGun::GotoBuildState(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GotoBuildState");

	AFGBuildGun_GotoBuildState_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGun.GetInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGBuildGun::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetInventory");

	AFGBuildGun_GetInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GetCurrentBuildGunDelayPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGBuildGun::GetCurrentBuildGunDelayPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetCurrentBuildGunDelayPercentage");

	AFGBuildGun_GetCurrentBuildGunDelayPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GetCurrentBuildGunDelayMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGBuildGun::GetCurrentBuildGunDelayMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetCurrentBuildGunDelayMessage");

	AFGBuildGun_GetCurrentBuildGunDelayMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GetCostForRecipe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> AFGBuildGun::GetCostForRecipe(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetCostForRecipe");

	AFGBuildGun_GetCostForRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GetBuildGunStateFor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBuildGunState*                gunState                       (Parm, ZeroConstructor, IsPlainOldData)
// class UFGBuildGunState*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGBuildGunState* AFGBuildGun::GetBuildGunStateFor(EBuildGunState* gunState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetBuildGunStateFor");

	AFGBuildGun_GetBuildGunStateFor_Params params;
	params.gunState = gunState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGun.GetAvailableRecipes
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor)

void AFGBuildGun::GetAvailableRecipes(TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.GetAvailableRecipes");

	AFGBuildGun_GetAvailableRecipes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGBuildGun.CompareActiveRecipeTo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGBuildGun::CompareActiveRecipeTo(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGun.CompareActiveRecipeTo");

	AFGBuildGun_CompareActiveRecipeTo_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentAttachment.PlayUseEffect
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                UseLocation                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGEquipmentAttachment::PlayUseEffect(struct FVector* UseLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.PlayUseEffect");

	AFGEquipmentAttachment_PlayUseEffect_Params params;
	params.UseLocation = UseLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.PlayDetachEffects3P
// (Event, Public, BlueprintEvent)

void AFGEquipmentAttachment::PlayDetachEffects3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.PlayDetachEffects3P");

	AFGEquipmentAttachment_PlayDetachEffects3P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.PlayAttachEffects3P
// (Event, Public, BlueprintEvent)

void AFGEquipmentAttachment::PlayAttachEffects3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.PlayAttachEffects3P");

	AFGEquipmentAttachment_PlayAttachEffects3P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.OnRep_UseLocationUpdated
// (Final, Native, Protected)

void AFGEquipmentAttachment::OnRep_UseLocationUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.OnRep_UseLocationUpdated");

	AFGEquipmentAttachment_OnRep_UseLocationUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.OnRep_OnAnimationStateUpdated
// (Final, Native, Protected)

void AFGEquipmentAttachment::OnRep_OnAnimationStateUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.OnRep_OnAnimationStateUpdated");

	AFGEquipmentAttachment_OnRep_OnAnimationStateUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.OnDetach
// (Native, Event, Public, BlueprintEvent)

void AFGEquipmentAttachment::OnDetach()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.OnDetach");

	AFGEquipmentAttachment_OnDetach_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.OnAttachmentUseStateUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// int*                           newUseState                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGEquipmentAttachment::OnAttachmentUseStateUpdated(int* newUseState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.OnAttachmentUseStateUpdated");

	AFGEquipmentAttachment_OnAttachmentUseStateUpdated_Params params;
	params.newUseState = newUseState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.OnAttach
// (Native, Event, Public, BlueprintEvent)

void AFGEquipmentAttachment::OnAttach()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.OnAttach");

	AFGEquipmentAttachment_OnAttach_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentAttachment.IsAttached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipmentAttachment::IsAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.IsAttached");

	AFGEquipmentAttachment_IsAttached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentAttachment.GetEquippedSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEquipmentSlot                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EEquipmentSlot AFGEquipmentAttachment::GetEquippedSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.GetEquippedSlot");

	AFGEquipmentAttachment_GetEquippedSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentAttachment.GetAttachSocket
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AFGEquipmentAttachment::GetAttachSocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.GetAttachSocket");

	AFGEquipmentAttachment_GetAttachSocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentAttachment.GetAttachedTo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* AFGEquipmentAttachment::GetAttachedTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentAttachment.GetAttachedTo");

	AFGEquipmentAttachment_GetAttachedTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateBuild.ShowSplineModeSelectUI
// (Event, Public, BlueprintEvent)

void UFGBuildGunStateBuild::ShowSplineModeSelectUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.ShowSplineModeSelectUI");

	UFGBuildGunStateBuild_ShowSplineModeSelectUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.SetActiveSplineMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHologramSplinePathMode*       Mode                           (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunStateBuild::SetActiveSplineMode(EHologramSplinePathMode* Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.SetActiveSplineMode");

	UFGBuildGunStateBuild_SetActiveSplineMode_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.Server_ConstructHologram
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FNetConstructionID*     clientNetConstructID           (Parm)
// struct FConstructHologramMessage* Data                           (Parm)

void UFGBuildGunStateBuild::Server_ConstructHologram(struct FNetConstructionID* clientNetConstructID, struct FConstructHologramMessage* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.Server_ConstructHologram");

	UFGBuildGunStateBuild_Server_ConstructHologram_Params params;
	params.clientNetConstructID = clientNetConstructID;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.ResetHologram
// (Final, Native, Protected, BlueprintCallable)

void UFGBuildGunStateBuild::ResetHologram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.ResetHologram");

	UFGBuildGunStateBuild_ResetHologram_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.OnUserSettingsUpdated
// (Final, Native, Private)

void UFGBuildGunStateBuild::OnUserSettingsUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.OnUserSettingsUpdated");

	UFGBuildGunStateBuild_OnUserSettingsUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.OnResetHologram
// (Event, Protected, BlueprintEvent)

void UFGBuildGunStateBuild::OnResetHologram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.OnResetHologram");

	UFGBuildGunStateBuild_OnResetHologram_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.OnRep_Hologram
// (Final, Native, Protected)

void UFGBuildGunStateBuild::OnRep_Hologram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.OnRep_Hologram");

	UFGBuildGunStateBuild_OnRep_Hologram_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.OnMultiStepPlacement
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          isFinalStep                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunStateBuild::OnMultiStepPlacement(bool* isFinalStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.OnMultiStepPlacement");

	UFGBuildGunStateBuild_OnMultiStepPlacement_Params params;
	params.isFinalStep = isFinalStep;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.OnActiveDescriptorChanged
// (Event, Protected, BlueprintEvent)

void UFGBuildGunStateBuild::OnActiveDescriptorChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.OnActiveDescriptorChanged");

	UFGBuildGunStateBuild_OnActiveDescriptorChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.GetSupportedSplineModes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<EHologramSplinePathMode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<EHologramSplinePathMode> UFGBuildGunStateBuild::GetSupportedSplineModes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.GetSupportedSplineModes");

	UFGBuildGunStateBuild_GetSupportedSplineModes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateBuild.GetHologramCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGBuildGunStateBuild::GetHologramCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.GetHologramCost");

	UFGBuildGunStateBuild_GetHologramCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateBuild.GetHologram
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGHologram*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGHologram* UFGBuildGunStateBuild::GetHologram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.GetHologram");

	UFGBuildGunStateBuild_GetHologram_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateBuild.GetDescriptor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGBuildGunStateBuild::GetDescriptor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.GetDescriptor");

	UFGBuildGunStateBuild_GetDescriptor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateBuild.EndClearanceOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunStateBuild::EndClearanceOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.EndClearanceOverlap");

	UFGBuildGunStateBuild_EndClearanceOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.CloseSplineModeSelectUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGBuildGunStateBuild::CloseSplineModeSelectUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.CloseSplineModeSelectUI");

	UFGBuildGunStateBuild_CloseSplineModeSelectUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.Client_OnResetHologram
// (Net, NetReliable, Native, Event, Protected, NetClient)

void UFGBuildGunStateBuild::Client_OnResetHologram()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.Client_OnResetHologram");

	UFGBuildGunStateBuild_Client_OnResetHologram_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.Client_OnBuildableFailedConstruction
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FNetConstructionID*     NetConstructionID              (Parm)

void UFGBuildGunStateBuild::Client_OnBuildableFailedConstruction(struct FNetConstructionID* NetConstructionID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.Client_OnBuildableFailedConstruction");

	UFGBuildGunStateBuild_Client_OnBuildableFailedConstruction_Params params;
	params.NetConstructionID = NetConstructionID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.Client_OnBuildableConstructed
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class UClass**                 Desc                           (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunStateBuild::Client_OnBuildableConstructed(class UClass** Desc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.Client_OnBuildableConstructed");

	UFGBuildGunStateBuild_Client_OnBuildableConstructed_Params params;
	params.Desc = Desc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateBuild.BeginClearanceOverlap
// (Final, Native, Private, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFGBuildGunStateBuild::BeginClearanceOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateBuild.BeginClearanceOverlap");

	UFGBuildGunStateBuild_BeginClearanceOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.SetMultiDismantleState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsActive                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGBuildGunStateDismantle::SetMultiDismantleState(bool* IsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.SetMultiDismantleState");

	UFGBuildGunStateDismantle_SetMultiDismantleState_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.Server_PeekAtDismantleRefund
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TArray<class AActor*>*         selectedActors                 (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UFGBuildGunStateDismantle::Server_PeekAtDismantleRefund(TArray<class AActor*>* selectedActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.Server_PeekAtDismantleRefund");

	UFGBuildGunStateDismantle_Server_PeekAtDismantleRefund_Params params;
	params.selectedActors = selectedActors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.Server_DismantleActors
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TArray<class AActor*>*         selectedActors                 (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void UFGBuildGunStateDismantle::Server_DismantleActors(TArray<class AActor*>* selectedActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.Server_DismantleActors");

	UFGBuildGunStateDismantle_Server_DismantleActors_Params params;
	params.selectedActors = selectedActors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.OnStopDismantle
// (Event, Public, BlueprintEvent)

void UFGBuildGunStateDismantle::OnStopDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.OnStopDismantle");

	UFGBuildGunStateDismantle_OnStopDismantle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.OnStartDismantle
// (Event, Public, BlueprintEvent)

void UFGBuildGunStateDismantle::OnStartDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.OnStartDismantle");

	UFGBuildGunStateDismantle_OnStartDismantle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.OnRep_PeekDismantleRefund
// (Final, Native, Private)

void UFGBuildGunStateDismantle::OnRep_PeekDismantleRefund()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.OnRep_PeekDismantleRefund");

	UFGBuildGunStateDismantle_OnRep_PeekDismantleRefund_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGBuildGunStateDismantle.HasReachedMaxNumPendingDismantleActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunStateDismantle::HasReachedMaxNumPendingDismantleActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.HasReachedMaxNumPendingDismantleActors");

	UFGBuildGunStateDismantle_HasReachedMaxNumPendingDismantleActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateDismantle.GetSelectedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFGBuildGunStateDismantle::GetSelectedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.GetSelectedActor");

	UFGBuildGunStateDismantle_GetSelectedActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateDismantle.GetPeekDismantleRefund
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FInventoryStack> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInventoryStack> UFGBuildGunStateDismantle::GetPeekDismantleRefund()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.GetPeekDismantleRefund");

	UFGBuildGunStateDismantle_GetPeekDismantleRefund_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateDismantle.GetNumPendingDismantleActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          includeAimedAtActor            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGBuildGunStateDismantle::GetNumPendingDismantleActors(bool* includeAimedAtActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.GetNumPendingDismantleActors");

	UFGBuildGunStateDismantle_GetNumPendingDismantleActors_Params params;
	params.includeAimedAtActor = includeAimedAtActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateDismantle.GetMaxNumPendingDismantleActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGBuildGunStateDismantle::GetMaxNumPendingDismantleActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.GetMaxNumPendingDismantleActors");

	UFGBuildGunStateDismantle_GetMaxNumPendingDismantleActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateDismantle.GetDismantleRefund
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FInventoryStack> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInventoryStack> UFGBuildGunStateDismantle::GetDismantleRefund()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.GetDismantleRefund");

	UFGBuildGunStateDismantle_GetDismantleRefund_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildGunStateDismantle.CanDismantle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGBuildGunStateDismantle::CanDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildGunStateDismantle.CanDismantle");

	UFGBuildGunStateDismantle_CanDismantle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildingDescriptor.GetPowerProduction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBuildingDescriptor::STATIC_GetPowerProduction(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildingDescriptor.GetPowerProduction");

	UFGBuildingDescriptor_GetPowerProduction_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildingDescriptor.GetPowerConsumption
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGBuildingDescriptor::STATIC_GetPowerConsumption(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildingDescriptor.GetPowerConsumption");

	UFGBuildingDescriptor_GetPowerConsumption_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGBuildingDescriptor.GetBuildableClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGBuildingDescriptor::STATIC_GetBuildableClass(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGBuildingDescriptor.GetBuildableClass");

	UFGBuildingDescriptor_GetBuildableClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGButtonWidget.SetButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UButton**                inButton                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGButtonWidget::SetButton(class UButton** inButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGButtonWidget.SetButton");

	UFGButtonWidget_SetButton_Params params;
	params.inButton = inButton;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.Server_StartPrimaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFGWeapon::Server_StartPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.Server_StartPrimaryFire");

	AFGWeapon_Server_StartPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.Server_Reload
// (Net, Native, Event, Protected, NetServer, NetValidate)

void AFGWeapon::Server_Reload()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.Server_Reload");

	AFGWeapon_Server_Reload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.Server_EndPrimaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFGWeapon::Server_EndPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.Server_EndPrimaryFire");

	AFGWeapon_Server_EndPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.PlayReloadEffects
// (Native, Event, Protected, BlueprintEvent)

void AFGWeapon::PlayReloadEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.PlayReloadEffects");

	AFGWeapon_PlayReloadEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.PlayFireReleasedEffects
// (Event, Public, BlueprintEvent)

void AFGWeapon::PlayFireReleasedEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.PlayFireReleasedEffects");

	AFGWeapon_PlayFireReleasedEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.PlayFireEffect
// (Native, Event, Protected, BlueprintEvent)

void AFGWeapon::PlayFireEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.PlayFireEffect");

	AFGWeapon_PlayFireEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.PlayFailedToFireEffects
// (Event, Public, BlueprintEvent)

void AFGWeapon::PlayFailedToFireEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.PlayFailedToFireEffects");

	AFGWeapon_PlayFailedToFireEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.HasAmmunition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWeapon::HasAmmunition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.HasAmmunition");

	AFGWeapon_HasAmmunition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetSpareAmmunition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGWeapon::GetSpareAmmunition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetSpareAmmunition");

	AFGWeapon_GetSpareAmmunition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetReloadTimeLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGWeapon::GetReloadTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetReloadTimeLeft");

	AFGWeapon_GetReloadTimeLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetMagSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGWeapon::GetMagSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetMagSize");

	AFGWeapon_GetMagSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetIsReloading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWeapon::GetIsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetIsReloading");

	AFGWeapon_GetIsReloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetIsFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWeapon::GetIsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetIsFiring");

	AFGWeapon_GetIsFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetCurrentAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGWeapon::GetCurrentAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetCurrentAmmo");

	AFGWeapon_GetCurrentAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.GetAssosiatedHud
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGHUD*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGHUD* AFGWeapon::GetAssosiatedHud()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.GetAssosiatedHud");

	AFGWeapon_GetAssosiatedHud_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.FireAmmunition
// (Native, Event, Public, BlueprintEvent)

void AFGWeapon::FireAmmunition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.FireAmmunition");

	AFGWeapon_FireAmmunition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeapon.CanReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWeapon::CanReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.CanReload");

	AFGWeapon_CanReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeapon.ActualReload
// (Final, Native, Protected)

void AFGWeapon::ActualReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeapon.ActualReload");

	AFGWeapon_ActualReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGC4Dispenser.Server_SpawnC4
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           throwForce                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGC4Dispenser::Server_SpawnC4(int* throwForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGC4Dispenser.Server_SpawnC4");

	AFGC4Dispenser_Server_SpawnC4_Params params;
	params.throwForce = throwForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGC4Dispenser.Server_DetonatePressed
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFGC4Dispenser::Server_DetonatePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGC4Dispenser.Server_DetonatePressed");

	AFGC4Dispenser_Server_DetonatePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGC4Dispenser.GetChargePct
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGC4Dispenser::GetChargePct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGC4Dispenser.GetChargePct");

	AFGC4Dispenser_GetChargePct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGC4Explosive.PlayExplosionEffects
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void AFGC4Explosive::PlayExplosionEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGC4Explosive.PlayExplosionEffects");

	AFGC4Explosive_PlayExplosionEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGC4Explosive.OnRep_IsDetonated
// (Final, Native, Public)

void AFGC4Explosive::OnRep_IsDetonated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGC4Explosive.OnRep_IsDetonated");

	AFGC4Explosive_OnRep_IsDetonated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCameraModifierLimitLook.SetDefaultLookRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator*               inRotator                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGCameraModifierLimitLook::SetDefaultLookRotator(struct FRotator* inRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCameraModifierLimitLook.SetDefaultLookRotator");

	UFGCameraModifierLimitLook_SetDefaultLookRotator_Params params;
	params.inRotator = inRotator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCameraModifierLimitLook.GetDefaultLookRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UFGCameraModifierLimitLook::GetDefaultLookRotator()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCameraModifierLimitLook.GetDefaultLookRotator");

	UFGCameraModifierLimitLook_GetDefaultLookRotator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCameraModifierSlide.SetDefaultLookRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator*               inRotator                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGCameraModifierSlide::SetDefaultLookRotator(struct FRotator* inRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCameraModifierSlide.SetDefaultLookRotator");

	UFGCameraModifierSlide_SetDefaultLookRotator_Params params;
	params.inRotator = inRotator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCameraModifierSlide.GetDefaultLookRotator
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UFGCameraModifierSlide::GetDefaultLookRotator()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCameraModifierSlide.GetDefaultLookRotator");

	UFGCameraModifierSlide_GetDefaultLookRotator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCentralStorageContainer.AddToCentralStorageSubsystem
// (Final, Native, Private)

void AFGCentralStorageContainer::AddToCentralStorageSubsystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageContainer.AddToCentralStorageSubsystem");

	AFGCentralStorageContainer_AddToCentralStorageSubsystem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCentralStorageSubsystem.RemoveItemsFromCentralStorage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Num                            (Parm, ZeroConstructor, IsPlainOldData)

void AFGCentralStorageSubsystem::RemoveItemsFromCentralStorage(class UClass** ItemClass, int* Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageSubsystem.RemoveItemsFromCentralStorage");

	AFGCentralStorageSubsystem_RemoveItemsFromCentralStorage_Params params;
	params.ItemClass = ItemClass;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCentralStorageSubsystem.IsCentralStorageBuilt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCentralStorageSubsystem::IsCentralStorageBuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageSubsystem.IsCentralStorageBuilt");

	AFGCentralStorageSubsystem_IsCentralStorageBuilt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCentralStorageSubsystem.GetNumItemsFromCentralStorage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGCentralStorageSubsystem::GetNumItemsFromCentralStorage(class UClass** ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageSubsystem.GetNumItemsFromCentralStorage");

	AFGCentralStorageSubsystem_GetNumItemsFromCentralStorage_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCentralStorageSubsystem.GetCentralStorageContainers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AFGCentralStorageContainer*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AFGCentralStorageContainer*> AFGCentralStorageSubsystem::GetCentralStorageContainers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageSubsystem.GetCentralStorageContainers");

	AFGCentralStorageSubsystem_GetCentralStorageContainers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCentralStorageSubsystem.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGCentralStorageSubsystem* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCentralStorageSubsystem* AFGCentralStorageSubsystem::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCentralStorageSubsystem.Get");

	AFGCentralStorageSubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.Server_StopSawing
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFGChainsaw::Server_StopSawing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.Server_StopSawing");

	AFGChainsaw_Server_StopSawing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChainsaw.Server_StartSawing
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFGChainsaw::Server_StartSawing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.Server_StartSawing");

	AFGChainsaw_Server_StartSawing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChainsaw.Server_RemoveChainsawedObject
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// class USceneComponent**        sawingComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FTransform*             foliageToRemoveTransform       (Parm, IsPlainOldData)
// struct FVector*                effectLocation                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGChainsaw::Server_RemoveChainsawedObject(class USceneComponent** sawingComponent, struct FTransform* foliageToRemoveTransform, struct FVector* effectLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.Server_RemoveChainsawedObject");

	AFGChainsaw_Server_RemoveChainsawedObject_Params params;
	params.sawingComponent = sawingComponent;
	params.foliageToRemoveTransform = foliageToRemoveTransform;
	params.effectLocation = effectLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChainsaw.SawProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGChainsaw::SawProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.SawProgress");

	AFGChainsaw_SawProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.IsSawing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGChainsaw::IsSawing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.IsSawing");

	AFGChainsaw_IsSawing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.IsSawEngaged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGChainsaw::IsSawEngaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.IsSawEngaged");

	AFGChainsaw_IsSawEngaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.HasAnyFuel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGChainsaw::HasAnyFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.HasAnyFuel");

	AFGChainsaw_HasAnyFuel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.GetFuelClass
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGChainsaw::GetFuelClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.GetFuelClass");

	AFGChainsaw_GetFuelClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.CanStartSawing
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGChainsaw::CanStartSawing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.CanStartSawing");

	AFGChainsaw_CanStartSawing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsaw.BroadcastPickup
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<struct FPickedUpInstance>* pickups                        (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// class AFGFoliagePickup**       instigatorPlayer               (Parm, ZeroConstructor, IsPlainOldData)

void AFGChainsaw::BroadcastPickup(TArray<struct FPickedUpInstance>* pickups, class AFGFoliagePickup** instigatorPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsaw.BroadcastPickup");

	AFGChainsaw_BroadcastPickup_Params params;
	params.pickups = pickups;
	params.instigatorPlayer = instigatorPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChainsawableInterface.IsChainsawable
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGChainsawableInterface::IsChainsawable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsawableInterface.IsChainsawable");

	UFGChainsawableInterface_IsChainsawable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChainsawableInterface.GetMeshComponent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStaticMeshComponent* UFGChainsawableInterface::GetMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChainsawableInterface.GetMeshComponent");

	UFGChainsawableInterface_GetMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.TraceForGround
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                TraceStart                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                TraceEnd                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult              out_hitResult                  (Parm, OutParm, IsPlainOldData)
// float                          out_waterDepth                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterBase::TraceForGround(struct FVector* TraceStart, struct FVector* TraceEnd, struct FHitResult* out_hitResult, float* out_waterDepth)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.TraceForGround");

	AFGCharacterBase_TraceForGround_Params params;
	params.TraceStart = TraceStart;
	params.TraceEnd = TraceEnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_hitResult != nullptr)
		*out_hitResult = params.out_hitResult;
	if (out_waterDepth != nullptr)
		*out_waterDepth = params.out_waterDepth;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.SetFallDamageOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat**            fallDamageCurveOverride        (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::SetFallDamageOverride(class UCurveFloat** fallDamageCurveOverride)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.SetFallDamageOverride");

	AFGCharacterBase_SetFallDamageOverride_Params params;
	params.fallDamageCurveOverride = fallDamageCurveOverride;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.ReceiveDied
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGCharacterBase::ReceiveDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.ReceiveDied");

	AFGCharacterBase_ReceiveDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.ReceivedAdjustDamage
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGCharacterBase::ReceivedAdjustDamage(float* damageAmount, class UDamageType** DamageType, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.ReceivedAdjustDamage");

	AFGCharacterBase_ReceivedAdjustDamage_Params params;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.RagdollCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          newRagdoll                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::RagdollCharacter(bool* newRagdoll)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.RagdollCharacter");

	AFGCharacterBase_RagdollCharacter_Params params;
	params.newRagdoll = newRagdoll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.PushedByVehicle
// (Final, Native, Public, HasDefaults)
// Parameters:
// class AFGVehicle**             Vehicle                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                pushVelocity                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::PushedByVehicle(class AFGVehicle** Vehicle, struct FVector* pushVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.PushedByVehicle");

	AFGCharacterBase_PushedByVehicle_Params params;
	params.Vehicle = Vehicle;
	params.pushVelocity = pushVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.PlayFootstepEffect
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int*                           footDown                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          PlaySound                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::PlayFootstepEffect(int* footDown, bool* PlaySound)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.PlayFootstepEffect");

	AFGCharacterBase_PlayFootstepEffect_Params params;
	params.footDown = footDown;
	params.PlaySound = PlaySound;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.OnTakeRadialDamage
// (Native, Public, HasDefaults)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             HitInfo                        (Parm, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::OnTakeRadialDamage(class AActor** DamagedActor, float* Damage, class UDamageType** DamageType, struct FVector* HitLocation, struct FHitResult* HitInfo, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.OnTakeRadialDamage");

	AFGCharacterBase_OnTakeRadialDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.HitLocation = HitLocation;
	params.HitInfo = HitInfo;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.OnTakePointDamage
// (Native, Public, HasDefaults)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                ShotFromDirection              (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::OnTakePointDamage(class AActor** DamagedActor, float* Damage, class AController** InstigatedBy, struct FVector* HitLocation, class UPrimitiveComponent** HitComponent, struct FName* BoneName, struct FVector* ShotFromDirection, class UDamageType** DamageType, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.OnTakePointDamage");

	AFGCharacterBase_OnTakePointDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.InstigatedBy = InstigatedBy;
	params.HitLocation = HitLocation;
	params.HitComponent = HitComponent;
	params.BoneName = BoneName;
	params.ShotFromDirection = ShotFromDirection;
	params.DamageType = DamageType;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.OnTakeDamage
// (Native, Public)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::OnTakeDamage(class AActor** DamagedActor, float* damageAmount, class UDamageType** DamageType, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.OnTakeDamage");

	AFGCharacterBase_OnTakeDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.OnRep_IsRagdolled
// (Final, Native, Private)

void AFGCharacterBase::OnRep_IsRagdolled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.OnRep_IsRagdolled");

	AFGCharacterBase_OnRep_IsRagdolled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.OnRep_IsPossessed
// (Final, Native, Private)

void AFGCharacterBase::OnRep_IsPossessed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.OnRep_IsPossessed");

	AFGCharacterBase_OnRep_IsPossessed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.OnLocallyPossessedChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool*                          isLocallyPossessed             (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::OnLocallyPossessedChanged(bool* isLocallyPossessed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.OnLocallyPossessedChanged");

	AFGCharacterBase_OnLocallyPossessedChanged_Params params;
	params.isLocallyPossessed = isLocallyPossessed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.NotifyOnWeakspotHit
// (Event, Public, BlueprintEvent)

void AFGCharacterBase::NotifyOnWeakspotHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.NotifyOnWeakspotHit");

	AFGCharacterBase_NotifyOnWeakspotHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.NotifyOnTakeRadialDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::NotifyOnTakeRadialDamage(class AActor** DamagedActor, float* Damage, class AController** InstigatedBy, class UDamageType** DamageType, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.NotifyOnTakeRadialDamage");

	AFGCharacterBase_NotifyOnTakeRadialDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.InstigatedBy = InstigatedBy;
	params.DamageType = DamageType;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.NotifyOnTakePointDamage
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                ShotFromDirection              (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::NotifyOnTakePointDamage(class AActor** DamagedActor, float* Damage, class AController** InstigatedBy, struct FVector* HitLocation, class UPrimitiveComponent** HitComponent, struct FName* BoneName, struct FVector* ShotFromDirection, class UDamageType** DamageType, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.NotifyOnTakePointDamage");

	AFGCharacterBase_NotifyOnTakePointDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.InstigatedBy = InstigatedBy;
	params.HitLocation = HitLocation;
	params.HitComponent = HitComponent;
	params.BoneName = BoneName;
	params.ShotFromDirection = ShotFromDirection;
	params.DamageType = DamageType;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.NotifyOnTakeDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::NotifyOnTakeDamage(class AActor** DamagedActor, float* damageAmount, class UDamageType** DamageType, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.NotifyOnTakeDamage");

	AFGCharacterBase_NotifyOnTakeDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.IsRagdolled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterBase::IsRagdolled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.IsRagdolled");

	AFGCharacterBase_IsRagdolled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.IsAliveAndWell
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterBase::IsAliveAndWell()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.IsAliveAndWell");

	AFGCharacterBase_IsAliveAndWell_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetTakeDamageSound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* AFGCharacterBase::GetTakeDamageSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetTakeDamageSound");

	AFGCharacterBase_GetTakeDamageSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetTakeDamageParticle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* AFGCharacterBase::GetTakeDamageParticle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetTakeDamageParticle");

	AFGCharacterBase_GetTakeDamageParticle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetMesh3P
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* AFGCharacterBase::GetMesh3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetMesh3P");

	AFGCharacterBase_GetMesh3P_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetMainMesh
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* AFGCharacterBase::GetMainMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetMainMesh");

	AFGCharacterBase_GetMainMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetHealthComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGHealthComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGHealthComponent* AFGCharacterBase::GetHealthComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetHealthComponent");

	AFGCharacterBase_GetHealthComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetFallDamageDamageType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGCharacterBase::GetFallDamageDamageType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetFallDamageDamageType");

	AFGCharacterBase_GetFallDamageDamageType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.GetDeathSound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* AFGCharacterBase::GetDeathSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.GetDeathSound");

	AFGCharacterBase_GetDeathSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.Died
// (Native, Public)
// Parameters:
// class AActor**                 thisActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterBase::Died(class AActor** thisActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.Died");

	AFGCharacterBase_Died_Params params;
	params.thisActor = thisActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.CheckIfShouldDestroy
// (Final, Native, Protected)

void AFGCharacterBase::CheckIfShouldDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.CheckIfShouldDestroy");

	AFGCharacterBase_CheckIfShouldDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterBase.CalculateFallDamage
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float*                         zSpeed                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGCharacterBase::CalculateFallDamage(float* zSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.CalculateFallDamage");

	AFGCharacterBase_CalculateFallDamage_Params params;
	params.zSpeed = zSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterBase.AdjustDamage
// (Native, Protected)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterBase::AdjustDamage(class AActor** DamagedActor, float* damageAmount, class UDamageType** DamageType, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterBase.AdjustDamage");

	AFGCharacterBase_AdjustDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.ServerSetHookLocation
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                hookLocation                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UFGCharacterMovementComponent::ServerSetHookLocation(struct FVector* hookLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.ServerSetHookLocation");

	UFGCharacterMovementComponent_ServerSetHookLocation_Params params;
	params.hookLocation = hookLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterMovementComponent.OnNewTravelPipeSection
// (Event, Public, BlueprintEvent)

void UFGCharacterMovementComponent::OnNewTravelPipeSection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.OnNewTravelPipeSection");

	UFGCharacterMovementComponent_OnNewTravelPipeSection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterMovementComponent.IsInHyperPipe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCharacterMovementComponent::IsInHyperPipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.IsInHyperPipe");

	UFGCharacterMovementComponent_IsInHyperPipe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetWantsToSprint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCharacterMovementComponent::GetWantsToSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetWantsToSprint");

	UFGCharacterMovementComponent_GetWantsToSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetPipeVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCharacterMovementComponent::GetPipeVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetPipeVelocity");

	UFGCharacterMovementComponent_GetPipeVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetPipeTravelDirectionWorld
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGCharacterMovementComponent::GetPipeTravelDirectionWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetPipeTravelDirectionWorld");

	UFGCharacterMovementComponent_GetPipeTravelDirectionWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetPipeMinSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCharacterMovementComponent::GetPipeMinSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetPipeMinSpeed");

	UFGCharacterMovementComponent_GetPipeMinSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetPipeHyperDataRef
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPlayerPipeHyperData    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPlayerPipeHyperData UFGCharacterMovementComponent::GetPipeHyperDataRef()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetPipeHyperDataRef");

	UFGCharacterMovementComponent_GetPipeHyperDataRef_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetPipeCharacterTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector*                cameraForwardAxis              (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UFGCharacterMovementComponent::GetPipeCharacterTransform(struct FVector* cameraForwardAxis)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetPipeCharacterTransform");

	UFGCharacterMovementComponent_GetPipeCharacterTransform_Params params;
	params.cameraForwardAxis = cameraForwardAxis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetOnLadder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGLadderComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGLadderComponent* UFGCharacterMovementComponent::GetOnLadder()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetOnLadder");

	UFGCharacterMovementComponent_GetOnLadder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetIsSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCharacterMovementComponent::GetIsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetIsSprinting");

	UFGCharacterMovementComponent_GetIsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.GetBaseVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGCharacterMovementComponent::GetBaseVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.GetBaseVelocity");

	UFGCharacterMovementComponent_GetBaseVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterMovementComponent.EnterPipeHyper
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGBuildablePipeHyperPart** pipe                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCharacterMovementComponent::EnterPipeHyper(class AFGBuildablePipeHyperPart** pipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterMovementComponent.EnterPipeHyper");

	UFGCharacterMovementComponent_EnterPipeHyper_Params params;
	params.pipe = pipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.UsePreferredCameraMode
// (Final, Native, Public, BlueprintCallable)

void AFGCharacterPlayer::UsePreferredCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.UsePreferredCameraMode");

	AFGCharacterPlayer_UsePreferredCameraMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.UnequipEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGEquipment**           equipment                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::UnequipEquipment(class AFGEquipment** equipment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.UnequipEquipment");

	AFGCharacterPlayer_UnequipEquipment_Params params;
	params.equipment = equipment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.ToggleCameraMode
// (Final, Native, Public)

void AFGCharacterPlayer::ToggleCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.ToggleCameraMode");

	AFGCharacterPlayer_ToggleCameraMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.ToggleBuildGun
// (Final, Native, Public, BlueprintCallable)

void AFGCharacterPlayer::ToggleBuildGun()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.ToggleBuildGun");

	AFGCharacterPlayer_ToggleBuildGun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.TickVisuals
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// float*                         dt                             (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::TickVisuals(float* dt)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.TickVisuals");

	AFGCharacterPlayer_TickVisuals_Params params;
	params.dt = dt;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.StopReceivingRadiation
// (Final, Native, Protected)

void AFGCharacterPlayer::StopReceivingRadiation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.StopReceivingRadiation");

	AFGCharacterPlayer_StopReceivingRadiation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.StopFreeRotate3P
// (Native, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::StopFreeRotate3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.StopFreeRotate3P");

	AFGCharacterPlayer_StopFreeRotate3P_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.StopFocusAim
// (Native, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::StopFocusAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.StopFocusAim");

	AFGCharacterPlayer_StopFocusAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.StartReceivingRadiation
// (Final, Native, Protected)

void AFGCharacterPlayer::StartReceivingRadiation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.StartReceivingRadiation");

	AFGCharacterPlayer_StartReceivingRadiation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.StartFreeRotate3P
// (Native, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::StartFreeRotate3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.StartFreeRotate3P");

	AFGCharacterPlayer_StartFreeRotate3P_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.StartFocusAim
// (Native, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::StartFocusAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.StartFocusAim");

	AFGCharacterPlayer_StartFocusAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SpawnInitialGear
// (Native, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::SpawnInitialGear()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SpawnInitialGear");

	AFGCharacterPlayer_SpawnInitialGear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SnapSpringArmToDesiredLocation
// (Event, Protected, BlueprintEvent)

void AFGCharacterPlayer::SnapSpringArmToDesiredLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SnapSpringArmToDesiredLocation");

	AFGCharacterPlayer_SnapSpringArmToDesiredLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetWantSprintBobbing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          wantBobbing                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::SetWantSprintBobbing(bool* wantBobbing)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetWantSprintBobbing");

	AFGCharacterPlayer_SetWantSprintBobbing_Params params;
	params.wantBobbing = wantBobbing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetThirdPersonMode
// (Native, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::SetThirdPersonMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetThirdPersonMode");

	AFGCharacterPlayer_SetThirdPersonMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetRadiationImmunity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newImmunity                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::SetRadiationImmunity(float* newImmunity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetRadiationImmunity");

	AFGCharacterPlayer_SetRadiationImmunity_Params params;
	params.newImmunity = newImmunity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetMeshVisibility
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          IsFirstPerson                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::SetMeshVisibility(bool* IsFirstPerson)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetMeshVisibility");

	AFGCharacterPlayer_SetMeshVisibility_Params params;
	params.IsFirstPerson = IsFirstPerson;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetFirstPersonMode
// (Native, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::SetFirstPersonMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetFirstPersonMode");

	AFGCharacterPlayer_SetFirstPersonMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.SetCameraMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraMode*                   newCameraMode                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::SetCameraMode(ECameraMode* newCameraMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.SetCameraMode");

	AFGCharacterPlayer_SetCameraMode_Params params;
	params.newCameraMode = newCameraMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_UnequipEquipment
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AFGEquipment**           newEquipment                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_UnequipEquipment(class AFGEquipment** newEquipment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_UnequipEquipment");

	AFGCharacterPlayer_Server_UnequipEquipment_Params params;
	params.newEquipment = newEquipment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_ToggleSwitchControl
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AFGBuildableRailroadSwitchControl** switchControl                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_ToggleSwitchControl(class AFGBuildableRailroadSwitchControl** switchControl)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_ToggleSwitchControl");

	AFGCharacterPlayer_Server_ToggleSwitchControl_Params params;
	params.switchControl = switchControl;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_RevivePlayer
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AFGCharacterPlayer**     playerToRevive                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_RevivePlayer(class AFGCharacterPlayer** playerToRevive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_RevivePlayer");

	AFGCharacterPlayer_Server_RevivePlayer_Params params;
	params.playerToRevive = playerToRevive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_PickUpItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AFGItemPickup**          itemPickup                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_PickUpItem(class AFGItemPickup** itemPickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_PickUpItem");

	AFGCharacterPlayer_Server_PickUpItem_Params params;
	params.itemPickup = itemPickup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_OnUseReleased
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGCharacterPlayer::Server_OnUseReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_OnUseReleased");

	AFGCharacterPlayer_Server_OnUseReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_OnUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGCharacterPlayer::Server_OnUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_OnUse");

	AFGCharacterPlayer_Server_OnUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_EquipEquipment
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AFGEquipment**           newEquipment                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_EquipEquipment(class AFGEquipment** newEquipment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_EquipEquipment");

	AFGCharacterPlayer_Server_EquipEquipment_Params params;
	params.newEquipment = newEquipment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Server_CycleHandEquipmentPressed
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int*                           dir                            (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Server_CycleHandEquipmentPressed(int* dir)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Server_CycleHandEquipmentPressed");

	AFGCharacterPlayer_Server_CycleHandEquipmentPressed_Params params;
	params.dir = dir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.PlayPickupEffects
// (BlueprintCosmetic, Event, Protected, BlueprintCallable, BlueprintEvent)

void AFGCharacterPlayer::PlayPickupEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.PlayPickupEffects");

	AFGCharacterPlayer_PlayPickupEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.PlayJumpEffects
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool*                          boostJump                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::PlayJumpEffects(bool* boostJump)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.PlayJumpEffects");

	AFGCharacterPlayer_PlayJumpEffects_Params params;
	params.boostJump = boostJump;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnUserSettingsUpdated
// (Final, Native, Private)

void AFGCharacterPlayer::OnUserSettingsUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnUserSettingsUpdated");

	AFGCharacterPlayer_OnUserSettingsUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnSpawnDeathMarker
// (Event, Protected, BlueprintEvent)

void AFGCharacterPlayer::OnSpawnDeathMarker()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnSpawnDeathMarker");

	AFGCharacterPlayer_OnSpawnDeathMarker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnSlideStartSimulated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::OnSlideStartSimulated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnSlideStartSimulated");

	AFGCharacterPlayer_OnSlideStartSimulated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnSlideStartLocal
// (Event, Public, BlueprintEvent)

void AFGCharacterPlayer::OnSlideStartLocal()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnSlideStartLocal");

	AFGCharacterPlayer_OnSlideStartLocal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnSlideEndSimulated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::OnSlideEndSimulated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnSlideEndSimulated");

	AFGCharacterPlayer_OnSlideEndSimulated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnSlideEndLocal
// (Event, Public, BlueprintEvent)

void AFGCharacterPlayer::OnSlideEndLocal()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnSlideEndLocal");

	AFGCharacterPlayer_OnSlideEndLocal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnReviveComplete
// (Event, Protected, BlueprintEvent)

void AFGCharacterPlayer::OnReviveComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnReviveComplete");

	AFGCharacterPlayer_OnReviveComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_RadiationIntensity
// (Final, Native, Private)

void AFGCharacterPlayer::OnRep_RadiationIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_RadiationIntensity");

	AFGCharacterPlayer_OnRep_RadiationIntensity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_PickupCounter
// (Final, Native, Private)

void AFGCharacterPlayer::OnRep_PickupCounter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_PickupCounter");

	AFGCharacterPlayer_OnRep_PickupCounter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_IsSliding
// (Final, Native, Private)

void AFGCharacterPlayer::OnRep_IsSliding()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_IsSliding");

	AFGCharacterPlayer_OnRep_IsSliding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_InRadioactiveZone
// (Final, Native, Private)

void AFGCharacterPlayer::OnRep_InRadioactiveZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_InRadioactiveZone");

	AFGCharacterPlayer_OnRep_InRadioactiveZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_DrivenVehicle
// (Final, Native, Private)

void AFGCharacterPlayer::OnRep_DrivenVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_DrivenVehicle");

	AFGCharacterPlayer_OnRep_DrivenVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_ActiveEquipments
// (Final, Native, Private)

void AFGCharacterPlayer::OnRep_ActiveEquipments()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_ActiveEquipments");

	AFGCharacterPlayer_OnRep_ActiveEquipments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRep_ActiveAttachments
// (Final, Native, Private)

void AFGCharacterPlayer::OnRep_ActiveAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRep_ActiveAttachments");

	AFGCharacterPlayer_OnRep_ActiveAttachments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnReceiveRadiationStop
// (Event, Protected, BlueprintEvent)

void AFGCharacterPlayer::OnReceiveRadiationStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnReceiveRadiationStop");

	AFGCharacterPlayer_OnReceiveRadiationStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnReceiveRadiationStart
// (Event, Protected, BlueprintEvent)

void AFGCharacterPlayer::OnReceiveRadiationStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnReceiveRadiationStart");

	AFGCharacterPlayer_OnReceiveRadiationStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnRadiationIntensityUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         radiationIntensity             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         radiationImmunity              (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::OnRadiationIntensityUpdated(float* radiationIntensity, float* radiationImmunity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnRadiationIntensityUpdated");

	AFGCharacterPlayer_OnRadiationIntensityUpdated_Params params;
	params.radiationIntensity = radiationIntensity;
	params.radiationImmunity = radiationImmunity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnItemAddedToInventory
// (Final, Native, Protected)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           numAdded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::OnItemAddedToInventory(class UClass** ItemClass, int* numAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnItemAddedToInventory");

	AFGCharacterPlayer_OnItemAddedToInventory_Params params;
	params.ItemClass = ItemClass;
	params.numAdded = numAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnInventorySlotsUnlocked
// (Final, Native, Protected)
// Parameters:
// int*                           newUnlockedSlots               (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::OnInventorySlotsUnlocked(int* newUnlockedSlots)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnInventorySlotsUnlocked");

	AFGCharacterPlayer_OnInventorySlotsUnlocked_Params params;
	params.newUnlockedSlots = newUnlockedSlots;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnDisabledInputGateChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FDisabledInputGate*     NewValue                       (Parm)

void AFGCharacterPlayer::OnDisabledInputGateChanged(struct FDisabledInputGate* NewValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnDisabledInputGateChanged");

	AFGCharacterPlayer_OnDisabledInputGateChanged_Params params;
	params.NewValue = NewValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.OnArmsSlotsUnlocked
// (Final, Native, Protected)
// Parameters:
// int*                           newUnlockedSlots               (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::OnArmsSlotsUnlocked(int* newUnlockedSlots)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.OnArmsSlotsUnlocked");

	AFGCharacterPlayer_OnArmsSlotsUnlocked_Params params;
	params.newUnlockedSlots = newUnlockedSlots;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Multicast_PlayJumpEffects
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// bool*                          boostJump                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::Multicast_PlayJumpEffects(bool* boostJump)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Multicast_PlayJumpEffects");

	AFGCharacterPlayer_Multicast_PlayJumpEffects_Params params;
	params.boostJump = boostJump;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.IsSliding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterPlayer::IsSliding()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.IsSliding");

	AFGCharacterPlayer_IsSliding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.IsFirstPerson
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterPlayer::IsFirstPerson()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.IsFirstPerson");

	AFGCharacterPlayer_IsFirstPerson_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.IsDrivingVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterPlayer::IsDrivingVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.IsDrivingVehicle");

	AFGCharacterPlayer_IsDrivingVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.IsBuildGunEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterPlayer::IsBuildGunEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.IsBuildGunEquipped");

	AFGCharacterPlayer_IsBuildGunEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.HotKeyRecipe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::HotKeyRecipe(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.HotKeyRecipe");

	AFGCharacterPlayer_HotKeyRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.HotKeyDismantle
// (Final, Native, Public, BlueprintCallable)

void AFGCharacterPlayer::HotKeyDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.HotKeyDismantle");

	AFGCharacterPlayer_HotKeyDismantle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.GetWantSprintBobbing
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterPlayer::GetWantSprintBobbing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetWantSprintBobbing");

	AFGCharacterPlayer_GetWantSprintBobbing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetUseDistance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterPlayer::GetUseDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetUseDistance");

	AFGCharacterPlayer_GetUseDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetTrashSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGCharacterPlayer::GetTrashSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetTrashSlot");

	AFGCharacterPlayer_GetTrashSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetTotalPlayerInventorySlots
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGCharacterPlayer::GetTotalPlayerInventorySlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetTotalPlayerInventorySlots");

	AFGCharacterPlayer_GetTotalPlayerInventorySlots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetTotalPlayerArmEquipmentSlots
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGCharacterPlayer::GetTotalPlayerArmEquipmentSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetTotalPlayerArmEquipmentSlots");

	AFGCharacterPlayer_GetTotalPlayerArmEquipmentSlots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetSpringArmComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USpringArmComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USpringArmComponent* AFGCharacterPlayer::GetSpringArmComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetSpringArmComponent");

	AFGCharacterPlayer_GetSpringArmComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetReviveProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterPlayer::GetReviveProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetReviveProgress");

	AFGCharacterPlayer_GetReviveProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetResourceScanner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGResourceScanner*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResourceScanner* AFGCharacterPlayer::GetResourceScanner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetResourceScanner");

	AFGCharacterPlayer_GetResourceScanner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetResourceMiner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGResourceMiner*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResourceMiner* AFGCharacterPlayer::GetResourceMiner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetResourceMiner");

	AFGCharacterPlayer_GetResourceMiner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetRadiationIntensity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterPlayer::GetRadiationIntensity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetRadiationIntensity");

	AFGCharacterPlayer_GetRadiationIntensity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetRadiationImmunity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterPlayer::GetRadiationImmunity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetRadiationImmunity");

	AFGCharacterPlayer_GetRadiationImmunity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetRadiationDamageAngle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterPlayer::GetRadiationDamageAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetRadiationDamageAngle");

	AFGCharacterPlayer_GetRadiationDamageAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetPickupProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterPlayer::GetPickupProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetPickupProgress");

	AFGCharacterPlayer_GetPickupProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetOutline
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGOutlineComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGOutlineComponent* AFGCharacterPlayer::GetOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetOutline");

	AFGCharacterPlayer_GetOutline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetMesh1P
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* AFGCharacterPlayer::GetMesh1P()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetMesh1P");

	AFGCharacterPlayer_GetMesh1P_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetInventoryDropLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class UFGInventoryComponent**  component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FInventoryStack*        stack                          (Parm)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AFGCharacterPlayer::GetInventoryDropLocation(class UFGInventoryComponent** component, struct FInventoryStack* stack)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetInventoryDropLocation");

	AFGCharacterPlayer_GetInventoryDropLocation_Params params;
	params.component = component;
	params.stack = stack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGCharacterPlayer::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetInventory");

	AFGCharacterPlayer_GetInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetEquipmentSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEquipmentSlot*                Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponentEquipment* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponentEquipment* AFGCharacterPlayer::GetEquipmentSlot(EEquipmentSlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetEquipmentSlot");

	AFGCharacterPlayer_GetEquipmentSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetEquipmentInSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEquipmentSlot*                Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// class AFGEquipment*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGEquipment* AFGCharacterPlayer::GetEquipmentInSlot(EEquipmentSlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetEquipmentInSlot");

	AFGCharacterPlayer_GetEquipmentInSlot_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetDrivenVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGDriveablePawn*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGDriveablePawn* AFGCharacterPlayer::GetDrivenVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetDrivenVehicle");

	AFGCharacterPlayer_GetDrivenVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetDesiredWalkHeadBobShake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGCharacterPlayer::GetDesiredWalkHeadBobShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetDesiredWalkHeadBobShake");

	AFGCharacterPlayer_GetDesiredWalkHeadBobShake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetDesiredSprintHeadBobShake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGCharacterPlayer::GetDesiredSprintHeadBobShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetDesiredSprintHeadBobShake");

	AFGCharacterPlayer_GetDesiredSprintHeadBobShake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetCurrentLadderComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGLadderComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGLadderComponent* AFGCharacterPlayer::GetCurrentLadderComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetCurrentLadderComponent");

	AFGCharacterPlayer_GetCurrentLadderComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetCameraMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECameraMode                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECameraMode AFGCharacterPlayer::GetCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetCameraMode");

	AFGCharacterPlayer_GetCameraMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetCameraComponent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCameraComponent* AFGCharacterPlayer::GetCameraComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetCameraComponent");

	AFGCharacterPlayer_GetCameraComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetBuildGun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGBuildGun*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildGun* AFGCharacterPlayer::GetBuildGun()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetBuildGun");

	AFGCharacterPlayer_GetBuildGun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetBestUsableActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFGCharacterPlayer::GetBestUsableActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetBestUsableActor");

	AFGCharacterPlayer_GetBestUsableActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetBeltSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponentBeltSlot* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponentBeltSlot* AFGCharacterPlayer::GetBeltSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetBeltSlot");

	AFGCharacterPlayer_GetBeltSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetArmBoneLocation
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCharacterPlayer::GetArmBoneLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetArmBoneLocation");

	AFGCharacterPlayer_GetArmBoneLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetActiveEquipments
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AFGEquipment*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AFGEquipment*> AFGCharacterPlayer::GetActiveEquipments()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetActiveEquipments");

	AFGCharacterPlayer_GetActiveEquipments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetActiveEquipmentItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEquipmentSlot*                Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryItem          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInventoryItem AFGCharacterPlayer::GetActiveEquipmentItem(EEquipmentSlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetActiveEquipmentItem");

	AFGCharacterPlayer_GetActiveEquipmentItem_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetActiveCrosshairState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ECrosshairState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECrosshairState AFGCharacterPlayer::GetActiveCrosshairState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetActiveCrosshairState");

	AFGCharacterPlayer_GetActiveCrosshairState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.GetActiveAttachments
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AFGEquipmentAttachment*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AFGEquipmentAttachment*> AFGCharacterPlayer::GetActiveAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.GetActiveAttachments");

	AFGCharacterPlayer_GetActiveAttachments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.Get3PMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* AFGCharacterPlayer::Get3PMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Get3PMesh");

	AFGCharacterPlayer_Get3PMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.FilterInventoryClasses
// (Final, Native, Private, Const)
// Parameters:
// class UClass**                 Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCharacterPlayer::FilterInventoryClasses(class UClass** Object, int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.FilterInventoryClasses");

	AFGCharacterPlayer_FilterInventoryClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCharacterPlayer.EquipEquipment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGEquipment**           equipment                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::EquipEquipment(class AFGEquipment** equipment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.EquipEquipment");

	AFGCharacterPlayer_EquipEquipment_Params params;
	params.equipment = equipment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.CrouchReleased
// (Final, Native, Public, BlueprintCallable)

void AFGCharacterPlayer::CrouchReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.CrouchReleased");

	AFGCharacterPlayer_CrouchReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.CrouchPressed
// (Final, Native, Public, BlueprintCallable)

void AFGCharacterPlayer::CrouchPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.CrouchPressed");

	AFGCharacterPlayer_CrouchPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.Client_Revived
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)

void AFGCharacterPlayer::Client_Revived()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.Client_Revived");

	AFGCharacterPlayer_Client_Revived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.CameraZoomOut
// (Native, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::CameraZoomOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.CameraZoomOut");

	AFGCharacterPlayer_CameraZoomOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.CameraZoomIn
// (Native, Event, Public, BlueprintEvent)

void AFGCharacterPlayer::CameraZoomIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.CameraZoomIn");

	AFGCharacterPlayer_CameraZoomIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCharacterPlayer.AddRadiationImmunity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         toAdd                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGCharacterPlayer::AddRadiationImmunity(float* toAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCharacterPlayer.AddRadiationImmunity");

	AFGCharacterPlayer_AddRadiationImmunity_Params params;
	params.toAdd = toAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChatManager.Multicast_BroadcastChatMessage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FChatMessageStruct*     newMessage                     (ConstParm, Parm, ReferenceParm)

void AFGChatManager::Multicast_BroadcastChatMessage(struct FChatMessageStruct* newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.Multicast_BroadcastChatMessage");

	AFGChatManager_Multicast_BroadcastChatMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGChatManager.GetReceivedChatMessages
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<struct FChatMessageStruct> out_messages                   (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGChatManager::GetReceivedChatMessages(TArray<struct FChatMessageStruct>* out_messages)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.GetReceivedChatMessages");

	AFGChatManager_GetReceivedChatMessages_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_messages != nullptr)
		*out_messages = params.out_messages;
}


// Function FactoryGame.FGChatManager.GetMessageVisibleDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGChatManager::GetMessageVisibleDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.GetMessageVisibleDuration");

	AFGChatManager_GetMessageVisibleDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChatManager.GetMaxNumMessagesInHistory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGChatManager::GetMaxNumMessagesInHistory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.GetMaxNumMessagesInHistory");

	AFGChatManager_GetMaxNumMessagesInHistory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChatManager.GetChatMessageName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FChatMessageStruct*     inMessage                      (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGChatManager::STATIC_GetChatMessageName(struct FChatMessageStruct* inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.GetChatMessageName");

	AFGChatManager_GetChatMessageName_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChatManager.GetChatMessageColor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FChatMessageStruct*     inMessage                      (ConstParm, Parm, OutParm, ReferenceParm)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AFGChatManager::STATIC_GetChatMessageColor(struct FChatMessageStruct* inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.GetChatMessageColor");

	AFGChatManager_GetChatMessageColor_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGChatManager.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGChatManager*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGChatManager* AFGChatManager::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGChatManager.Get");

	AFGChatManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.VisitAllMapAreas
// (Final, Exec, Native, Public)

void UFGCheatManager::VisitAllMapAreas()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.VisitAllMapAreas");

	UFGCheatManager_VisitAllMapAreas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.UpdateSessionToOSS
// (Final, Exec, Native, Public)

void UFGCheatManager::UpdateSessionToOSS()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.UpdateSessionToOSS");

	UFGCheatManager_UpdateSessionToOSS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.TurboProductionMode
// (Exec, Native, Public)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::TurboProductionMode(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.TurboProductionMode");

	UFGCheatManager_TurboProductionMode_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.TurboMode_Get
// (Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::TurboMode_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.TurboMode_Get");

	UFGCheatManager_TurboMode_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.TurboBuildMode_Get
// (Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::TurboBuildMode_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.TurboBuildMode_Get");

	UFGCheatManager_TurboBuildMode_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.TurboBuildMode
// (Exec, Native, Public)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::TurboBuildMode(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.TurboBuildMode");

	UFGCheatManager_TurboBuildMode_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.TriggerPresenceUpdate
// (Final, Exec, Native, Public)

void UFGCheatManager::TriggerPresenceUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.TriggerPresenceUpdate");

	UFGCheatManager_TriggerPresenceUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ToggleTrainSelfDriving
// (Final, Exec, Native, Public)

void UFGCheatManager::ToggleTrainSelfDriving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ToggleTrainSelfDriving");

	UFGCheatManager_ToggleTrainSelfDriving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ToggleDebuggingOnPipe
// (Final, Exec, Native, Public)

void UFGCheatManager::ToggleDebuggingOnPipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ToggleDebuggingOnPipe");

	UFGCheatManager_ToggleDebuggingOnPipe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ToggleCameraMode
// (Final, Exec, Native, Public)

void UFGCheatManager::ToggleCameraMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ToggleCameraMode");

	UFGCheatManager_ToggleCameraMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ToggleAudioLandingDebug
// (Final, Exec, Native, Public)

void UFGCheatManager::ToggleAudioLandingDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ToggleAudioLandingDebug");

	UFGCheatManager_ToggleAudioLandingDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ToggleAudioDebug
// (Final, Exec, Native, Public)

void UFGCheatManager::ToggleAudioDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ToggleAudioDebug");

	UFGCheatManager_ToggleAudioDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.TestSharedInventoryPtr
// (Final, Exec, Native, Public)

void UFGCheatManager::TestSharedInventoryPtr()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.TestSharedInventoryPtr");

	UFGCheatManager_TestSharedInventoryPtr_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SplitAllConveyors
// (Final, Exec, Native, Public)

void UFGCheatManager::SplitAllConveyors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SplitAllConveyors");

	UFGCheatManager_SplitAllConveyors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ShowSequenceList
// (Final, Exec, Native, Public)

void UFGCheatManager::ShowSequenceList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ShowSequenceList");

	UFGCheatManager_ShowSequenceList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ShowFactoryOnly_Get
// (Final, Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::ShowFactoryOnly_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ShowFactoryOnly_Get");

	UFGCheatManager_ShowFactoryOnly_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.ShowFactoryOnly
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          environmentHidden              (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::ShowFactoryOnly(bool* environmentHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ShowFactoryOnly");

	UFGCheatManager_ShowFactoryOnly_Params params;
	params.environmentHidden = environmentHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetTradingPostLevel
// (Final, Exec, Native, Public)
// Parameters:
// int*                           inLevel                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetTradingPostLevel(int* inLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetTradingPostLevel");

	UFGCheatManager_SetTradingPostLevel_Params params;
	params.inLevel = inLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetTimeSpeedMultiplier
// (Final, Exec, Native, Public)
// Parameters:
// float*                         Speed                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetTimeSpeedMultiplier(float* Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetTimeSpeedMultiplier");

	UFGCheatManager_SetTimeSpeedMultiplier_Params params;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetTimeOfDay_minute_Get
// (Final, Exec, Native, Public)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCheatManager::SetTimeOfDay_minute_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetTimeOfDay_minute_Get");

	UFGCheatManager_SetTimeOfDay_minute_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.SetTimeOfDay_hour_Get
// (Final, Exec, Native, Public)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCheatManager::SetTimeOfDay_hour_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetTimeOfDay_hour_Get");

	UFGCheatManager_SetTimeOfDay_hour_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.SetTimeOfDay
// (Final, Exec, Native, Public)
// Parameters:
// int*                           hour                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           minute                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetTimeOfDay(int* hour, int* minute)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetTimeOfDay");

	UFGCheatManager_SetTimeOfDay_Params params;
	params.hour = hour;
	params.minute = minute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetSlomo
// (Final, Exec, Native, Public)
// Parameters:
// float*                         Slomo                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetSlomo(float* Slomo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetSlomo");

	UFGCheatManager_SetSlomo_Params params;
	params.Slomo = Slomo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetRandomDebugStartingPoint
// (Final, Exec, Native, Public)

void UFGCheatManager::SetRandomDebugStartingPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetRandomDebugStartingPoint");

	UFGCheatManager_SetRandomDebugStartingPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetGamePhase
// (Final, Exec, Native, Public)
// Parameters:
// TEnumAsByte<EGamePhase>*       phase                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetGamePhase(TEnumAsByte<EGamePhase>* phase)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetGamePhase");

	UFGCheatManager_SetGamePhase_Params params;
	params.phase = phase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetFactoryDetailReplication_Get
// (Final, Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::SetFactoryDetailReplication_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetFactoryDetailReplication_Get");

	UFGCheatManager_SetFactoryDetailReplication_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.SetFactoryDetailReplication
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetFactoryDetailReplication(bool* enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetFactoryDetailReplication");

	UFGCheatManager_SetFactoryDetailReplication_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetDebugStartingPoint
// (Final, Exec, Native, Public)
// Parameters:
// struct FName*                  startingPoint                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetDebugStartingPoint(struct FName* startingPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetDebugStartingPoint");

	UFGCheatManager_SetDebugStartingPoint_Params params;
	params.startingPoint = startingPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SetAITickDistance
// (Final, Exec, Native, Public)
// Parameters:
// float*                         Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::SetAITickDistance(float* Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SetAITickDistance");

	UFGCheatManager_SetAITickDistance_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.SendInviteToFriend
// (Final, Exec, Native, Public)
// Parameters:
// class FString*                 friendName                     (Parm, ZeroConstructor)

void UFGCheatManager::SendInviteToFriend(class FString* friendName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.SendInviteToFriend");

	UFGCheatManager_SendInviteToFriend_Params params;
	params.friendName = friendName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.RunDebugMetric
// (Final, Exec, Native, Public)

void UFGCheatManager::RunDebugMetric()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.RunDebugMetric");

	UFGCheatManager_RunDebugMetric_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ResetSchematics
// (Final, Exec, Native, Public)

void UFGCheatManager::ResetSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ResetSchematics");

	UFGCheatManager_ResetSchematics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ResetRecipes
// (Final, Exec, Native, Public)

void UFGCheatManager::ResetRecipes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ResetRecipes");

	UFGCheatManager_ResetRecipes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ResetHubTutorial
// (Final, Exec, Native, Public)

void UFGCheatManager::ResetHubTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ResetHubTutorial");

	UFGCheatManager_ResetHubTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ResetGamePhases
// (Final, Exec, Native, Public)

void UFGCheatManager::ResetGamePhases()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ResetGamePhases");

	UFGCheatManager_ResetGamePhases_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ResetFuses
// (Final, Exec, Native, Public)

void UFGCheatManager::ResetFuses()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ResetFuses");

	UFGCheatManager_ResetFuses_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ResetAllPipes
// (Final, Exec, Native, Public)

void UFGCheatManager::ResetAllPipes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ResetAllPipes");

	UFGCheatManager_ResetAllPipes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ResetAllFactoryLegsToZero
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          repopulateEmptyLegs            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::ResetAllFactoryLegsToZero(bool* repopulateEmptyLegs)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ResetAllFactoryLegsToZero");

	UFGCheatManager_ResetAllFactoryLegsToZero_Params params;
	params.repopulateEmptyLegs = repopulateEmptyLegs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ReplayBuildingEffects
// (Final, Exec, Native, Public)

void UFGCheatManager::ReplayBuildingEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ReplayBuildingEffects");

	UFGCheatManager_ReplayBuildingEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.RemoveAllFoliage
// (Final, Exec, Native, Public)
// Parameters:
// int*                           maxNumInstances                (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::RemoveAllFoliage(int* maxNumInstances)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.RemoveAllFoliage");

	UFGCheatManager_RemoveAllFoliage_Params params;
	params.maxNumInstances = maxNumInstances;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.RebuildPowerCircuits
// (Exec, Native, Public)

void UFGCheatManager::RebuildPowerCircuits()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.RebuildPowerCircuits");

	UFGCheatManager_RebuildPowerCircuits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.RebuildFactoryLegsOneTileAroundPlayer
// (Final, Exec, Native, Public)

void UFGCheatManager::RebuildFactoryLegsOneTileAroundPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.RebuildFactoryLegsOneTileAroundPlayer");

	UFGCheatManager_RebuildFactoryLegsOneTileAroundPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.RandomizeBuildingsColorSlot
// (Final, Exec, Native, Public)
// Parameters:
// unsigned char*                 SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::RandomizeBuildingsColorSlot(unsigned char* SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.RandomizeBuildingsColorSlot");

	UFGCheatManager_RandomizeBuildingsColorSlot_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PurgeInactiveClientsFromSave
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          fetchInventories               (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::PurgeInactiveClientsFromSave(bool* fetchInventories)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PurgeInactiveClientsFromSave");

	UFGCheatManager_PurgeInactiveClientsFromSave_Params params;
	params.fetchInventories = fetchInventories;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PurgeAllTrainState
// (Final, Exec, Native, Public)

void UFGCheatManager::PurgeAllTrainState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PurgeAllTrainState");

	UFGCheatManager_PurgeAllTrainState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PurgeAllBeaconsFromSave
// (Final, Exec, Native, Public)

void UFGCheatManager::PurgeAllBeaconsFromSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PurgeAllBeaconsFromSave");

	UFGCheatManager_PurgeAllBeaconsFromSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PumpiMode_Get
// (Final, Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::PumpiMode_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PumpiMode_Get");

	UFGCheatManager_PumpiMode_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.PumpiMode
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::PumpiMode(bool* enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PumpiMode");

	UFGCheatManager_PumpiMode_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PrintStaticMeshesHierarchy
// (Final, Exec, Native, Public)

void UFGCheatManager::PrintStaticMeshesHierarchy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PrintStaticMeshesHierarchy");

	UFGCheatManager_PrintStaticMeshesHierarchy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PlayerNoClipModeOnFly_Get
// (Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::PlayerNoClipModeOnFly_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PlayerNoClipModeOnFly_Get");

	UFGCheatManager_PlayerNoClipModeOnFly_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.PlayerNoClipModeOnFly
// (Exec, Native, Public)
// Parameters:
// bool*                          gohstMode                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::PlayerNoClipModeOnFly(bool* gohstMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PlayerNoClipModeOnFly");

	UFGCheatManager_PlayerNoClipModeOnFly_Params params;
	params.gohstMode = gohstMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PlayerFly_Get
// (Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::PlayerFly_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PlayerFly_Get");

	UFGCheatManager_PlayerFly_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.PlayerFly
// (Exec, Native, Public)
// Parameters:
// bool*                          flyModeEnabled                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::PlayerFly(bool* flyModeEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PlayerFly");

	UFGCheatManager_PlayerFly_Params params;
	params.flyModeEnabled = flyModeEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.PardonAllPlayers
// (Exec, Native, Public)

void UFGCheatManager::PardonAllPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.PardonAllPlayers");

	UFGCheatManager_PardonAllPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.OpenModMap
// (Final, Exec, Native, Public)

void UFGCheatManager::OpenModMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.OpenModMap");

	UFGCheatManager_OpenModMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.NoPower_Get
// (Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::NoPower_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.NoPower_Get");

	UFGCheatManager_NoPower_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.NoPower
// (Exec, Native, Public)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::NoPower(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.NoPower");

	UFGCheatManager_NoPower_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.NoMessages_Get
// (Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::NoMessages_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.NoMessages_Get");

	UFGCheatManager_NoMessages_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.NoMessages
// (Exec, Native, Public)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::NoMessages(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.NoMessages");

	UFGCheatManager_NoMessages_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.NoCost_Get
// (Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::NoCost_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.NoCost_Get");

	UFGCheatManager_NoCost_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.NoCost
// (Exec, Native, Public)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::NoCost(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.NoCost");

	UFGCheatManager_NoCost_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MergeAllConveyors
// (Final, Exec, Native, Public)

void UFGCheatManager::MergeAllConveyors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MergeAllConveyors");

	UFGCheatManager_MergeAllConveyors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_UpdatePresenceString
// (Final, Exec, Native, Public)
// Parameters:
// class FString*                 String                         (Parm, ZeroConstructor)

void UFGCheatManager::MCP_UpdatePresenceString(class FString* String)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_UpdatePresenceString");

	UFGCheatManager_MCP_UpdatePresenceString_Params params;
	params.String = String;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_UpdatePresence
// (Final, Exec, Native, Public)
// Parameters:
// class FString*                 Key                            (Parm, ZeroConstructor)
// class FString*                 Value                          (Parm, ZeroConstructor)

void UFGCheatManager::MCP_UpdatePresence(class FString* Key, class FString* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_UpdatePresence");

	UFGCheatManager_MCP_UpdatePresence_Params params;
	params.Key = Key;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_LogPresence
// (Final, Exec, Native, Public)

void UFGCheatManager::MCP_LogPresence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_LogPresence");

	UFGCheatManager_MCP_LogPresence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_Logout
// (Final, Exec, Native, Public)

void UFGCheatManager::MCP_Logout()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_Logout");

	UFGCheatManager_MCP_Logout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_Login
// (Final, Exec, Native, Public)
// Parameters:
// class FString*                 UserName                       (Parm, ZeroConstructor)
// class FString*                 password                       (Parm, ZeroConstructor)

void UFGCheatManager::MCP_Login(class FString* UserName, class FString* password)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_Login");

	UFGCheatManager_MCP_Login_Params params;
	params.UserName = UserName;
	params.password = password;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_GetOnlineStatus
// (Final, Exec, Native, Public)
// Parameters:
// int*                           localPlayerNum                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::MCP_GetOnlineStatus(int* localPlayerNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_GetOnlineStatus");

	UFGCheatManager_MCP_GetOnlineStatus_Params params;
	params.localPlayerNum = localPlayerNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.MCP_GetFriends
// (Final, Exec, Native, Public)

void UFGCheatManager::MCP_GetFriends()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.MCP_GetFriends");

	UFGCheatManager_MCP_GetFriends_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ListUnlockedRecipesAndSchematics
// (Final, Exec, Native, Public)

void UFGCheatManager::ListUnlockedRecipesAndSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ListUnlockedRecipesAndSchematics");

	UFGCheatManager_ListUnlockedRecipesAndSchematics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ListItemPickups
// (Final, Exec, Native, Public)

void UFGCheatManager::ListItemPickups()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ListItemPickups");

	UFGCheatManager_ListItemPickups_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ListDebugStartingPoint
// (Final, Exec, Native, Public)

void UFGCheatManager::ListDebugStartingPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ListDebugStartingPoint");

	UFGCheatManager_ListDebugStartingPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.HideFactoryOnly_Get
// (Final, Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::HideFactoryOnly_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.HideFactoryOnly_Get");

	UFGCheatManager_HideFactoryOnly_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.HideFactoryOnly
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          factoryHidden                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::HideFactoryOnly(bool* factoryHidden)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.HideFactoryOnly");

	UFGCheatManager_HideFactoryOnly_Params params;
	params.factoryHidden = factoryHidden;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.HideAllBuildings_Get
// (Final, Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::HideAllBuildings_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.HideAllBuildings_Get");

	UFGCheatManager_HideAllBuildings_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.HideAllBuildings
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          InVisibility                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::HideAllBuildings(bool* InVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.HideAllBuildings");

	UFGCheatManager_HideAllBuildings_Params params;
	params.InVisibility = InVisibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveStorySchematics
// (Exec, Native, Public)

void UFGCheatManager::GiveStorySchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveStorySchematics");

	UFGCheatManager_GiveStorySchematics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveStartingResearch
// (Final, Exec, Native, Public)

void UFGCheatManager::GiveStartingResearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveStartingResearch");

	UFGCheatManager_GiveStartingResearch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveSchematicsOfTier
// (Final, Exec, Native, Public)
// Parameters:
// int*                           tier                           (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::GiveSchematicsOfTier(int* tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveSchematicsOfTier");

	UFGCheatManager_GiveSchematicsOfTier_Params params;
	params.tier = tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveResourceSinkCoupons
// (Exec, Native, Public)
// Parameters:
// int*                           numCoupons                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::GiveResourceSinkCoupons(int* numCoupons)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveResourceSinkCoupons");

	UFGCheatManager_GiveResourceSinkCoupons_Params params;
	params.numCoupons = numCoupons;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveItemStacks
// (Exec, Native, Public)
// Parameters:
// class UClass**                 Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           NumberOfStacks                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::GiveItemStacks(class UClass** Resource, int* NumberOfStacks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveItemStacks");

	UFGCheatManager_GiveItemStacks_Params params;
	params.Resource = Resource;
	params.NumberOfStacks = NumberOfStacks;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveItemsSingle
// (Exec, Native, Public)
// Parameters:
// class UClass**                 Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           NumberOfItems                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::GiveItemsSingle(class UClass** Resource, int* NumberOfItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveItemsSingle");

	UFGCheatManager_GiveItemsSingle_Params params;
	params.Resource = Resource;
	params.NumberOfItems = NumberOfItems;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveCheatSchematics
// (Exec, Native, Public)

void UFGCheatManager::GiveCheatSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveCheatSchematics");

	UFGCheatManager_GiveCheatSchematics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveAvailableSchematics
// (Exec, Native, Public)

void UFGCheatManager::GiveAvailableSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveAvailableSchematics");

	UFGCheatManager_GiveAvailableSchematics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveAllSchematicsAndPhases
// (Final, Exec, Native, Public)

void UFGCheatManager::GiveAllSchematicsAndPhases()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveAllSchematicsAndPhases");

	UFGCheatManager_GiveAllSchematicsAndPhases_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GiveALLSchematics
// (Exec, Native, Public)

void UFGCheatManager::GiveALLSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GiveALLSchematics");

	UFGCheatManager_GiveALLSchematics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.GetVehicleInfo
// (Final, Exec, Native, Public)

void UFGCheatManager::GetVehicleInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.GetVehicleInfo");

	UFGCheatManager_GetVehicleInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ForceSpawnCreatures
// (Final, Exec, Native, Public)

void UFGCheatManager::ForceSpawnCreatures()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ForceSpawnCreatures");

	UFGCheatManager_ForceSpawnCreatures_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.FlipVehicle
// (Final, Exec, Native, Public)

void UFGCheatManager::FlipVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.FlipVehicle");

	UFGCheatManager_FlipVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.FillFirstPipeInEachNetwork
// (Final, Exec, Native, Public)

void UFGCheatManager::FillFirstPipeInEachNetwork()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.FillFirstPipeInEachNetwork");

	UFGCheatManager_FillFirstPipeInEachNetwork_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.EnablePlayerFOV_Get
// (Final, Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::EnablePlayerFOV_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.EnablePlayerFOV_Get");

	UFGCheatManager_EnablePlayerFOV_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.EnablePlayerFOV
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::EnablePlayerFOV(bool* enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.EnablePlayerFOV");

	UFGCheatManager_EnablePlayerFOV_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.EnableInstancingOnFactory
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::EnableInstancingOnFactory(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.EnableInstancingOnFactory");

	UFGCheatManager_EnableInstancingOnFactory_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.EnableBuildableTick_Get
// (Final, Exec, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCheatManager::EnableBuildableTick_Get()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.EnableBuildableTick_Get");

	UFGCheatManager_EnableBuildableTick_Get_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCheatManager.EnableBuildableTick
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::EnableBuildableTick(bool* enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.EnableBuildableTick");

	UFGCheatManager_EnableBuildableTick_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.EnableAudioDebug
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          IsEnabled                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::EnableAudioDebug(bool* IsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.EnableAudioDebug");

	UFGCheatManager_EnableAudioDebug_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.EmptyAllPipes
// (Final, Exec, Native, Public)

void UFGCheatManager::EmptyAllPipes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.EmptyAllPipes");

	UFGCheatManager_EmptyAllPipes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpTicking
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          detailed                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::DumpTicking(bool* detailed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpTicking");

	UFGCheatManager_DumpTicking_Params params;
	params.detailed = detailed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpSignificanceManagedObjects
// (Final, Exec, Native, Public)

void UFGCheatManager::DumpSignificanceManagedObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpSignificanceManagedObjects");

	UFGCheatManager_DumpSignificanceManagedObjects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpSchematics
// (Final, Exec, Native, Public)

void UFGCheatManager::DumpSchematics()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpSchematics");

	UFGCheatManager_DumpSchematics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpPlayerStates
// (Final, Exec, Native, Public)

void UFGCheatManager::DumpPlayerStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpPlayerStates");

	UFGCheatManager_DumpPlayerStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpNonDormantActors
// (Final, Exec, Native, Public)

void UFGCheatManager::DumpNonDormantActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpNonDormantActors");

	UFGCheatManager_DumpNonDormantActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpGamePhases
// (Final, Exec, Native, Public)

void UFGCheatManager::DumpGamePhases()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpGamePhases");

	UFGCheatManager_DumpGamePhases_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpDynamicOptionsSettings
// (Final, Exec, Native, Public)

void UFGCheatManager::DumpDynamicOptionsSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpDynamicOptionsSettings");

	UFGCheatManager_DumpDynamicOptionsSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpAttachedToSkelMesh
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          detailed                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGCheatManager::DumpAttachedToSkelMesh(bool* detailed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpAttachedToSkelMesh");

	UFGCheatManager_DumpAttachedToSkelMesh_Params params;
	params.detailed = detailed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpAllAvailableRecipes
// (Final, Exec, Native, Public)

void UFGCheatManager::DumpAllAvailableRecipes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpAllAvailableRecipes");

	UFGCheatManager_DumpAllAvailableRecipes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpActorRepresentations
// (Final, Exec, Native, Public)

void UFGCheatManager::DumpActorRepresentations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpActorRepresentations");

	UFGCheatManager_DumpActorRepresentations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DumpActiveGPUParticles
// (Final, Exec, Native, Public)

void UFGCheatManager::DumpActiveGPUParticles()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DumpActiveGPUParticles");

	UFGCheatManager_DumpActiveGPUParticles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DestroyPawn
// (Final, Exec, Native, Public)

void UFGCheatManager::DestroyPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DestroyPawn");

	UFGCheatManager_DestroyPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.DebugCrash
// (Final, Exec, Native, Public)

void UFGCheatManager::DebugCrash()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.DebugCrash");

	UFGCheatManager_DebugCrash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.CompleteResearch
// (Final, Exec, Native, Public)

void UFGCheatManager::CompleteResearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.CompleteResearch");

	UFGCheatManager_CompleteResearch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ClearPardon
// (Exec, Native, Public)

void UFGCheatManager::ClearPardon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ClearPardon");

	UFGCheatManager_ClearPardon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCheatManager.ClearGiveItemPopularList
// (Exec, Native, Public)

void UFGCheatManager::ClearGiveItemPopularList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCheatManager.ClearGiveItemPopularList");

	UFGCheatManager_ClearGiveItemPopularList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuit.GetCircuitID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuit::GetCircuitID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuit.GetCircuitID");

	UFGCircuit_GetCircuitID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.RemoveHiddenConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGCircuitConnectionComponent** Other                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGCircuitConnectionComponent::RemoveHiddenConnection(class UFGCircuitConnectionComponent** Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.RemoveHiddenConnection");

	UFGCircuitConnectionComponent_RemoveHiddenConnection_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitConnectionComponent.ReceiveOnCircuitIDChanged
// (Event, Protected, BlueprintEvent)

void UFGCircuitConnectionComponent::ReceiveOnCircuitIDChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.ReceiveOnCircuitIDChanged");

	UFGCircuitConnectionComponent_ReceiveOnCircuitIDChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitConnectionComponent.OnRep_CircuitIDChanged
// (Final, Native, Public)

void UFGCircuitConnectionComponent::OnRep_CircuitIDChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.OnRep_CircuitIDChanged");

	UFGCircuitConnectionComponent_OnRep_CircuitIDChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitConnectionComponent.IsHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCircuitConnectionComponent::IsHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.IsHidden");

	UFGCircuitConnectionComponent_IsHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.IsConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::IsConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.IsConnected");

	UFGCircuitConnectionComponent_IsConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.GetNumHiddenConnections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::GetNumHiddenConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.GetNumHiddenConnections");

	UFGCircuitConnectionComponent_GetNumHiddenConnections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.GetNumFreeConnections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::GetNumFreeConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.GetNumFreeConnections");

	UFGCircuitConnectionComponent_GetNumFreeConnections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.GetNumConnections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::GetNumConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.GetNumConnections");

	UFGCircuitConnectionComponent_GetNumConnections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.GetMaxNumConnections
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::GetMaxNumConnections()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.GetMaxNumConnections");

	UFGCircuitConnectionComponent_GetMaxNumConnections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.GetCircuitID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGCircuitConnectionComponent::GetCircuitID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.GetCircuitID");

	UFGCircuitConnectionComponent_GetCircuitID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitConnectionComponent.AddHiddenConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGCircuitConnectionComponent** Other                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGCircuitConnectionComponent::AddHiddenConnection(class UFGCircuitConnectionComponent** Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitConnectionComponent.AddHiddenConnection");

	UFGCircuitConnectionComponent_AddHiddenConnection_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitSubsystem.PowerCircuit_OnFuseSet
// (Event, Protected, BlueprintEvent)

void AFGCircuitSubsystem::PowerCircuit_OnFuseSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitSubsystem.PowerCircuit_OnFuseSet");

	AFGCircuitSubsystem_PowerCircuit_OnFuseSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitSubsystem.PowerCircuit_OnFuseReset
// (Event, Protected, BlueprintEvent)

void AFGCircuitSubsystem::PowerCircuit_OnFuseReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitSubsystem.PowerCircuit_OnFuseReset");

	AFGCircuitSubsystem_PowerCircuit_OnFuseReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitSubsystem.OnRep_ReplicatedCircuits
// (Final, Native, Private)

void AFGCircuitSubsystem::OnRep_ReplicatedCircuits()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitSubsystem.OnRep_ReplicatedCircuits");

	AFGCircuitSubsystem_OnRep_ReplicatedCircuits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCircuitSubsystem.GetCircuitSubsystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGCircuitSubsystem*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCircuitSubsystem* AFGCircuitSubsystem::STATIC_GetCircuitSubsystem(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitSubsystem.GetCircuitSubsystem");

	AFGCircuitSubsystem_GetCircuitSubsystem_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCircuitSubsystem.FindCircuit
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int*                           circuitID                      (Parm, ZeroConstructor, IsPlainOldData)
// class UFGCircuit*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGCircuit* AFGCircuitSubsystem::FindCircuit(int* circuitID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCircuitSubsystem.FindCircuit");

	AFGCircuitSubsystem_FindCircuit_Params params;
	params.circuitID = circuitID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWeaponInstantFire.Server_NotifyMiss
// (Net, Native, Event, Protected, NetServer, NetValidate)

void AFGWeaponInstantFire::Server_NotifyMiss()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponInstantFire.Server_NotifyMiss");

	AFGWeaponInstantFire_Server_NotifyMiss_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponInstantFire.Server_NotifyHit
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)

void AFGWeaponInstantFire::Server_NotifyHit(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponInstantFire.Server_NotifyHit");

	AFGWeaponInstantFire_Server_NotifyHit_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.ToggleColorPickerUI
// (Event, Public, BlueprintEvent)

void AFGColorGun::ToggleColorPickerUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.ToggleColorPickerUI");

	AFGColorGun_ToggleColorPickerUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.Sever_SetSecondaryColorForSlot
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// unsigned char*                 SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           NewColor                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGColorGun::Sever_SetSecondaryColorForSlot(unsigned char* SlotIndex, struct FLinearColor* NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.Sever_SetSecondaryColorForSlot");

	AFGColorGun_Sever_SetSecondaryColorForSlot_Params params;
	params.SlotIndex = SlotIndex;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.Sever_SetPrimaryColorForSlot
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// unsigned char*                 SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           NewColor                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGColorGun::Sever_SetPrimaryColorForSlot(unsigned char* SlotIndex, struct FLinearColor* NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.Sever_SetPrimaryColorForSlot");

	AFGColorGun_Sever_SetPrimaryColorForSlot_Params params;
	params.SlotIndex = SlotIndex;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.Sever_SetColorSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char*                 SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGColorGun::Sever_SetColorSlot(unsigned char* SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.Sever_SetColorSlot");

	AFGColorGun_Sever_SetColorSlot_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.SetSecondaryColorForSlot
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// unsigned char*                 SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           NewColor                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGColorGun::SetSecondaryColorForSlot(unsigned char* SlotIndex, struct FLinearColor* NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.SetSecondaryColorForSlot");

	AFGColorGun_SetSecondaryColorForSlot_Params params;
	params.SlotIndex = SlotIndex;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.SetPrimaryColorForSlot
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// unsigned char*                 SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           NewColor                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGColorGun::SetPrimaryColorForSlot(unsigned char* SlotIndex, struct FLinearColor* NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.SetPrimaryColorForSlot");

	AFGColorGun_SetPrimaryColorForSlot_Params params;
	params.SlotIndex = SlotIndex;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.SetColorSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char*                 SlotIndex                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGColorGun::SetColorSlot(unsigned char* SlotIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.SetColorSlot");

	AFGColorGun_SetColorSlot_Params params;
	params.SlotIndex = SlotIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.OnTargetStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EFGColorGunTargetType*         targetType                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGColorGun::OnTargetStateChanged(EFGColorGunTargetType* targetType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.OnTargetStateChanged");

	AFGColorGun_OnTargetStateChanged_Params params;
	params.targetType = targetType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.OnSecondaryFirePressed
// (Final, Native, Protected)

void AFGColorGun::OnSecondaryFirePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.OnSecondaryFirePressed");

	AFGColorGun_OnSecondaryFirePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorGun.GetSecondaryColorForSlot
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AFGColorGun::GetSecondaryColorForSlot(unsigned char* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetSecondaryColorForSlot");

	AFGColorGun_GetSecondaryColorForSlot_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetSecondaryColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AFGColorGun::GetSecondaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetSecondaryColor");

	AFGColorGun_GetSecondaryColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetPrimaryColorForSlot
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AFGColorGun::GetPrimaryColorForSlot(unsigned char* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetPrimaryColorForSlot");

	AFGColorGun_GetPrimaryColorForSlot_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetPrimaryColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AFGColorGun::GetPrimaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetPrimaryColor");

	AFGColorGun_GetPrimaryColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetNumColorSlotsExposedToPlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AFGColorGun::GetNumColorSlotsExposedToPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetNumColorSlotsExposedToPlayers");

	AFGColorGun_GetNumColorSlotsExposedToPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetMaxNumColorSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AFGColorGun::GetMaxNumColorSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetMaxNumColorSlots");

	AFGColorGun_GetMaxNumColorSlots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorGun.GetColorSlotIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AFGColorGun::GetColorSlotIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorGun.GetColorSlotIndex");

	AFGColorGun_GetColorSlotIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorInterface.StopIsAimedAtForColor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGColorInterface::StopIsAimedAtForColor(class AFGCharacterPlayer** byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.StopIsAimedAtForColor");

	UFGColorInterface_StopIsAimedAtForColor_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorInterface.StartIsAimedAtForColor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGColorInterface::StartIsAimedAtForColor(class AFGCharacterPlayer** byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.StartIsAimedAtForColor");

	UFGColorInterface_StartIsAimedAtForColor_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorInterface.SetColorSlot
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// unsigned char*                 Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGColorInterface::SetColorSlot(unsigned char* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.SetColorSlot");

	UFGColorInterface_SetColorSlot_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGColorInterface.GetSecondaryColor
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor UFGColorInterface::GetSecondaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.GetSecondaryColor");

	UFGColorInterface_GetSecondaryColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorInterface.GetPrimaryColor
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor UFGColorInterface::GetPrimaryColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.GetPrimaryColor");

	UFGColorInterface_GetPrimaryColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorInterface.GetColorSlot
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UFGColorInterface::GetColorSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.GetColorSlot");

	UFGColorInterface_GetColorSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGColorInterface.GetCanBeColored
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGColorInterface::GetCanBeColored()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGColorInterface.GetCanBeColored");

	UFGColorInterface_GetCanBeColored_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCombatFunctionLibrary.TryGetCharacterFromDamageCauser
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGCharacterBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterBase* UFGCombatFunctionLibrary::STATIC_TryGetCharacterFromDamageCauser(class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCombatFunctionLibrary.TryGetCharacterFromDamageCauser");

	UFGCombatFunctionLibrary_TryGetCharacterFromDamageCauser_Params params;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCombatFunctionLibrary.IsWithinRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn**                  attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UFGAggroTargetInterface>* victim                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         range                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCombatFunctionLibrary::STATIC_IsWithinRange(class APawn** attacker, TScriptInterface<class UFGAggroTargetInterface>* victim, float* range)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCombatFunctionLibrary.IsWithinRange");

	UFGCombatFunctionLibrary_IsWithinRange_Params params;
	params.attacker = attacker;
	params.victim = victim;
	params.range = range;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCombatFunctionLibrary.IsWithinAttackRange
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn**                  attacker                       (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UFGAggroTargetInterface>* victim                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 attackClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGCombatFunctionLibrary::STATIC_IsWithinAttackRange(class APawn** attacker, TScriptInterface<class UFGAggroTargetInterface>* victim, class UClass** attackClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCombatFunctionLibrary.IsWithinAttackRange");

	UFGCombatFunctionLibrary_IsWithinAttackRange_Params params;
	params.attacker = attacker;
	params.victim = victim;
	params.attackClass = attackClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCombatFunctionLibrary.DoRadialDamageWithinCollision
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AController**            Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class UShapeComponent**        collisionShape                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector*                centerLocation                 (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGCombatFunctionLibrary::STATIC_DoRadialDamageWithinCollision(class AController** Controller, class UShapeComponent** collisionShape, struct FVector* centerLocation, class UClass** DamageType, float* Damage, float* Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCombatFunctionLibrary.DoRadialDamageWithinCollision");

	UFGCombatFunctionLibrary_DoRadialDamageWithinCollision_Params params;
	params.Controller = Controller;
	params.collisionShape = collisionShape;
	params.centerLocation = centerLocation;
	params.DamageType = DamageType;
	params.Damage = Damage;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.SetCompassObjectVisbility
// (Final, Native, Public)
// Parameters:
// bool*                          visibile                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassObjectWidget::SetCompassObjectVisbility(bool* visibile)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.SetCompassObjectVisbility");

	UFGCompassObjectWidget_SetCompassObjectVisbility_Params params;
	params.visibile = visibile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.SetAsStaticDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Direction                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassObjectWidget::SetAsStaticDirection(struct FVector* Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.SetAsStaticDirection");

	UFGCompassObjectWidget_SetAsStaticDirection_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.SetActorRepresentation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassObjectWidget::SetActorRepresentation(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.SetActorRepresentation");

	UFGCompassObjectWidget_SetActorRepresentation_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.OnObjectCentered
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          centered                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassObjectWidget::OnObjectCentered(bool* centered)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.OnObjectCentered");

	UFGCompassObjectWidget_OnObjectCentered_Params params;
	params.centered = centered;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.OnCompassObjectUpdated
// (Native, Event, Public, BlueprintEvent)

void UFGCompassObjectWidget::OnCompassObjectUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.OnCompassObjectUpdated");

	UFGCompassObjectWidget_OnCompassObjectUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.OnCompassObjectAddedToPanel
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UCanvasPanelSlot**       parentSlot                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGCompassObjectWidget::OnCompassObjectAddedToPanel(class UCanvasPanelSlot** parentSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.OnCompassObjectAddedToPanel");

	UFGCompassObjectWidget_OnCompassObjectAddedToPanel_Params params;
	params.parentSlot = parentSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassObjectWidget.GetRepresentationType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERepresentationType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ERepresentationType UFGCompassObjectWidget::GetRepresentationType()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetRepresentationType");

	UFGCompassObjectWidget_GetRepresentationType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassObjectWidget.GetDirectionFromLocation
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGCompassObjectWidget::GetDirectionFromLocation(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetDirectionFromLocation");

	UFGCompassObjectWidget_GetDirectionFromLocation_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassObjectWidget.GetBlockingAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCompassObjectWidget::GetBlockingAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetBlockingAmount");

	UFGCompassObjectWidget_GetBlockingAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassObjectWidget.GetAngleFromDirection
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCompassObjectWidget::GetAngleFromDirection(struct FVector* Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetAngleFromDirection");

	UFGCompassObjectWidget_GetAngleFromDirection_Params params;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassObjectWidget.GetAlphaAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGCompassObjectWidget::GetAlphaAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetAlphaAmount");

	UFGCompassObjectWidget_GetAlphaAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassObjectWidget.GetActorRepresentation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGActorRepresentation*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGActorRepresentation* UFGCompassObjectWidget::GetActorRepresentation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassObjectWidget.GetActorRepresentation");

	UFGCompassObjectWidget_GetActorRepresentation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.RemoveCompassObjectForRepresentation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::RemoveCompassObjectForRepresentation(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.RemoveCompassObjectForRepresentation");

	UFGCompassWidget_RemoveCompassObjectForRepresentation_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.RemoveAllCompassRepresentations
// (Final, Native, Protected, BlueprintCallable)

void UFGCompassWidget::RemoveAllCompassRepresentations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.RemoveAllCompassRepresentations");

	UFGCompassWidget_RemoveAllCompassRepresentations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.OnActorRepresentationUpdated
// (Final, Native, Protected)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::OnActorRepresentationUpdated(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.OnActorRepresentationUpdated");

	UFGCompassWidget_OnActorRepresentationUpdated_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.OnActorRepresentationRemoved
// (Final, Native, Protected)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::OnActorRepresentationRemoved(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.OnActorRepresentationRemoved");

	UFGCompassWidget_OnActorRepresentationRemoved_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.OnActorRepresentationFiltered
// (Final, Native, Protected)
// Parameters:
// ERepresentationType*           Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::OnActorRepresentationFiltered(ERepresentationType* Type, bool* visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.OnActorRepresentationFiltered");

	UFGCompassWidget_OnActorRepresentationFiltered_Params params;
	params.Type = Type;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.OnActorRepresentationAdded
// (Final, Native, Protected)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::OnActorRepresentationAdded(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.OnActorRepresentationAdded");

	UFGCompassWidget_OnActorRepresentationAdded_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.GetCompassObjectWidgetClass
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGCompassWidget::GetCompassObjectWidgetClass(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.GetCompassObjectWidgetClass");

	UFGCompassWidget_GetCompassObjectWidgetClass_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.GetCompassLineOffset
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UFGCompassWidget::GetCompassLineOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.GetCompassLineOffset");

	UFGCompassWidget_GetCompassLineOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.CreatePrimitiveCompassObject
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UClass**                 compassObjectTemplate          (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             Texture                        (Parm, ZeroConstructor, IsPlainOldData)
// class UFGCompassObjectWidget*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGCompassObjectWidget* UFGCompassWidget::CreatePrimitiveCompassObject(class UClass** compassObjectTemplate, class UTexture2D** Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.CreatePrimitiveCompassObject");

	UFGCompassWidget_CreatePrimitiveCompassObject_Params params;
	params.compassObjectTemplate = compassObjectTemplate;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.CreateCompassObject
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UClass**                 compassObjectTemplate          (Parm, ZeroConstructor, IsPlainOldData)
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)
// class UFGCompassObjectWidget*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGCompassObjectWidget* UFGCompassWidget::CreateCompassObject(class UClass** compassObjectTemplate, class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.CreateCompassObject");

	UFGCompassWidget_CreateCompassObject_Params params;
	params.compassObjectTemplate = compassObjectTemplate;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.BindActorRepresentationManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGActorRepresentationManager** representationManager          (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::BindActorRepresentationManager(class AFGActorRepresentationManager** representationManager)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.BindActorRepresentationManager");

	UFGCompassWidget_BindActorRepresentationManager_Params params;
	params.representationManager = representationManager;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.AddCompassObjectForRepresentation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 compassObjectTemplate          (Parm, ZeroConstructor, IsPlainOldData)
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)
// class UFGCompassObjectWidget*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGCompassObjectWidget* UFGCompassWidget::AddCompassObjectForRepresentation(class UClass** compassObjectTemplate, class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.AddCompassObjectForRepresentation");

	UFGCompassWidget_AddCompassObjectForRepresentation_Params params;
	params.compassObjectTemplate = compassObjectTemplate;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCompassWidget.AddAllCompassRepresentations
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AFGActorRepresentationManager** representationManager          (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::AddAllCompassRepresentations(class AFGActorRepresentationManager** representationManager)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.AddAllCompassRepresentations");

	UFGCompassWidget_AddAllCompassRepresentations_Params params;
	params.representationManager = representationManager;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCompassWidget.AddAllCardinalDirections
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UClass**                 compassObjectTemplate          (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             northTex                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             eastTex                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             southTex                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             westTex                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             northWestTex                   (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             southEastTex                   (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             southWestText                  (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             northEastTex                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGCompassWidget::AddAllCardinalDirections(class UClass** compassObjectTemplate, class UTexture2D** northTex, class UTexture2D** eastTex, class UTexture2D** southTex, class UTexture2D** westTex, class UTexture2D** northWestTex, class UTexture2D** southEastTex, class UTexture2D** southWestText, class UTexture2D** northEastTex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCompassWidget.AddAllCardinalDirections");

	UFGCompassWidget_AddAllCardinalDirections_Params params;
	params.compassObjectTemplate = compassObjectTemplate;
	params.northTex = northTex;
	params.eastTex = eastTex;
	params.southTex = southTex;
	params.westTex = westTex;
	params.northWestTex = northWestTex;
	params.southEastTex = southEastTex;
	params.southWestText = southWestText;
	params.northEastTex = northEastTex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.SetMouseSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newSense                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerControllerBase::SetMouseSensitivity(float* newSense)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.SetMouseSensitivity");

	AFGPlayerControllerBase_SetMouseSensitivity_Params params;
	params.newSense = newSense;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.SetIsUsingGamepad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          newIsUsingGamepad              (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerControllerBase::SetIsUsingGamepad(bool* newIsUsingGamepad)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.SetIsUsingGamepad");

	AFGPlayerControllerBase_SetIsUsingGamepad_Params params;
	params.newIsUsingGamepad = newIsUsingGamepad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.ServerAdmin
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString*                 Command                        (Parm, ZeroConstructor)

void AFGPlayerControllerBase::ServerAdmin(class FString* Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.ServerAdmin");

	AFGPlayerControllerBase_ServerAdmin_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.Server_UpdateCappedBandwidth
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int*                           Cap                            (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerControllerBase::Server_UpdateCappedBandwidth(int* Cap)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.Server_UpdateCappedBandwidth");

	AFGPlayerControllerBase_Server_UpdateCappedBandwidth_Params params;
	params.Cap = Cap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.Server_AdminLogin
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString*                 hashedPassword                 (Parm, ZeroConstructor)

void AFGPlayerControllerBase::Server_AdminLogin(class FString* hashedPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.Server_AdminLogin");

	AFGPlayerControllerBase_Server_AdminLogin_Params params;
	params.hashedPassword = hashedPassword;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.ResetInputBindings
// (Final, Native, Public, BlueprintCallable)

void AFGPlayerControllerBase::ResetInputBindings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.ResetInputBindings");

	AFGPlayerControllerBase_ResetInputBindings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.RebindActionKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFGKeyMapping*          newKeyMapping                  (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerControllerBase::RebindActionKey(struct FFGKeyMapping* newKeyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.RebindActionKey");

	AFGPlayerControllerBase_RebindActionKey_Params params;
	params.newKeyMapping = newKeyMapping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetPresenceString
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGPlayerControllerBase::GetPresenceString()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetPresenceString");

	AFGPlayerControllerBase_GetPresenceString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetMouseSensitivityY
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerControllerBase::GetMouseSensitivityY()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetMouseSensitivityY");

	AFGPlayerControllerBase_GetMouseSensitivityY_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetMouseSensitivityX
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerControllerBase::GetMouseSensitivityX()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetMouseSensitivityX");

	AFGPlayerControllerBase_GetMouseSensitivityX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetMouseSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerControllerBase::GetMouseSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetMouseSensitivity");

	AFGPlayerControllerBase_GetMouseSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetKeyNameForAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName*                  inAction                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          getGamepadKey                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGPlayerControllerBase::GetKeyNameForAction(struct FName* inAction, bool* getGamepadKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetKeyNameForAction");

	AFGPlayerControllerBase_GetKeyNameForAction_Params params;
	params.inAction = inAction;
	params.getGamepadKey = getGamepadKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetIsUsingGamepad
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerControllerBase::GetIsUsingGamepad()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetIsUsingGamepad");

	AFGPlayerControllerBase_GetIsUsingGamepad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetDefaultMouseSensitivityY
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerControllerBase::GetDefaultMouseSensitivityY()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetDefaultMouseSensitivityY");

	AFGPlayerControllerBase_GetDefaultMouseSensitivityY_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetDefaultMouseSensitivityX
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerControllerBase::GetDefaultMouseSensitivityX()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetDefaultMouseSensitivityX");

	AFGPlayerControllerBase_GetDefaultMouseSensitivityX_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetDefaultMouseSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerControllerBase::GetDefaultMouseSensitivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetDefaultMouseSensitivity");

	AFGPlayerControllerBase_GetDefaultMouseSensitivity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.GetAdminInterface
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGAdminInterface*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGAdminInterface* AFGPlayerControllerBase::GetAdminInterface()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.GetAdminInterface");

	AFGPlayerControllerBase_GetAdminInterface_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerControllerBase.FlushPressedKeys
// (Final, Native, Public, BlueprintCallable)

void AFGPlayerControllerBase::FlushPressedKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.FlushPressedKeys");

	AFGPlayerControllerBase_FlushPressedKeys_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.DiscardInput
// (Final, Native, Protected)

void AFGPlayerControllerBase::DiscardInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.DiscardInput");

	AFGPlayerControllerBase_DiscardInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.Client_UpdateCappedBandwidth
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int*                           Cap                            (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerControllerBase::Client_UpdateCappedBandwidth(int* Cap)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.Client_UpdateCappedBandwidth");

	AFGPlayerControllerBase_Client_UpdateCappedBandwidth_Params params;
	params.Cap = Cap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.AdminLogin
// (Final, Exec, Native, Public)
// Parameters:
// class FString*                 password                       (Parm, ZeroConstructor)

void AFGPlayerControllerBase::AdminLogin(class FString* password)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.AdminLogin");

	AFGPlayerControllerBase_AdminLogin_Params params;
	params.password = password;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerControllerBase.Admin
// (Final, Exec, Native, Public)
// Parameters:
// class FString*                 Command                        (Parm, ZeroConstructor)

void AFGPlayerControllerBase::Admin(class FString* Command)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerControllerBase.Admin");

	AFGPlayerControllerBase_Admin_Params params;
	params.Command = Command;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.TogglePhotoModeInstructionsWidget
// (Event, Protected, BlueprintEvent)

void AFGPlayerController::TogglePhotoModeInstructionsWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.TogglePhotoModeInstructionsWidget");

	AFGPlayerController_TogglePhotoModeInstructionsWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.TogglePhotoMode
// (Final, Native, Protected, BlueprintCallable)

void AFGPlayerController::TogglePhotoMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.TogglePhotoMode");

	AFGPlayerController_TogglePhotoMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.ToggleHiResPhotoMode
// (Final, Native, Protected, BlueprintCallable)

void AFGPlayerController::ToggleHiResPhotoMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.ToggleHiResPhotoMode");

	AFGPlayerController_ToggleHiResPhotoMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.TakePhoto
// (Event, Protected, BlueprintEvent)

void AFGPlayerController::TakePhoto()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.TakePhoto");

	AFGPlayerController_TakePhoto_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Suicide
// (Final, Exec, Native, Public, BlueprintCallable)

void AFGPlayerController::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Suicide");

	AFGPlayerController_Suicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.StartRespawn
// (Final, Native, Public, BlueprintCallable)

void AFGPlayerController::StartRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.StartRespawn");

	AFGPlayerController_StartRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.SetTutorialMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          active                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::SetTutorialMode(bool* active)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.SetTutorialMode");

	AFGPlayerController_SetTutorialMode_Params params;
	params.active = active;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.SetRecipeShortcutOnIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           onIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::SetRecipeShortcutOnIndex(class UClass** Recipe, int* onIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.SetRecipeShortcutOnIndex");

	AFGPlayerController_SetRecipeShortcutOnIndex_Params params;
	params.Recipe = Recipe;
	params.onIndex = onIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.SetDismantleShortcutOnIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           onIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::SetDismantleShortcutOnIndex(int* onIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.SetDismantleShortcutOnIndex");

	AFGPlayerController_SetDismantleShortcutOnIndex_Params params;
	params.onIndex = onIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.SetDisabledInputGate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FDisabledInputGate*     newDisabledInputGate           (Parm)

void AFGPlayerController::SetDisabledInputGate(struct FDisabledInputGate* newDisabledInputGate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.SetDisabledInputGate");

	AFGPlayerController_SetDisabledInputGate_Params params;
	params.newDisabledInputGate = newDisabledInputGate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_Suicide
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGPlayerController::Server_Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_Suicide");

	AFGPlayerController_Server_Suicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_StartRespawn
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGPlayerController::Server_StartRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_StartRespawn");

	AFGPlayerController_Server_StartRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_SpawnAttentionPingActor
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector*                pingLocation                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                pingNormal                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Server_SpawnAttentionPingActor(struct FVector* pingLocation, struct FVector* pingNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_SpawnAttentionPingActor");

	AFGPlayerController_Server_SpawnAttentionPingActor_Params params;
	params.pingLocation = pingLocation;
	params.pingNormal = pingNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_SetRecipeShortcutOnIndex
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           onIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Server_SetRecipeShortcutOnIndex(class UClass** Recipe, int* onIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_SetRecipeShortcutOnIndex");

	AFGPlayerController_Server_SetRecipeShortcutOnIndex_Params params;
	params.Recipe = Recipe;
	params.onIndex = onIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_SetDismantleShortcutOnIndex
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int*                           onIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Server_SetDismantleShortcutOnIndex(int* onIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_SetDismantleShortcutOnIndex");

	AFGPlayerController_Server_SetDismantleShortcutOnIndex_Params params;
	params.onIndex = onIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_SendChatMessage
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FChatMessageStruct*     newMessage                     (ConstParm, Parm, ReferenceParm)

void AFGPlayerController::Server_SendChatMessage(struct FChatMessageStruct* newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_SendChatMessage");

	AFGPlayerController_Server_SendChatMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_Respawn
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AFGPlayerController::Server_Respawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_Respawn");

	AFGPlayerController_Server_Respawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_RequestFogOfWarData
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFGPlayerController::Server_RequestFogOfWarData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_RequestFogOfWarData");

	AFGPlayerController_Server_RequestFogOfWarData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_FinishRespawn
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFGPlayerController::Server_FinishRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_FinishRespawn");

	AFGPlayerController_Server_FinishRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_DealRadialDamage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FHitResult*             impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 inInstigator                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Server_DealRadialDamage(struct FHitResult* impact, float* Damage, float* Radius, class UClass** DamageType, class AActor** inInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_DealRadialDamage");

	AFGPlayerController_Server_DealRadialDamage_Params params;
	params.impact = impact;
	params.Damage = Damage;
	params.Radius = Radius;
	params.DamageType = DamageType;
	params.inInstigator = inInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Server_DealImpactDamage
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FHitResult*             impact                         (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector*                forwardVector                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 inInstigator                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Server_DealImpactDamage(struct FHitResult* impact, struct FVector* forwardVector, float* Damage, class UClass** DamageType, class AActor** inInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Server_DealImpactDamage");

	AFGPlayerController_Server_DealImpactDamage_Params params;
	params.impact = impact;
	params.forwardVector = forwardVector;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.inInstigator = inInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.RegisterRemoteCallObjectClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UFGRemoteCallObject*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGRemoteCallObject* AFGPlayerController::RegisterRemoteCallObjectClass(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.RegisterRemoteCallObjectClass");

	AFGPlayerController_RegisterRemoteCallObjectClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.OnStartRespawn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          isJoining                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::OnStartRespawn(bool* isJoining)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnStartRespawn");

	AFGPlayerController_OnStartRespawn_Params params;
	params.isJoining = isJoining;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnSetupMovementWind
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAkComponent*            ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAkComponent* AFGPlayerController::OnSetupMovementWind()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnSetupMovementWind");

	AFGPlayerController_OnSetupMovementWind_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.OnRep_IsRespawning
// (Final, Native, Private)

void AFGPlayerController::OnRep_IsRespawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnRep_IsRespawning");

	AFGPlayerController_OnRep_IsRespawning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnPrimaryFire
// (Native, Protected)

void AFGPlayerController::OnPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnPrimaryFire");

	AFGPlayerController_OnPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnFinishRespawn
// (Event, Protected, BlueprintEvent)

void AFGPlayerController::OnFinishRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnFinishRespawn");

	AFGPlayerController_OnFinishRespawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnDismantlePortableMiner
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGPortableMiner**       PortableMiner                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::OnDismantlePortableMiner(class AFGPortableMiner** PortableMiner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnDismantlePortableMiner");

	AFGPlayerController_OnDismantlePortableMiner_Params params;
	params.PortableMiner = PortableMiner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnDismantleGolfCart
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGWheeledVehicle**      inGolfCart                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::OnDismantleGolfCart(class AFGWheeledVehicle** inGolfCart)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnDismantleGolfCart");

	AFGPlayerController_OnDismantleGolfCart_Params params;
	params.inGolfCart = inGolfCart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.OnDisabledInputGateChanged
// (Native, Event, Protected, BlueprintEvent)

void AFGPlayerController::OnDisabledInputGateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.OnDisabledInputGateChanged");

	AFGPlayerController_OnDisabledInputGateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.NeedRespawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::NeedRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.NeedRespawn");

	AFGPlayerController_NeedRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.IsRespawning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::IsRespawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.IsRespawning");

	AFGPlayerController_IsRespawning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.IsInTutorialMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::IsInTutorialMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.IsInTutorialMode");

	AFGPlayerController_IsInTutorialMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.IncrementPhotoModeFOV
// (Final, Native, Protected, BlueprintCallable)

void AFGPlayerController::IncrementPhotoModeFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.IncrementPhotoModeFOV");

	AFGPlayerController_IncrementPhotoModeFOV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.GetValidShortcuts
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UFGHotbarShortcut*> out_shortcuts                  (Parm, OutParm, ZeroConstructor)

void AFGPlayerController::GetValidShortcuts(TArray<class UFGHotbarShortcut*>* out_shortcuts)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetValidShortcuts");

	AFGPlayerController_GetValidShortcuts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_shortcuts != nullptr)
		*out_shortcuts = params.out_shortcuts;
}


// Function FactoryGame.FGPlayerController.GetShortcutIndexFromKey
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FKeyEvent*              Key                            (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerController::GetShortcutIndexFromKey(struct FKeyEvent* Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetShortcutIndexFromKey");

	AFGPlayerController_GetShortcutIndexFromKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetScreenshotPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool*                          isHighRes                      (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGPlayerController::GetScreenshotPath(bool* isHighRes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetScreenshotPath");

	AFGPlayerController_GetScreenshotPath_Params params;
	params.isHighRes = isHighRes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetScreenBasedObjectRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         screenRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerController::GetScreenBasedObjectRadius(class AActor** Actor, float* screenRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetScreenBasedObjectRadius");

	AFGPlayerController_GetScreenBasedObjectRadius_Params params;
	params.Actor = Actor;
	params.screenRadius = screenRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetRemoteCallObjectOfClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UFGRemoteCallObject*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGRemoteCallObject* AFGPlayerController::GetRemoteCallObjectOfClass(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetRemoteCallObjectOfClass");

	AFGPlayerController_GetRemoteCallObjectOfClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetRecipeShortcutIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerController::GetRecipeShortcutIndex(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetRecipeShortcutIndex");

	AFGPlayerController_GetRecipeShortcutIndex_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetPlayerHasMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 newMessage                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::GetPlayerHasMessage(class UClass** newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetPlayerHasMessage");

	AFGPlayerController_GetPlayerHasMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetPhotoModeFOV
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerController::GetPhotoModeFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetPhotoModeFOV");

	AFGPlayerController_GetPhotoModeFOV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetObjectScreenRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         boundingRadius                 (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPlayerController::GetObjectScreenRadius(class AActor** Actor, float* boundingRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetObjectScreenRadius");

	AFGPlayerController_GetObjectScreenRadius_Params params;
	params.Actor = Actor;
	params.boundingRadius = boundingRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetIsPhotoMode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::GetIsPhotoMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetIsPhotoMode");

	AFGPlayerController_GetIsPhotoMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetHiResPhotoModeEnabled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerController::GetHiResPhotoModeEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetHiResPhotoModeEnabled");

	AFGPlayerController_GetHiResPhotoModeEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetDismantleShortcutIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerController::GetDismantleShortcutIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetDismantleShortcutIndex");

	AFGPlayerController_GetDismantleShortcutIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetDisabledInputGate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDisabledInputGate      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDisabledInputGate AFGPlayerController::GetDisabledInputGate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetDisabledInputGate");

	AFGPlayerController_GetDisabledInputGate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetCurrentMapArea
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGPlayerController::GetCurrentMapArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetCurrentMapArea");

	AFGPlayerController_GetCurrentMapArea_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerController.GetAllShortcuts
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UFGHotbarShortcut*> out_shortcuts                  (Parm, OutParm, ZeroConstructor)

void AFGPlayerController::GetAllShortcuts(TArray<class UFGHotbarShortcut*>* out_shortcuts)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.GetAllShortcuts");

	AFGPlayerController_GetAllShortcuts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_shortcuts != nullptr)
		*out_shortcuts = params.out_shortcuts;
}


// Function FactoryGame.FGPlayerController.ExecuteShortcut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           shortcutIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::ExecuteShortcut(int* shortcutIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.ExecuteShortcut");

	AFGPlayerController_ExecuteShortcut_Params params;
	params.shortcutIndex = shortcutIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.EnterChatMessage
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString*                 inMessage                      (Parm, ZeroConstructor)

void AFGPlayerController::EnterChatMessage(class FString* inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.EnterChatMessage");

	AFGPlayerController_EnterChatMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.EnablePhotoMode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          IsEnabled                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::EnablePhotoMode(bool* IsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.EnablePhotoMode");

	AFGPlayerController_EnablePhotoMode_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.DecrementPhotoModeFOV
// (Final, Native, Protected, BlueprintCallable)

void AFGPlayerController::DecrementPhotoModeFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.DecrementPhotoModeFOV");

	AFGPlayerController_DecrementPhotoModeFOV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.CreateSequenceList
// (Event, Public, BlueprintEvent)

void AFGPlayerController::CreateSequenceList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.CreateSequenceList");

	AFGPlayerController_CreateSequenceList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Client_WaitForLevelStreaming
// (Final, Net, NetReliable, Native, Event, Private, NetClient)

void AFGPlayerController::Client_WaitForLevelStreaming()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Client_WaitForLevelStreaming");

	AFGPlayerController_Client_WaitForLevelStreaming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Client_TransferFogOfWarData
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<unsigned char>*         fogOfWarRawData                (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Client_TransferFogOfWarData(TArray<unsigned char>* fogOfWarRawData, int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Client_TransferFogOfWarData");

	AFGPlayerController_Client_TransferFogOfWarData_Params params;
	params.fogOfWarRawData = fogOfWarRawData;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.Client_AddMessage
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class UClass**                 newMessage                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerController::Client_AddMessage(class UClass** newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.Client_AddMessage");

	AFGPlayerController_Client_AddMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerController.CheckPawnMapArea
// (Final, Native, Protected)

void AFGPlayerController::CheckPawnMapArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerController.CheckPawnMapArea");

	AFGPlayerController_CheckPawnMapArea_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsoleCommandManager.TrackAllAkStats
// (Final, Exec, Native, Public)

void UFGConsoleCommandManager::TrackAllAkStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsoleCommandManager.TrackAllAkStats");

	UFGConsoleCommandManager_TrackAllAkStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsoleCommandManager.TrackAkMemoryPools
// (Final, Exec, Native, Public)

void UFGConsoleCommandManager::TrackAkMemoryPools()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsoleCommandManager.TrackAkMemoryPools");

	UFGConsoleCommandManager_TrackAkMemoryPools_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsoleCommandManager.TrackAkComponentsWithNoPositionOrOwner
// (Final, Exec, Native, Public)

void UFGConsoleCommandManager::TrackAkComponentsWithNoPositionOrOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsoleCommandManager.TrackAkComponentsWithNoPositionOrOwner");

	UFGConsoleCommandManager_TrackAkComponentsWithNoPositionOrOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsoleCommandManager.TrackAkComponents
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          byClass                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGConsoleCommandManager::TrackAkComponents(bool* byClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsoleCommandManager.TrackAkComponents");

	UFGConsoleCommandManager_TrackAkComponents_Params params;
	params.byClass = byClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsoleCommandManager.SetSessionName
// (Final, Exec, Native, Public)
// Parameters:
// class FString*                 newSessionName                 (Parm, ZeroConstructor)

void UFGConsoleCommandManager::SetSessionName(class FString* newSessionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsoleCommandManager.SetSessionName");

	UFGConsoleCommandManager_SetSessionName_Params params;
	params.newSessionName = newSessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsoleCommandManager.SaveWithNewSessionName
// (Final, Exec, Native, Public)
// Parameters:
// class FString*                 saveName                       (Parm, ZeroConstructor)
// class FString*                 SessionName                    (Parm, ZeroConstructor)

void UFGConsoleCommandManager::SaveWithNewSessionName(class FString* saveName, class FString* SessionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsoleCommandManager.SaveWithNewSessionName");

	UFGConsoleCommandManager_SaveWithNewSessionName_Params params;
	params.saveName = saveName;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsoleCommandManager.MaterialLookup
// (Final, Exec, Native, Public)
// Parameters:
// class FString*                 ItemName                       (Parm, ZeroConstructor)

void UFGConsoleCommandManager::MaterialLookup(class FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsoleCommandManager.MaterialLookup");

	UFGConsoleCommandManager_MaterialLookup_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsoleCommandManager.MaterialFlowAnalysis
// (Final, Exec, Native, Public)
// Parameters:
// class FString*                 recipeName                     (Parm, ZeroConstructor)

void UFGConsoleCommandManager::MaterialFlowAnalysis(class FString* recipeName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsoleCommandManager.MaterialFlowAnalysis");

	UFGConsoleCommandManager_MaterialFlowAnalysis_Params params;
	params.recipeName = recipeName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsoleCommandManager.FixupBuiltByRecipeInOldSave
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          reapplyRecipeIfBetterMatchFound (Parm, ZeroConstructor, IsPlainOldData)

void UFGConsoleCommandManager::FixupBuiltByRecipeInOldSave(bool* reapplyRecipeIfBetterMatchFound)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsoleCommandManager.FixupBuiltByRecipeInOldSave");

	UFGConsoleCommandManager_FixupBuiltByRecipeInOldSave_Params params;
	params.reapplyRecipeIfBetterMatchFound = reapplyRecipeIfBetterMatchFound;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsoleCommandManager.DumpFactoryStatsToLog
// (Final, Exec, Native, Public)

void UFGConsoleCommandManager::DumpFactoryStatsToLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsoleCommandManager.DumpFactoryStatsToLog");

	UFGConsoleCommandManager_DumpFactoryStatsToLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConstructDisqualifier.GetDisqualifyingText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGConstructDisqualifier::STATIC_GetDisqualifyingText(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConstructDisqualifier.GetDisqualifyingText");

	UFGConstructDisqualifier_GetDisqualifyingText_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGConstructionMessageInterface.OnConstructMessagedDeserialized
// (Native, Event, Public, BlueprintEvent)

void UFGConstructionMessageInterface::OnConstructMessagedDeserialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConstructionMessageInterface.OnConstructMessagedDeserialized");

	UFGConstructionMessageInterface_OnConstructMessagedDeserialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentDescriptor.GetEquipmentClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGEquipmentDescriptor::STATIC_GetEquipmentClass(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentDescriptor.GetEquipmentClass");

	UFGEquipmentDescriptor_GetEquipmentClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGConsumableDescriptor.GetTPOverrideMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGConsumableDescriptor::STATIC_GetTPOverrideMesh(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableDescriptor.GetTPOverrideMesh");

	UFGConsumableDescriptor_GetTPOverrideMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGConsumableDescriptor.GetFPOverrideMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMesh*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class USkeletalMesh* UFGConsumableDescriptor::STATIC_GetFPOverrideMesh(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableDescriptor.GetFPOverrideMesh");

	UFGConsumableDescriptor_GetFPOverrideMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGConsumableDescriptor.ConsumedBy
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGConsumableDescriptor::ConsumedBy(class AFGCharacterPlayer** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableDescriptor.ConsumedBy");

	UFGConsumableDescriptor_ConsumedBy_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsumableEquipment.Server_PrimaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFGConsumableEquipment::Server_PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableEquipment.Server_PrimaryFire");

	AFGConsumableEquipment_Server_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsumableEquipment.PlayConsumeEffects
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFGConsumableDescriptor** consumable                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGConsumableEquipment::PlayConsumeEffects(class UFGConsumableDescriptor** consumable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableEquipment.PlayConsumeEffects");

	AFGConsumableEquipment_PlayConsumeEffects_Params params;
	params.consumable = consumable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConsumableEquipment.GetConsumeable
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  out_consumeable                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            out_numConsumeable             (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AFGConsumableEquipment::GetConsumeable(class UClass** out_consumeable, int* out_numConsumeable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConsumableEquipment.GetConsumeable");

	AFGConsumableEquipment_GetConsumeable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_consumeable != nullptr)
		*out_consumeable = params.out_consumeable;
	if (out_numConsumeable != nullptr)
		*out_numConsumeable = params.out_numConsumeable;
}


// Function FactoryGame.FGSplineHologram.OnRep_SplineData
// (Final, Native, Protected)

void AFGSplineHologram::OnRep_SplineData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSplineHologram.OnRep_SplineData");

	AFGSplineHologram_OnRep_SplineData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConveyorBeltHologram.OnRep_ConnectionArrowComponentDirection
// (Final, Native, Private)

void AFGConveyorBeltHologram::OnRep_ConnectionArrowComponentDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConveyorBeltHologram.OnRep_ConnectionArrowComponentDirection");

	AFGConveyorBeltHologram_OnRep_ConnectionArrowComponentDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConveyorLiftHologram.OnRep_TopTransform
// (Final, Native, Private)

void AFGConveyorLiftHologram::OnRep_TopTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConveyorLiftHologram.OnRep_TopTransform");

	AFGConveyorLiftHologram_OnRep_TopTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGConveyorLiftHologram.OnRep_ArrowDirection
// (Final, Native, Private)

void AFGConveyorLiftHologram::OnRep_ArrowDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGConveyorLiftHologram.OnRep_ArrowDirection");

	AFGConveyorLiftHologram_OnRep_ArrowDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPoleHologram.OnRep_PoleMesh
// (Final, Native, Private)

void AFGPoleHologram::OnRep_PoleMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPoleHologram.OnRep_PoleMesh");

	AFGPoleHologram_OnRep_PoleMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.StartRotationMovement
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator*               TargetRotation                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::StartRotationMovement(struct FRotator* TargetRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.StartRotationMovement");

	AFGCreature_StartRotationMovement_Params params;
	params.TargetRotation = TargetRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.SpawnDeathItem
// (Native, Event, Public, BlueprintEvent)

void AFGCreature::SpawnDeathItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.SpawnDeathItem");

	AFGCreature_SpawnDeathItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.SetPersistent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          persist                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::SetPersistent(bool* persist)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.SetPersistent");

	AFGCreature_SetPersistent_Params params;
	params.persist = persist;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.SetMoveSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EMoveSpeed*                    newMoveSpeedType               (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::SetMoveSpeed(EMoveSpeed* newMoveSpeedType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.SetMoveSpeed");

	AFGCreature_SetMoveSpeed_Params params;
	params.newMoveSpeedType = newMoveSpeedType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.PlayConsumeItemEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// class UClass**                 itemDescriptor                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::PlayConsumeItemEffect(class UClass** itemDescriptor, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.PlayConsumeItemEffect");

	AFGCreature_PlayConsumeItemEffect_Params params;
	params.itemDescriptor = itemDescriptor;
	params.amount = amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.OnRep_TargetRotation
// (Final, Native, Private)

void AFGCreature::OnRep_TargetRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.OnRep_TargetRotation");

	AFGCreature_OnRep_TargetRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.OnRep_IsEnabled
// (Final, Native, Protected)

void AFGCreature::OnRep_IsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.OnRep_IsEnabled");

	AFGCreature_OnRep_IsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.OnArachnophobiaModeChanged
// (Final, Native, Public)
// Parameters:
// bool*                          isArachnophobiaMode            (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::OnArachnophobiaModeChanged(bool* isArachnophobiaMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.OnArachnophobiaModeChanged");

	AFGCreature_OnArachnophobiaModeChanged_Params params;
	params.isArachnophobiaMode = isArachnophobiaMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.Multicast_ConsumeItem
// (Net, Native, Event, NetMulticast, Public, BlueprintCallable)
// Parameters:
// class UClass**                 itemDescriptor                 (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::Multicast_ConsumeItem(class UClass** itemDescriptor, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.Multicast_ConsumeItem");

	AFGCreature_Multicast_ConsumeItem_Params params;
	params.itemDescriptor = itemDescriptor;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.IsPersistent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCreature::IsPersistent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.IsPersistent");

	AFGCreature_IsPersistent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetTargetRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator AFGCreature::GetTargetRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetTargetRotation");

	AFGCreature_GetTargetRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetSplinePath
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGSplinePath*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGSplinePath* AFGCreature::GetSplinePath()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetSplinePath");

	AFGCreature_GetSplinePath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetSpawner
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGCreatureSpawner*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCreatureSpawner* AFGCreature::GetSpawner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetSpawner");

	AFGCreature_GetSpawner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetIsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCreature::GetIsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetIsEnabled");

	AFGCreature_GetIsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetIsArachnid
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCreature::GetIsArachnid()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetIsArachnid");

	AFGCreature_GetIsArachnid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetDayTimePctAsNight
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGCreature::GetDayTimePctAsNight()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetDayTimePctAsNight");

	AFGCreature_GetDayTimePctAsNight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.GetArachnophobiaModeMaterials
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UMaterialInstance*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UMaterialInstance*> AFGCreature::GetArachnophobiaModeMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.GetArachnophobiaModeMaterials");

	AFGCreature_GetArachnophobiaModeMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreature.ConfigureArachnophobiaMode
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool*                          isArachnophobiaMode            (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::ConfigureArachnophobiaMode(bool* isArachnophobiaMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.ConfigureArachnophobiaMode");

	AFGCreature_ConfigureArachnophobiaMode_Params params;
	params.isArachnophobiaMode = isArachnophobiaMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.CheckRotationMovement
// (Final, Native, Public)

void AFGCreature::CheckRotationMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.CheckRotationMovement");

	AFGCreature_CheckRotationMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.CancelRotationMovement
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AFGCreature::CancelRotationMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.CancelRotationMovement");

	AFGCreature_CancelRotationMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreature.AiCalculateLeadTrajectory
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector*                targetPos                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                targetVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                fromPos                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         interceptorSpeed               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           isPosibleToLead                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 interceptPoint                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float*                         leadScaling                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreature::STATIC_AiCalculateLeadTrajectory(struct FVector* targetPos, struct FVector* targetVelocity, struct FVector* fromPos, float* interceptorSpeed, float* leadScaling, bool* isPosibleToLead, struct FVector* interceptPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreature.AiCalculateLeadTrajectory");

	AFGCreature_AiCalculateLeadTrajectory_Params params;
	params.targetPos = targetPos;
	params.targetVelocity = targetVelocity;
	params.fromPos = fromPos;
	params.interceptorSpeed = interceptorSpeed;
	params.leadScaling = leadScaling;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (isPosibleToLead != nullptr)
		*isPosibleToLead = params.isPosibleToLead;
	if (interceptPoint != nullptr)
		*interceptPoint = params.interceptPoint;
}


// Function FactoryGame.FGEnemy.PerformCustomRadialAttack
// (Native, Event, Public, BlueprintEvent)

void AFGEnemy::PerformCustomRadialAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.PerformCustomRadialAttack");

	AFGEnemy_PerformCustomRadialAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemy.OnRep_CurrentAggroTarget
// (Final, Native, Protected)

void AFGEnemy::OnRep_CurrentAggroTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.OnRep_CurrentAggroTarget");

	AFGEnemy_OnRep_CurrentAggroTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemy.OnCurrentAggroTargetReplicated
// (Native, Event, Public, BlueprintEvent)

void AFGEnemy::OnCurrentAggroTargetReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.OnCurrentAggroTargetReplicated");

	AFGEnemy_OnCurrentAggroTargetReplicated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemy.GetCurrentAttackTask
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGGameplayTask_Attack*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGGameplayTask_Attack* AFGEnemy::GetCurrentAttackTask()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.GetCurrentAttackTask");

	AFGEnemy_GetCurrentAttackTask_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemy.GetCurrentAggroTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFGEnemy::GetCurrentAggroTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.GetCurrentAggroTarget");

	AFGEnemy_GetCurrentAggroTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemy.GetAttackLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AFGEnemy::GetAttackLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemy.GetAttackLocation");

	AFGEnemy_GetAttackLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCrabHatcher.StartExpanding
// (Event, Public, BlueprintEvent)

void AFGCrabHatcher::StartExpanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.StartExpanding");

	AFGCrabHatcher_StartExpanding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.SpawnCrabs
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGCrabHatcher::SpawnCrabs()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.SpawnCrabs");

	AFGCrabHatcher_SpawnCrabs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.SetThreatNearby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          inNearby                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGCrabHatcher::SetThreatNearby(bool* inNearby)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.SetThreatNearby");

	AFGCrabHatcher_SetThreatNearby_Params params;
	params.inNearby = inNearby;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.SetDidSpawnCrabs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          inDidSPawn                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGCrabHatcher::SetDidSpawnCrabs(bool* inDidSPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.SetDidSpawnCrabs");

	AFGCrabHatcher_SetDidSpawnCrabs_Params params;
	params.inDidSPawn = inDidSPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.SetAnimationLength
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         animLength                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGCrabHatcher::SetAnimationLength(float* animLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.SetAnimationLength");

	AFGCrabHatcher_SetAnimationLength_Params params;
	params.animLength = animLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.OnRep_DidSpawnCrabs
// (Final, Native, Protected)

void AFGCrabHatcher::OnRep_DidSpawnCrabs()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.OnRep_DidSpawnCrabs");

	AFGCrabHatcher_OnRep_DidSpawnCrabs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrabHatcher.GetThreatNearby
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCrabHatcher::GetThreatNearby()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.GetThreatNearby");

	AFGCrabHatcher_GetThreatNearby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCrabHatcher.GetDidSpawnCrabs
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCrabHatcher::GetDidSpawnCrabs()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrabHatcher.GetDidSpawnCrabs");

	AFGCrabHatcher_GetDidSpawnCrabs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractActor.OnInteract
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGInteractActor::OnInteract(class AFGCharacterPlayer** byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractActor.OnInteract");

	AFGInteractActor_OnInteract_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrate.OnRequestReprecentMarker
// (Event, Public, BlueprintEvent)

void AFGCrate::OnRequestReprecentMarker()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrate.OnRequestReprecentMarker");

	AFGCrate_OnRequestReprecentMarker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCrate.GetInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGCrate::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrate.GetInventory");

	AFGCrate_GetInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCrate.FilterInventoryClasses
// (Final, Native, Public, Const)
// Parameters:
// class UClass**                 Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCrate::FilterInventoryClasses(class UClass** Object, int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCrate.FilterInventoryClasses");

	AFGCrate_FilterInventoryClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureController.StopPanic
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AFGCreatureController::StopPanic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureController.StopPanic");

	AFGCreatureController_StopPanic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureController.StartPanic
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AFGCreatureController::StartPanic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureController.StartPanic");

	AFGCreatureController_StartPanic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureController.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreatureController::SetEnabled(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureController.SetEnabled");

	AFGCreatureController_SetEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureController.OnTargetPerceptionUpdated
// (Native, Public)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FAIStimulus*            Stimulus                       (Parm)

void AFGCreatureController::OnTargetPerceptionUpdated(class AActor** InActor, struct FAIStimulus* Stimulus)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureController.OnTargetPerceptionUpdated");

	AFGCreatureController_OnTargetPerceptionUpdated_Params params;
	params.InActor = InActor;
	params.Stimulus = Stimulus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDriveablePawn.ShouldAttachDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::ShouldAttachDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.ShouldAttachDriver");

	AFGDriveablePawn_ShouldAttachDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.ReceiveOnDriverLeave
// (Event, Protected, BlueprintEvent)

void AFGDriveablePawn::ReceiveOnDriverLeave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.ReceiveOnDriverLeave");

	AFGDriveablePawn_ReceiveOnDriverLeave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDriveablePawn.ReceiveOnDriverEnter
// (Event, Protected, BlueprintEvent)

void AFGDriveablePawn::ReceiveOnDriverEnter()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.ReceiveOnDriverEnter");

	AFGDriveablePawn_ReceiveOnDriverEnter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDriveablePawn.PlaceExitingDriver
// (Final, Native, Protected, BlueprintCallable)

void AFGDriveablePawn::PlaceExitingDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.PlaceExitingDriver");

	AFGDriveablePawn_PlaceExitingDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDriveablePawn.OnRep_IsDriving
// (Final, Native, Private)

void AFGDriveablePawn::OnRep_IsDriving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.OnRep_IsDriving");

	AFGDriveablePawn_OnRep_IsDriving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDriveablePawn.IsDriving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::IsDriving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.IsDriving");

	AFGDriveablePawn_IsDriving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.IsDriverVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::IsDriverVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.IsDriverVisible");

	AFGDriveablePawn_IsDriverVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.HasPendingDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::HasPendingDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.HasPendingDriver");

	AFGDriveablePawn_HasPendingDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.GetDriverSeatSocket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AFGDriveablePawn::GetDriverSeatSocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.GetDriverSeatSocket");

	AFGDriveablePawn_GetDriverSeatSocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.GetDriverSeatAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimSequence*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimSequence* AFGDriveablePawn::GetDriverSeatAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.GetDriverSeatAnimation");

	AFGDriveablePawn_GetDriverSeatAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.GetDriverExitOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AFGDriveablePawn::GetDriverExitOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.GetDriverExitOffset");

	AFGDriveablePawn_GetDriverExitOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.GetDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* AFGDriveablePawn::GetDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.GetDriver");

	AFGDriveablePawn_GetDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.DriverLeave
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          keepDriving                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::DriverLeave(bool* keepDriving)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.DriverLeave");

	AFGDriveablePawn_DriverLeave_Params params;
	params.keepDriving = keepDriving;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.DriverEnter
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     Driver                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::DriverEnter(class AFGCharacterPlayer** Driver)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.DriverEnter");

	AFGDriveablePawn_DriverEnter_Params params;
	params.Driver = Driver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDriveablePawn.CanDriverEnter
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGCharacterPlayer**     Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDriveablePawn::CanDriverEnter(class AFGCharacterPlayer** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDriveablePawn.CanDriverEnter");

	AFGDriveablePawn_CanDriverEnter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureSeat.GetMountedCreature
// (Final, Native, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGCreature*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCreature* AFGCreatureSeat::GetMountedCreature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSeat.GetMountedCreature");

	AFGCreatureSeat_GetMountedCreature_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureSpawner.SpawnCreatures
// (Native, Event, Public, BlueprintEvent)

void AFGCreatureSpawner::SpawnCreatures()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.SpawnCreatures");

	AFGCreatureSpawner_SpawnCreatures_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureSpawner.IsSpawnerActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCreatureSpawner::IsSpawnerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.IsSpawnerActive");

	AFGCreatureSpawner_IsSpawnerActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureSpawner.GetSplines
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AFGSplinePath*>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AFGSplinePath*> AFGCreatureSpawner::GetSplines()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.GetSplines");

	AFGCreatureSpawner_GetSplines_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureSpawner.DestroyCreatures
// (Native, Event, Public, BlueprintEvent)

void AFGCreatureSpawner::DestroyCreatures()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.DestroyCreatures");

	AFGCreatureSpawner_DestroyCreatures_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureSpawner.CreatureDied
// (Native, Public)
// Parameters:
// class AActor**                 thisActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreatureSpawner::CreatureDied(class AActor** thisActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.CreatureDied");

	AFGCreatureSpawner_CreatureDied_Params params;
	params.thisActor = thisActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGCreatureSpawner.CalculateSpawningLocations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGCreatureSpawner::CalculateSpawningLocations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.CalculateSpawningLocations");

	AFGCreatureSpawner_CalculateSpawningLocations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGCreatureSpawner.AddCreature
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGCreature**            newCreature                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGCreatureSpawner::AddCreature(class AFGCreature** newCreature)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGCreatureSpawner.AddCreature");

	AFGCreatureSpawner_AddCreature_Params params;
	params.newCreature = newCreature;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDamageOverTime.ShouldBeAppliedToActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 dotClass                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGDamageOverTime::STATIC_ShouldBeAppliedToActor(class UClass** dotClass, class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDamageOverTime.ShouldBeAppliedToActor");

	UFGDamageOverTime_ShouldBeAppliedToActor_Params params;
	params.dotClass = dotClass;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDamageOverTime.GetDamageInterval
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 dotClass                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGDamageOverTime::STATIC_GetDamageInterval(class UClass** dotClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDamageOverTime.GetDamageInterval");

	UFGDamageOverTime_GetDamageInterval_Params params;
	params.dotClass = dotClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDamageOverTime.GetDamageClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 dotClass                       (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGDamageOverTime::STATIC_GetDamageClass(class UClass** dotClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDamageOverTime.GetDamageClass");

	UFGDamageOverTime_GetDamageClass_Params params;
	params.dotClass = dotClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDamageOverTime.GetDamageAmount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 dotClass                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGDamageOverTime::STATIC_GetDamageAmount(class UClass** dotClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDamageOverTime.GetDamageAmount");

	UFGDamageOverTime_GetDamageAmount_Params params;
	params.dotClass = dotClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDecorationDescriptor.GetMesh3P
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGDecorationDescriptor::STATIC_GetMesh3P(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDecorationDescriptor.GetMesh3P");

	UFGDecorationDescriptor_GetMesh3P_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDecorationDescriptor.GetMesh1P
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGDecorationDescriptor::STATIC_GetMesh1P(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDecorationDescriptor.GetMesh1P");

	UFGDecorationDescriptor_GetMesh1P_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDecorationDescriptor.GetGroundMeshScale
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGDecorationDescriptor::STATIC_GetGroundMeshScale(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDecorationDescriptor.GetGroundMeshScale");

	UFGDecorationDescriptor_GetGroundMeshScale_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDecorationDescriptor.GetGroundMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGDecorationDescriptor::STATIC_GetGroundMesh(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDecorationDescriptor.GetGroundMesh");

	UFGDecorationDescriptor_GetGroundMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDecorationDescriptor.GetDecorationActorClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGDecorationDescriptor::STATIC_GetDecorationActorClass(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDecorationDescriptor.GetDecorationActorClass");

	UFGDecorationDescriptor_GetDecorationActorClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDecorDescriptor.GetDecorMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGDecorDescriptor::STATIC_GetDecorMesh(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDecorDescriptor.GetDecorMesh");

	UFGDecorDescriptor_GetDecorMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDestructibleActor.PlayDestructEffects
// (Event, Public, BlueprintEvent)

void AFGDestructibleActor::PlayDestructEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDestructibleActor.PlayDestructEffects");

	AFGDestructibleActor_PlayDestructEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDestructibleActor.OnDestructibleFractured
// (Final, Native, Private, HasOutParms, HasDefaults)
// Parameters:
// struct FVector*                HitPoint                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                HitDirection                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFGDestructibleActor::OnDestructibleFractured(struct FVector* HitPoint, struct FVector* HitDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDestructibleActor.OnDestructibleFractured");

	AFGDestructibleActor_OnDestructibleFractured_Params params;
	params.HitPoint = HitPoint;
	params.HitDirection = HitDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDestructibleActor.Multicast_OnDestructibleFractured
// (Final, Net, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FVector*                HitPoint                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                HitDirection                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFGDestructibleActor::Multicast_OnDestructibleFractured(struct FVector* HitPoint, struct FVector* HitDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDestructibleActor.Multicast_OnDestructibleFractured");

	AFGDestructibleActor_Multicast_OnDestructibleFractured_Params params;
	params.HitPoint = HitPoint;
	params.HitDirection = HitDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.SetTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                TargetLocation                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGProjectile::SetTargetLocation(struct FVector* TargetLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.SetTargetLocation");

	AFGProjectile_SetTargetLocation_Params params;
	params.TargetLocation = TargetLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.SetInitialVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                inVelocity                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGProjectile::SetInitialVelocity(struct FVector* inVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.SetInitialVelocity");

	AFGProjectile_SetInitialVelocity_Params params;
	params.inVelocity = inVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.PlayExplosionEffects
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFGProjectile::PlayExplosionEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.PlayExplosionEffects");

	AFGProjectile_PlayExplosionEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.PlayAttachEffect
// (Event, Public, BlueprintEvent)

void AFGProjectile::PlayAttachEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.PlayAttachEffect");

	AFGProjectile_PlayAttachEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.OnRep_InitialVelocity
// (Final, Native, Protected)

void AFGProjectile::OnRep_InitialVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.OnRep_InitialVelocity");

	AFGProjectile_OnRep_InitialVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.OnRep_Exploded
// (Final, Native, Protected)

void AFGProjectile::OnRep_Exploded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.OnRep_Exploded");

	AFGProjectile_OnRep_Exploded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.OnImpact
// (Native, Public, HasOutParms)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGProjectile::OnImpact(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.OnImpact");

	AFGProjectile_OnImpact_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.OnBounce
// (Native, Public, HasOutParms, HasDefaults)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector*                hitVelocity                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFGProjectile::OnBounce(struct FHitResult* HitResult, struct FVector* hitVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.OnBounce");

	AFGProjectile_OnBounce_Params params;
	params.HitResult = HitResult;
	params.hitVelocity = hitVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProjectile.GetProjectileTargetLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AFGProjectile::GetProjectileTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.GetProjectileTargetLocation");

	AFGProjectile_GetProjectileTargetLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGProjectile.GetCollisionSphere
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USphereComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USphereComponent* AFGProjectile::GetCollisionSphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProjectile.GetCollisionSphere");

	AFGProjectile_GetCollisionSphere_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDismantleInterface.Upgrade
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor**                 newActor                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGDismantleInterface::Upgrade(class AActor** newActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.Upgrade");

	UFGDismantleInterface_Upgrade_Params params;
	params.newActor = newActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDismantleInterface.StopIsLookedAtForDismantle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGDismantleInterface::StopIsLookedAtForDismantle(class AFGCharacterPlayer** byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.StopIsLookedAtForDismantle");

	UFGDismantleInterface_StopIsLookedAtForDismantle_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDismantleInterface.StartIsLookedAtForDismantle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGDismantleInterface::StartIsLookedAtForDismantle(class AFGCharacterPlayer** byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.StartIsLookedAtForDismantle");

	UFGDismantleInterface_StartIsLookedAtForDismantle_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDismantleInterface.PreUpgrade
// (Native, Event, Public, BlueprintEvent)

void UFGDismantleInterface::PreUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.PreUpgrade");

	UFGDismantleInterface_PreUpgrade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDismantleInterface.GetRefundSpawnLocationAndArea
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector*                aimHitLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          out_radius                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGDismantleInterface::GetRefundSpawnLocationAndArea(struct FVector* aimHitLocation, float* out_radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.GetRefundSpawnLocationAndArea");

	UFGDismantleInterface_GetRefundSpawnLocationAndArea_Params params;
	params.aimHitLocation = aimHitLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_radius != nullptr)
		*out_radius = params.out_radius;

	return params.ReturnValue;
}


// Function FactoryGame.FGDismantleInterface.GetDismantleRefund
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// TArray<struct FInventoryStack> out_refund                     (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGDismantleInterface::GetDismantleRefund(TArray<struct FInventoryStack>* out_refund)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.GetDismantleRefund");

	UFGDismantleInterface_GetDismantleRefund_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_refund != nullptr)
		*out_refund = params.out_refund;
}


// Function FactoryGame.FGDismantleInterface.Dismantle
// (Native, Event, Public, BlueprintEvent)

void UFGDismantleInterface::Dismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.Dismantle");

	UFGDismantleInterface_Dismantle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDismantleInterface.CanDismantle
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGDismantleInterface::CanDismantle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDismantleInterface.CanDismantle");

	UFGDismantleInterface_CanDismantle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHotbarShortcut.IsValidShortcut
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFGPlayerController**    Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGHotbarShortcut::IsValidShortcut(class AFGPlayerController** Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHotbarShortcut.IsValidShortcut");

	UFGHotbarShortcut_IsValidShortcut_Params params;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHotbarShortcut.IsActive
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFGPlayerController**    Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGHotbarShortcut::IsActive(class AFGPlayerController** Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHotbarShortcut.IsActive");

	UFGHotbarShortcut_IsActive_Params params;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHotbarShortcut.GetDisplayImage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGHotbarShortcut::GetDisplayImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHotbarShortcut.GetDisplayImage");

	UFGHotbarShortcut_GetDisplayImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHotbarShortcut.Execute
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGPlayerController**    Owner                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGHotbarShortcut::Execute(class AFGPlayerController** Owner)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHotbarShortcut.Execute");

	UFGHotbarShortcut_Execute_Params params;
	params.Owner = Owner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.WasUndocked
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGDockableInterface::WasUndocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.WasUndocked");

	UFGDockableInterface_WasUndocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.WasDocked
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGBuildableDockingStation** atStation                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGDockableInterface::WasDocked(class AFGBuildableDockingStation** atStation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.WasDocked");

	UFGDockableInterface_WasDocked_Params params;
	params.atStation = atStation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.OnTransferComplete
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGDockableInterface::OnTransferComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.OnTransferComplete");

	UFGDockableInterface_OnTransferComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.OnBeginUnloadVehicle
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGDockableInterface::OnBeginUnloadVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.OnBeginUnloadVehicle");

	UFGDockableInterface_OnBeginUnloadVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.OnBeginLoadVehicle
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGDockableInterface::OnBeginLoadVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.OnBeginLoadVehicle");

	UFGDockableInterface_OnBeginLoadVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDockableInterface.GetDockInventory
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGDockableInterface::GetDockInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.GetDockInventory");

	UFGDockableInterface_GetDockInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDockableInterface.GetDockFuelInventory
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGDockableInterface::GetDockFuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.GetDockFuelInventory");

	UFGDockableInterface_GetDockFuelInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDockableInterface.CanDock
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EDockStationType*              atStation                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGDockableInterface::CanDock(EDockStationType* atStation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDockableInterface.CanDock");

	UFGDockableInterface_CanDock_Params params;
	params.atStation = atStation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDotComponent.OnPrimitiveComponentExited
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGDotComponent::OnPrimitiveComponentExited(class UPrimitiveComponent** OverlappedComp, class AActor** Other, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDotComponent.OnPrimitiveComponentExited");

	UFGDotComponent_OnPrimitiveComponentExited_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDotComponent.OnPrimitiveComponentEntered
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          fromSweep                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFGDotComponent::OnPrimitiveComponentEntered(class UPrimitiveComponent** OverlappedComp, class AActor** Other, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* fromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDotComponent.OnPrimitiveComponentEntered");

	UFGDotComponent_OnPrimitiveComponentEntered_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.fromSweep = fromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDotComponent.DamageContainingActors
// (Final, Native, Protected)

void UFGDotComponent::DamageContainingActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDotComponent.DamageContainingActors");

	UFGDotComponent_DamageContainingActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDowsingStick.GetWaterLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AFGDowsingStick::GetWaterLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDowsingStick.GetWaterLocation");

	AFGDowsingStick_GetWaterLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDropPod.RollLoot
// (Native, Event, Protected, BlueprintEvent)

void AFGDropPod::RollLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.RollLoot");

	AFGDropPod_RollLoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPod.RollDropPackage
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<class UClass*>*         includedItems                  (Parm, ZeroConstructor)
// struct FDropPackage            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FDropPackage AFGDropPod::RollDropPackage(TArray<class UClass*>* includedItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.RollDropPackage");

	AFGDropPod_RollDropPackage_Params params;
	params.includedItems = includedItems;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDropPod.Open
// (Final, Native, Protected, BlueprintCallable)

void AFGDropPod::Open()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.Open");

	AFGDropPod_Open_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPod.OnRepair
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     InteractingCharacter           (Parm, ZeroConstructor, IsPlainOldData)

void AFGDropPod::OnRepair(class AFGCharacterPlayer** InteractingCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.OnRepair");

	AFGDropPod_OnRepair_Params params;
	params.InteractingCharacter = InteractingCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPod.OnRep_HasBeenOpened
// (Final, Native, Private)

void AFGDropPod::OnRep_HasBeenOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.OnRep_HasBeenOpened");

	AFGDropPod_OnRep_HasBeenOpened_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPod.OnOpened
// (Native, Event, Protected, BlueprintEvent)

void AFGDropPod::OnOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.OnOpened");

	AFGDropPod_OnOpened_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPod.HasBeenOpened
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGDropPod::HasBeenOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.HasBeenOpened");

	AFGDropPod_HasBeenOpened_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDropPod.GetLootInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGDropPod::GetLootInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.GetLootInventory");

	AFGDropPod_GetLootInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDropPod.GenerateDropPodInventory
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<class UClass*>*         includedItems                  (Parm, ZeroConstructor)
// int*                           numItemsCreated                (Parm, ZeroConstructor, IsPlainOldData)

void AFGDropPod::GenerateDropPodInventory(TArray<class UClass*>* includedItems, int* numItemsCreated)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPod.GenerateDropPodInventory");

	AFGDropPod_GenerateDropPodInventory_Params params;
	params.includedItems = includedItems;
	params.numItemsCreated = numItemsCreated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDropPodSettings.GetRandomDropPackage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWorld**                 World                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FDropPackage            ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm)

struct FDropPackage UFGDropPodSettings::STATIC_GetRandomDropPackage(class UWorld** World)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDropPodSettings.GetRandomDropPackage");

	UFGDropPodSettings_GetRandomDropPackage_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDynamicOptionsRow.OnOptionValueUpdated
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UFGDynamicOptionsRow::OnOptionValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDynamicOptionsRow.OnOptionValueUpdated");

	UFGDynamicOptionsRow_OnOptionValueUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDynamicOptionsRow.OnOptionRowInit
// (Event, Protected, BlueprintEvent)

void UFGDynamicOptionsRow::OnOptionRowInit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDynamicOptionsRow.OnOptionRowInit");

	UFGDynamicOptionsRow_OnOptionRowInit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGDynamicOptionsRow.GetValueControllerWidget
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGOptionsValueController* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGOptionsValueController* UFGDynamicOptionsRow::GetValueControllerWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDynamicOptionsRow.GetValueControllerWidget");

	UFGDynamicOptionsRow_GetValueControllerWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDynamicOptionsRow.GetOptionRowData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOptionRowData          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FOptionRowData UFGDynamicOptionsRow::GetOptionRowData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDynamicOptionsRow.GetOptionRowData");

	UFGDynamicOptionsRow_GetOptionRowData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGDynamicOptionsRow.GetOptionCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOptionCategory                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EOptionCategory UFGDynamicOptionsRow::GetOptionCategory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGDynamicOptionsRow.GetOptionCategory");

	UFGDynamicOptionsRow_GetOptionCategory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.UpdateAttackPattern
// (Final, Native, Public, BlueprintCallable)

void AFGEnemyController::UpdateAttackPattern()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.UpdateAttackPattern");

	AFGEnemyController_UpdateAttackPattern_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.UpdateAggroTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         dt                             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          fullCheck                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::UpdateAggroTargets(float* dt, bool* fullCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.UpdateAggroTargets");

	AFGEnemyController_UpdateAggroTargets_Params params;
	params.dt = dt;
	params.fullCheck = fullCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.UpdateAggroAndFindAndAssignTarget
// (Final, Native, Public)

void AFGEnemyController::UpdateAggroAndFindAndAssignTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.UpdateAggroAndFindAndAssignTarget");

	AFGEnemyController_UpdateAggroAndFindAndAssignTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.ShouldAddAggroTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface>* aggroTargetInterface           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEnemyController::ShouldAddAggroTarget(TScriptInterface<class UFGAggroTargetInterface>* aggroTargetInterface)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.ShouldAddAggroTarget");

	AFGEnemyController_ShouldAddAggroTarget_Params params;
	params.aggroTargetInterface = aggroTargetInterface;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.SetCurrentAggroTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface>* newAggroTargetInterface        (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::SetCurrentAggroTarget(TScriptInterface<class UFGAggroTargetInterface>* newAggroTargetInterface)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.SetCurrentAggroTarget");

	AFGEnemyController_SetCurrentAggroTarget_Params params;
	params.newAggroTargetInterface = newAggroTargetInterface;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.ResetLastValidTargetLocation
// (Final, Native, Public, BlueprintCallable)

void AFGEnemyController::ResetLastValidTargetLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.ResetLastValidTargetLocation");

	AFGEnemyController_ResetLastValidTargetLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.RemoveInvalidAggroTargets
// (Final, Native, Public, BlueprintCallable)

void AFGEnemyController::RemoveInvalidAggroTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.RemoveInvalidAggroTargets");

	AFGEnemyController_RemoveInvalidAggroTargets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.OnPawnTakeDamage
// (Final, Native, Protected)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::OnPawnTakeDamage(class AActor** DamagedActor, float* damageAmount, class UDamageType** DamageType, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.OnPawnTakeDamage");

	AFGEnemyController_OnPawnTakeDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.OnAggroTargetUpdated
// (Native, Event, Public, BlueprintEvent)

void AFGEnemyController::OnAggroTargetUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.OnAggroTargetUpdated");

	AFGEnemyController_OnAggroTargetUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.OnAggroTargetLost
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor**                 lostActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::OnAggroTargetLost(class AActor** lostActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.OnAggroTargetLost");

	AFGEnemyController_OnAggroTargetLost_Params params;
	params.lostActor = lostActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.IsOnIgnoreList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface>* aggroTargetInterface           (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEnemyController::IsOnIgnoreList(TScriptInterface<class UFGAggroTargetInterface>* aggroTargetInterface)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.IsOnIgnoreList");

	AFGEnemyController_IsOnIgnoreList_Params params;
	params.aggroTargetInterface = aggroTargetInterface;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetTargetLastValidLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AFGEnemyController::GetTargetLastValidLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetTargetLastValidLocation");

	AFGEnemyController_GetTargetLastValidLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetTargetingDesireFromAggroEntry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAggroEntry*            outTarget                      (Parm)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGEnemyController::GetTargetingDesireFromAggroEntry(struct FAggroEntry* outTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetTargetingDesireFromAggroEntry");

	AFGEnemyController_GetTargetingDesireFromAggroEntry_Params params;
	params.outTarget = outTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetTargetingDesire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface>* aggroTarget                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGEnemyController::GetTargetingDesire(TScriptInterface<class UFGAggroTargetInterface>* aggroTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetTargetingDesire");

	AFGEnemyController_GetTargetingDesire_Params params;
	params.aggroTarget = aggroTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetMostDesirableAggroTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UFGAggroTargetInterface> AFGEnemyController::GetMostDesirableAggroTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetMostDesirableAggroTarget");

	AFGEnemyController_GetMostDesirableAggroTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetCurrentAttackFromPattern
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGEnemyController::GetCurrentAttackFromPattern()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetCurrentAttackFromPattern");

	AFGEnemyController_GetCurrentAttackFromPattern_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetAttackPatternIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGEnemyController::GetAttackPatternIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetAttackPatternIndex");

	AFGEnemyController_GetAttackPatternIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GetAggroThreshold
// (Final, Native, Public)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGEnemyController::GetAggroThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GetAggroThreshold");

	AFGEnemyController_GetAggroThreshold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.GatherAggroTargets
// (Final, Native, Public, BlueprintCallable)

void AFGEnemyController::GatherAggroTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.GatherAggroTargets");

	AFGEnemyController_GatherAggroTargets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.FindAndAssignTarget
// (Final, Native, Public, BlueprintCallable)

void AFGEnemyController::FindAndAssignTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.FindAndAssignTarget");

	AFGEnemyController_FindAndAssignTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.ClearAllAggroTargetsAndUpdate
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGEnemyController::ClearAllAggroTargetsAndUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.ClearAllAggroTargetsAndUpdate");

	AFGEnemyController_ClearAllAggroTargetsAndUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.CanSeeActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEnemyController::CanSeeActor(class AActor** Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.CanSeeActor");

	AFGEnemyController_CanSeeActor_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEnemyController.AggroTargetRemoved
// (Final, Native, Protected)
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface>* aggroTarget                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::AggroTargetRemoved(TScriptInterface<class UFGAggroTargetInterface>* aggroTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.AggroTargetRemoved");

	AFGEnemyController_AggroTargetRemoved_Params params;
	params.aggroTarget = aggroTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.AggroTargetAdded
// (Final, Native, Protected)
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface>* aggroTarget                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::AggroTargetAdded(TScriptInterface<class UFGAggroTargetInterface>* aggroTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.AggroTargetAdded");

	AFGEnemyController_AggroTargetAdded_Params params;
	params.aggroTarget = aggroTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEnemyController.AddToAggroByTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UFGAggroTargetInterface>* Target                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGEnemyController::AddToAggroByTarget(TScriptInterface<class UFGAggroTargetInterface>* Target, float* Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEnemyController.AddToAggroByTarget");

	AFGEnemyController_AddToAggroByTarget_Params params;
	params.Target = Target;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentChild.OnUnEquip
// (Native, Event, Public, BlueprintEvent)

void AFGEquipmentChild::OnUnEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentChild.OnUnEquip");

	AFGEquipmentChild_OnUnEquip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentChild.OnEquip
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGEquipmentChild::OnEquip(class AFGCharacterPlayer** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentChild.OnEquip");

	AFGEquipmentChild_OnEquip_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentChild.GetAttachSocketTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform AFGEquipmentChild::GetAttachSocketTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentChild.GetAttachSocketTransform");

	AFGEquipmentChild_GetAttachSocketTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentDecoration.SpawnDecoration
// (Event, Public, BlueprintEvent)

void AFGEquipmentDecoration::SpawnDecoration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentDecoration.SpawnDecoration");

	AFGEquipmentDecoration_SpawnDecoration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentDecoration.Server_PrimaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFGEquipmentDecoration::Server_PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentDecoration.Server_PrimaryFire");

	AFGEquipmentDecoration_Server_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentStunSpear.Server_ShockEnemy
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFGEquipmentStunSpear::Server_ShockEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentStunSpear.Server_ShockEnemy");

	AFGEquipmentStunSpear_Server_ShockEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentStunSpear.PlayStunEffects
// (Event, Public, BlueprintEvent)

void AFGEquipmentStunSpear::PlayStunEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentStunSpear.PlayStunEffects");

	AFGEquipmentStunSpear_PlayStunEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentStunSpear.OnHitTarget
// (Native, Event, Public, BlueprintEvent)

void AFGEquipmentStunSpear::OnHitTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentStunSpear.OnHitTarget");

	AFGEquipmentStunSpear_OnHitTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGEquipmentStunSpear.GetShouldPlaySecondSwing
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGEquipmentStunSpear::GetShouldPlaySecondSwing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentStunSpear.GetShouldPlaySecondSwing");

	AFGEquipmentStunSpear_GetShouldPlaySecondSwing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGEquipmentStunSpear.DoAttack
// (Final, Native, Public, BlueprintCallable)

void AFGEquipmentStunSpear::DoAttack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGEquipmentStunSpear.DoAttack");

	AFGEquipmentStunSpear_DoAttack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGErrorMessage.GetErrorResponse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EErrorResponse>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EErrorResponse> UFGErrorMessage::GetErrorResponse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGErrorMessage.GetErrorResponse");

	UFGErrorMessage_GetErrorResponse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGErrorMessage.GetErrorMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGErrorMessage::GetErrorMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGErrorMessage.GetErrorMessage");

	UFGErrorMessage_GetErrorMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExplosiveDestroyableInterface.NotifyExploded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGExplosiveDestroyableInterface::NotifyExploded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExplosiveDestroyableInterface.NotifyExploded");

	UFGExplosiveDestroyableInterface_NotifyExploded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExplosiveDestroyableInterface.GetDestroyEffect
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UFGExplosiveDestroyableInterface::GetDestroyEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExplosiveDestroyableInterface.GetDestroyEffect");

	UFGExplosiveDestroyableInterface_GetDestroyEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExtractableResourceInterface.SetIsOccupied
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                          occupied                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGExtractableResourceInterface::SetIsOccupied(bool* occupied)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExtractableResourceInterface.SetIsOccupied");

	UFGExtractableResourceInterface_SetIsOccupied_Params params;
	params.occupied = occupied;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGExtractableResourceInterface.IsOccupied
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGExtractableResourceInterface::IsOccupied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExtractableResourceInterface.IsOccupied");

	UFGExtractableResourceInterface_IsOccupied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExtractableResourceInterface.HasAnyResources
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGExtractableResourceInterface::HasAnyResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExtractableResourceInterface.HasAnyResources");

	UFGExtractableResourceInterface_HasAnyResources_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExtractableResourceInterface.GetResourceClass
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGExtractableResourceInterface::GetResourceClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExtractableResourceInterface.GetResourceClass");

	UFGExtractableResourceInterface_GetResourceClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExtractableResourceInterface.GetPlacementLocation
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector*                HitLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGExtractableResourceInterface::GetPlacementLocation(struct FVector* HitLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExtractableResourceInterface.GetPlacementLocation");

	UFGExtractableResourceInterface_GetPlacementLocation_Params params;
	params.HitLocation = HitLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExtractableResourceInterface.GetExtractionSpeedMultiplier
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGExtractableResourceInterface::GetExtractionSpeedMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExtractableResourceInterface.GetExtractionSpeedMultiplier");

	UFGExtractableResourceInterface_GetExtractionSpeedMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExtractableResourceInterface.ExtractResource
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGExtractableResourceInterface::ExtractResource(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExtractableResourceInterface.ExtractResource");

	UFGExtractableResourceInterface_ExtractResource_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExtractableResourceInterface.CanPlaceResourceExtractor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGExtractableResourceInterface::CanPlaceResourceExtractor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExtractableResourceInterface.CanPlaceResourceExtractor");

	UFGExtractableResourceInterface_CanPlaceResourceExtractor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGExtractableResourceInterface.CanBecomeOccupied
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGExtractableResourceInterface::CanBecomeOccupied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGExtractableResourceInterface.CanBecomeOccupied");

	UFGExtractableResourceInterface_CanBecomeOccupied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.IsConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFactoryConnectionComponent::IsConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.IsConnected");

	UFGFactoryConnectionComponent_IsConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.GetInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGFactoryConnectionComponent::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.GetInventory");

	UFGFactoryConnectionComponent_GetInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.GetDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFactoryConnectionDirection    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFactoryConnectionDirection UFGFactoryConnectionComponent::GetDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.GetDirection");

	UFGFactoryConnectionComponent_GetDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.GetConnectorClearance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGFactoryConnectionComponent::GetConnectorClearance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.GetConnectorClearance");

	UFGFactoryConnectionComponent_GetConnectorClearance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.GetConnector
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFactoryConnectionConnector    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFactoryConnectionConnector UFGFactoryConnectionComponent::GetConnector()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.GetConnector");

	UFGFactoryConnectionComponent_GetConnector_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.Factory_PeekOutput
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FInventoryItem>  out_items                      (Parm, OutParm, ZeroConstructor)
// class UClass**                 Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFactoryConnectionComponent::Factory_PeekOutput(class UClass** Type, TArray<struct FInventoryItem>* out_items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.Factory_PeekOutput");

	UFGFactoryConnectionComponent_Factory_PeekOutput_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_items != nullptr)
		*out_items = params.out_items;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.Factory_Internal_PeekOutputInventory
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FInventoryItem>  out_items                      (Parm, OutParm, ZeroConstructor)
// class UClass**                 Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFactoryConnectionComponent::Factory_Internal_PeekOutputInventory(class UClass** Type, TArray<struct FInventoryItem>* out_items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.Factory_Internal_PeekOutputInventory");

	UFGFactoryConnectionComponent_Factory_Internal_PeekOutputInventory_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_items != nullptr)
		*out_items = params.out_items;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.Factory_Internal_GrabOutputInventory
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FInventoryItem          out_item                       (Parm, OutParm)
// class UClass**                 Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFactoryConnectionComponent::Factory_Internal_GrabOutputInventory(class UClass** Type, struct FInventoryItem* out_item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.Factory_Internal_GrabOutputInventory");

	UFGFactoryConnectionComponent_Factory_Internal_GrabOutputInventory_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_item != nullptr)
		*out_item = params.out_item;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryConnectionComponent.Factory_GrabOutput
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FInventoryItem          out_item                       (Parm, OutParm)
// float                          out_OffsetBeyond               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFactoryConnectionComponent::Factory_GrabOutput(class UClass** Type, struct FInventoryItem* out_item, float* out_OffsetBeyond)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryConnectionComponent.Factory_GrabOutput");

	UFGFactoryConnectionComponent_Factory_GrabOutput_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_item != nullptr)
		*out_item = params.out_item;
	if (out_OffsetBeyond != nullptr)
		*out_OffsetBeyond = params.out_OffsetBeyond;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryLegsComponent.GetLegMeshComponents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UStaticMeshComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UStaticMeshComponent*> UFGFactoryLegsComponent::GetLegMeshComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryLegsComponent.GetLegMeshComponents");

	UFGFactoryLegsComponent_GetLegMeshComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactoryLegsComponent.GetFootMeshComponents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UStaticMeshComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UStaticMeshComponent*> UFGFactoryLegsComponent::GetFootMeshComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactoryLegsComponent.GetFootMeshComponents");

	UFGFactoryLegsComponent_GetFootMeshComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactorySettings.GetRandomDismantleSound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGFactorySettings::STATIC_GetRandomDismantleSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactorySettings.GetRandomDismantleSound");

	UFGFactorySettings_GetRandomDismantleSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFactorySettings.GetRandomConstructionSound
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGFactorySettings::STATIC_GetRandomConstructionSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFactorySettings.GetRandomConstructionSound");

	UFGFactorySettings_GetRandomConstructionSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliagePickup.Server_PickupWithTransform
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// class AFGFoliageRemoval**      foliageRemoval                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             withTransform                  (Parm, IsPlainOldData)

void AFGFoliagePickup::Server_PickupWithTransform(class AFGCharacterPlayer** byCharacter, class AFGFoliageRemoval** foliageRemoval, struct FTransform* withTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliagePickup.Server_PickupWithTransform");

	AFGFoliagePickup_Server_PickupWithTransform_Params params;
	params.byCharacter = byCharacter;
	params.foliageRemoval = foliageRemoval;
	params.withTransform = withTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliagePickup.PlayPickupEffect
// (BlueprintCosmetic, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class UFGFoliageResourceUserData** foliageUserData                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector*                atLocation                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGFoliagePickup::PlayPickupEffect(class UFGFoliageResourceUserData** foliageUserData, struct FVector* atLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliagePickup.PlayPickupEffect");

	AFGFoliagePickup_PlayPickupEffect_Params params;
	params.foliageUserData = foliageUserData;
	params.atLocation = atLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliagePickup.BroadcastPickup
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class UStaticMesh**            fromStaticMesh                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                atLocation                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGFoliagePickup::BroadcastPickup(class UStaticMesh** fromStaticMesh, struct FVector* atLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliagePickup.BroadcastPickup");

	AFGFoliagePickup_BroadcastPickup_Params params;
	params.fromStaticMesh = fromStaticMesh;
	params.atLocation = atLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliageRemoval.RemoveInstance
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform*             foliageTransform               (Parm, IsPlainOldData)
// bool*                          localSpace                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemoval::RemoveInstance(struct FTransform* foliageTransform, bool* localSpace, int* InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemoval.RemoveInstance");

	AFGFoliageRemoval_RemoveInstance_Params params;
	params.foliageTransform = foliageTransform;
	params.localSpace = localSpace;
	params.InstanceId = InstanceId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemoval.RegisterWithSubsystem
// (Final, Native, Private)

void AFGFoliageRemoval::RegisterWithSubsystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemoval.RegisterWithSubsystem");

	AFGFoliageRemoval_RegisterWithSubsystem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.OnLevelRemovedFromWorld
// (Final, Native, Protected)
// Parameters:
// class ULevel**                 inLevel                        (Parm, ZeroConstructor, IsPlainOldData)
// class UWorld**                 inWorld                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGFoliageRemovalSubsystem::OnLevelRemovedFromWorld(class ULevel** inLevel, class UWorld** inWorld)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.OnLevelRemovedFromWorld");

	AFGFoliageRemovalSubsystem_OnLevelRemovedFromWorld_Params params;
	params.inLevel = inLevel;
	params.inWorld = inWorld;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.OnLevelAddedToWorld
// (Final, Native, Protected)
// Parameters:
// class ULevel**                 inLevel                        (Parm, ZeroConstructor, IsPlainOldData)
// class UWorld**                 inWorld                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGFoliageRemovalSubsystem::OnLevelAddedToWorld(class ULevel** inLevel, class UWorld** inWorld)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.OnLevelAddedToWorld");

	AFGFoliageRemovalSubsystem_OnLevelAddedToWorld_Params params;
	params.inLevel = inLevel;
	params.inWorld = inWorld;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.HasIdentifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHierarchicalInstancedStaticMeshComponent** component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass**                 foliageIdentifier              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemovalSubsystem::HasIdentifier(class UHierarchicalInstancedStaticMeshComponent** component, class UClass** foliageIdentifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.HasIdentifier");

	AFGFoliageRemovalSubsystem_HasIdentifier_Params params;
	params.component = component;
	params.foliageIdentifier = foliageIdentifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetLookAtFoliage
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                ViewLocation                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                endViewLocation                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UClass**                 foliageIdentifier              (Parm, ZeroConstructor, IsPlainOldData)
// class UHierarchicalInstancedStaticMeshComponent* out_component                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            out_instanceId                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 out_instanceLocation           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemovalSubsystem::GetLookAtFoliage(struct FVector* ViewLocation, struct FVector* endViewLocation, class UClass** foliageIdentifier, class UHierarchicalInstancedStaticMeshComponent** out_component, int* out_instanceId, struct FVector* out_instanceLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetLookAtFoliage");

	AFGFoliageRemovalSubsystem_GetLookAtFoliage_Params params;
	params.ViewLocation = ViewLocation;
	params.endViewLocation = endViewLocation;
	params.foliageIdentifier = foliageIdentifier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_component != nullptr)
		*out_component = params.out_component;
	if (out_instanceId != nullptr)
		*out_instanceId = params.out_instanceId;
	if (out_instanceLocation != nullptr)
		*out_instanceLocation = params.out_instanceLocation;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageWithinRadius
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isLocalSpace                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    out_instanceArray              (Parm, OutParm, ZeroConstructor)
// TArray<struct FVector>         out_locationArray              (Parm, OutParm, ZeroConstructor)
// TArray<class UHierarchicalInstancedStaticMeshComponent*> out_componentArray             (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemovalSubsystem::GetFoliageWithinRadius(struct FVector* Location, float* Radius, bool* isLocalSpace, TArray<int>* out_instanceArray, TArray<struct FVector>* out_locationArray, TArray<class UHierarchicalInstancedStaticMeshComponent*>* out_componentArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageWithinRadius");

	AFGFoliageRemovalSubsystem_GetFoliageWithinRadius_Params params;
	params.Location = Location;
	params.Radius = Radius;
	params.isLocalSpace = isLocalSpace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_instanceArray != nullptr)
		*out_instanceArray = params.out_instanceArray;
	if (out_locationArray != nullptr)
		*out_locationArray = params.out_locationArray;
	if (out_componentArray != nullptr)
		*out_componentArray = params.out_componentArray;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageRemovalSubsystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGFoliageRemovalSubsystem* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGFoliageRemovalSubsystem* AFGFoliageRemovalSubsystem::STATIC_GetFoliageRemovalSubsystem(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageRemovalSubsystem");

	AFGFoliageRemovalSubsystem_GetFoliageRemovalSubsystem_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageRemovalActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UHierarchicalInstancedStaticMeshComponent** FromComponent                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AFGFoliageRemoval*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGFoliageRemoval* AFGFoliageRemovalSubsystem::GetFoliageRemovalActor(class UHierarchicalInstancedStaticMeshComponent** FromComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetFoliageRemovalActor");

	AFGFoliageRemovalSubsystem_GetFoliageRemovalActor_Params params;
	params.FromComponent = FromComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliageForComponent
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// class UHierarchicalInstancedStaticMeshComponent** component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          isLocalSpace                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            out_instanceId                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 out_instanceLocation           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemovalSubsystem::GetClosestFoliageForComponent(struct FVector* Location, float* MaxDistance, class UHierarchicalInstancedStaticMeshComponent** component, bool* isLocalSpace, int* out_instanceId, struct FVector* out_instanceLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliageForComponent");

	AFGFoliageRemovalSubsystem_GetClosestFoliageForComponent_Params params;
	params.Location = Location;
	params.MaxDistance = MaxDistance;
	params.component = component;
	params.isLocalSpace = isLocalSpace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_instanceId != nullptr)
		*out_instanceId = params.out_instanceId;
	if (out_instanceLocation != nullptr)
		*out_instanceLocation = params.out_instanceLocation;

	return params.ReturnValue;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliageArrayForComponent
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FVector>*        Locations                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// class UHierarchicalInstancedStaticMeshComponent** component                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          isLocalSpace                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    out_instanceArray              (Parm, OutParm, ZeroConstructor)

void AFGFoliageRemovalSubsystem::GetClosestFoliageArrayForComponent(TArray<struct FVector>* Locations, float* MaxDistance, class UHierarchicalInstancedStaticMeshComponent** component, bool* isLocalSpace, TArray<int>* out_instanceArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliageArrayForComponent");

	AFGFoliageRemovalSubsystem_GetClosestFoliageArrayForComponent_Params params;
	params.Locations = Locations;
	params.MaxDistance = MaxDistance;
	params.component = component;
	params.isLocalSpace = isLocalSpace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_instanceArray != nullptr)
		*out_instanceArray = params.out_instanceArray;
}


// Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliage
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         MaxDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 foliageIdentifier              (Parm, ZeroConstructor, IsPlainOldData)
// class UHierarchicalInstancedStaticMeshComponent* out_component                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          isLocalSpace                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            out_instanceId                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 out_instanceLocation           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGFoliageRemovalSubsystem::GetClosestFoliage(struct FVector* Location, float* MaxDistance, class UClass** foliageIdentifier, bool* isLocalSpace, class UHierarchicalInstancedStaticMeshComponent** out_component, int* out_instanceId, struct FVector* out_instanceLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFoliageRemovalSubsystem.GetClosestFoliage");

	AFGFoliageRemovalSubsystem_GetClosestFoliage_Params params;
	params.Location = Location;
	params.MaxDistance = MaxDistance;
	params.foliageIdentifier = foliageIdentifier;
	params.isLocalSpace = isLocalSpace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_component != nullptr)
		*out_component = params.out_component;
	if (out_instanceId != nullptr)
		*out_instanceId = params.out_instanceId;
	if (out_instanceLocation != nullptr)
		*out_instanceLocation = params.out_instanceLocation;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.UpdatePhysicsVolume
// (Final, Native, Private)
// Parameters:
// class APhysicsVolume**         PhysicsVolume                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGVehicle::UpdatePhysicsVolume(class APhysicsVolume** PhysicsVolume)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.UpdatePhysicsVolume");

	AFGVehicle_UpdatePhysicsVolume_Params params;
	params.PhysicsVolume = PhysicsVolume;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.SelfDriverEnter
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AAIController**          AI                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::SelfDriverEnter(class AAIController** AI)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.SelfDriverEnter");

	AFGVehicle_SelfDriverEnter_Params params;
	params.AI = AI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.ReceiveOnVehicleStartup
// (Event, Protected, BlueprintEvent)

void AFGVehicle::ReceiveOnVehicleStartup()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.ReceiveOnVehicleStartup");

	AFGVehicle_ReceiveOnVehicleStartup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.ReceiveOnVehicleShutDown
// (Event, Protected, BlueprintEvent)

void AFGVehicle::ReceiveOnVehicleShutDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.ReceiveOnVehicleShutDown");

	AFGVehicle_ReceiveOnVehicleShutDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.ReceiveDied
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 thisActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGVehicle::ReceiveDied(class AActor** thisActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.ReceiveDied");

	AFGVehicle_ReceiveDied_Params params;
	params.thisActor = thisActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.OnTakeDamage
// (Native, Protected)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGVehicle::OnTakeDamage(class AActor** DamagedActor, float* damageAmount, class UDamageType** DamageType, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.OnTakeDamage");

	AFGVehicle_OnTakeDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.NotifyOnTakeDamage
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGVehicle::NotifyOnTakeDamage(class AActor** DamagedActor, float* damageAmount, class UDamageType** DamageType, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.NotifyOnTakeDamage");

	AFGVehicle_NotifyOnTakeDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.KickAllPlayers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFGVehicle::KickAllPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.KickAllPlayers");

	AFGVehicle_KickAllPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.IsSelfDriving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::IsSelfDriving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.IsSelfDriving");

	AFGVehicle_IsSelfDriving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.IsDestructible
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::IsDestructible()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.IsDestructible");

	AFGVehicle_IsDestructible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.HasAnyPassengerSeatAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::HasAnyPassengerSeatAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.HasAnyPassengerSeatAvailable");

	AFGVehicle_HasAnyPassengerSeatAvailable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.GetIsSignificant
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::GetIsSignificant()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.GetIsSignificant");

	AFGVehicle_GetIsSignificant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.GetHealthComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGHealthComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGHealthComponent* AFGVehicle::GetHealthComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.GetHealthComponent");

	AFGVehicle_GetHealthComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicle.GetDismantleBlueprintReturns
// (Event, Protected, HasOutParms, BlueprintEvent, Const)
// Parameters:
// TArray<struct FInventoryStack> out_returns                    (Parm, OutParm, ZeroConstructor)

void AFGVehicle::GetDismantleBlueprintReturns(TArray<struct FInventoryStack>* out_returns)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.GetDismantleBlueprintReturns");

	AFGVehicle_GetDismantleBlueprintReturns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_returns != nullptr)
		*out_returns = params.out_returns;
}


// Function FactoryGame.FGVehicle.Died
// (Native, Protected)
// Parameters:
// class AActor**                 thisActor                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGVehicle::Died(class AActor** thisActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.Died");

	AFGVehicle_Died_Params params;
	params.thisActor = thisActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicle.CanSelfDriverEnter
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAIController**          AI                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGVehicle::CanSelfDriverEnter(class AAIController** AI)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicle.CanSelfDriverEnter");

	AFGVehicle_CanSelfDriverEnter_Params params;
	params.AI = AI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.IsOrientationReversed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGRailroadVehicle::IsOrientationReversed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.IsOrientationReversed");

	AFGRailroadVehicle_IsOrientationReversed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.IsCoupledAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERailroadVehicleCoupler*       coupler                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGRailroadVehicle::IsCoupledAt(ERailroadVehicleCoupler* coupler)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.IsCoupledAt");

	AFGRailroadVehicle_IsCoupledAt_Params params;
	params.coupler = coupler;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetTrain
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGTrain*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTrain* AFGRailroadVehicle::GetTrain()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetTrain");

	AFGRailroadVehicle_GetTrain_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetTrackPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRailroadTrackPosition  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRailroadTrackPosition AFGRailroadVehicle::GetTrackPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetTrackPosition");

	AFGRailroadVehicle_GetTrackPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetTrackGraphID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGRailroadVehicle::GetTrackGraphID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetTrackGraphID");

	AFGRailroadVehicle_GetTrackGraphID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetRailroadVehicleMovementComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGRailroadVehicleMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGRailroadVehicleMovementComponent* AFGRailroadVehicle::GetRailroadVehicleMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetRailroadVehicleMovementComponent");

	AFGRailroadVehicle_GetRailroadVehicleMovementComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGRailroadVehicle::GetLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetLength");

	AFGRailroadVehicle_GetLength_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicle.GetCoupledVehicleAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERailroadVehicleCoupler*       coupler                        (Parm, ZeroConstructor, IsPlainOldData)
// class AFGRailroadVehicle*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRailroadVehicle* AFGRailroadVehicle::GetCoupledVehicleAt(ERailroadVehicleCoupler* coupler)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicle.GetCoupledVehicleAt");

	AFGRailroadVehicle_GetCoupledVehicleAt_Params params;
	params.coupler = coupler;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFreightWagon.OnItemRemovedFromFreight
// (Final, Native, Private)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           numRemoved                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGFreightWagon::OnItemRemovedFromFreight(class UClass** ItemClass, int* numRemoved)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFreightWagon.OnItemRemovedFromFreight");

	AFGFreightWagon_OnItemRemovedFromFreight_Params params;
	params.ItemClass = ItemClass;
	params.numRemoved = numRemoved;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFreightWagon.OnItemAddedToFreight
// (Final, Native, Private)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           numAdded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGFreightWagon::OnItemAddedToFreight(class UClass** ItemClass, int* numAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFreightWagon.OnItemAddedToFreight");

	AFGFreightWagon_OnItemAddedToFreight_Params params;
	params.ItemClass = ItemClass;
	params.numAdded = numAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFreightWagon.InitializeInventoryComponent
// (Final, Native, Private)

void AFGFreightWagon::InitializeInventoryComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFreightWagon.InitializeInventoryComponent");

	AFGFreightWagon_InitializeInventoryComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGFreightWagon.GetFreightInventoryFilledPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGFreightWagon::GetFreightInventoryFilledPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFreightWagon.GetFreightInventoryFilledPercent");

	AFGFreightWagon_GetFreightInventoryFilledPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFreightWagon.GetFreightInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGFreightWagon::GetFreightInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFreightWagon.GetFreightInventory");

	AFGFreightWagon_GetFreightInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.SetSkipOnboarding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          doSkip                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameInstance::SetSkipOnboarding(bool* doSkip)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.SetSkipOnboarding");

	UFGGameInstance_SetSkipOnboarding_Params params;
	params.doSkip = doSkip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameInstance.SetHasSeenAlphaInfoScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          hasSeen                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameInstance::SetHasSeenAlphaInfoScreen(bool* hasSeen)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.SetHasSeenAlphaInfoScreen");

	UFGGameInstance_SetHasSeenAlphaInfoScreen_Params params;
	params.hasSeen = hasSeen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameInstance.PushError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 errorMessage                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameInstance::STATIC_PushError(class UObject** WorldContext, class UClass** errorMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.PushError");

	UFGGameInstance_PushError_Params params;
	params.WorldContext = WorldContext;
	params.errorMessage = errorMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameInstance.PopLatestNetworkError
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameInstance::PopLatestNetworkError()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.PopLatestNetworkError");

	UFGGameInstance_PopLatestNetworkError_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.PollHostProductUserId_JoinSession
// (Native, Protected)

void UFGGameInstance::PollHostProductUserId_JoinSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.PollHostProductUserId_JoinSession");

	UFGGameInstance_PollHostProductUserId_JoinSession_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameInstance.PeekNextError
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFGErrorMessage*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGErrorMessage* UFGGameInstance::STATIC_PeekNextError(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.PeekNextError");

	UFGGameInstance_PeekNextError_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.HasPlayerSeenAlphaInfoScreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameInstance::HasPlayerSeenAlphaInfoScreen()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.HasPlayerSeenAlphaInfoScreen");

	UFGGameInstance_HasPlayerSeenAlphaInfoScreen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.GetSkipOnboarding
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameInstance::GetSkipOnboarding()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.GetSkipOnboarding");

	UFGGameInstance_GetSkipOnboarding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.GetNextError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFGErrorMessage*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGErrorMessage* UFGGameInstance::STATIC_GetNextError(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.GetNextError");

	UFGGameInstance_GetNextError_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.GetLatestNetworkError
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFGGameNetworkErrorMsg  Msg                            (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameInstance::GetLatestNetworkError(struct FFGGameNetworkErrorMsg* Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.GetLatestNetworkError");

	UFGGameInstance_GetLatestNetworkError_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Msg != nullptr)
		*Msg = params.Msg;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.GetGameAnalyticsService
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UAnalyticsService*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnalyticsService* UFGGameInstance::STATIC_GetGameAnalyticsService(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.GetGameAnalyticsService");

	UFGGameInstance_GetGameAnalyticsService_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.GetFGUGC
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 EnemyClass                     (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 BossClass                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 PlayerPawnClass                (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameInstance::GetFGUGC(class UClass** WeaponClass, class UClass** EnemyClass, class UClass** BossClass, class UClass** PlayerPawnClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.GetFGUGC");

	UFGGameInstance_GetFGUGC_Params params;
	params.WeaponClass = WeaponClass;
	params.EnemyClass = EnemyClass;
	params.BossClass = BossClass;
	params.PlayerPawnClass = PlayerPawnClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameInstance.GetCurrentJoinSessionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EJoinSessionState              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EJoinSessionState UFGGameInstance::GetCurrentJoinSessionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.GetCurrentJoinSessionState");

	UFGGameInstance_GetCurrentJoinSessionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameInstance.FindModPackages
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameInstance::FindModPackages()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameInstance.FindModPackages");

	UFGGameInstance_FindModPackages_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameMode.TriggerWorldSave
// (Final, Exec, Native, Protected)
// Parameters:
// class FString*                 saveGameName                   (Parm, ZeroConstructor)

void AFGGameMode::TriggerWorldSave(class FString* saveGameName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameMode.TriggerWorldSave");

	AFGGameMode_TriggerWorldSave_Params params;
	params.saveGameName = saveGameName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameMode.TriggerBundledWorldSave
// (Final, Exec, Native, Protected)
// Parameters:
// class FString*                 saveGameName                   (Parm, ZeroConstructor)

void AFGGameMode::TriggerBundledWorldSave(class FString* saveGameName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameMode.TriggerBundledWorldSave");

	AFGGameMode_TriggerBundledWorldSave_Params params;
	params.saveGameName = saveGameName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameMode.RegisterRemoteCallObjectClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameMode::RegisterRemoteCallObjectClass(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameMode.RegisterRemoteCallObjectClass");

	AFGGameMode_RegisterRemoteCallObjectClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameMode.RebootSession
// (Final, Native, Public)

void AFGGameMode::RebootSession()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameMode.RebootSession");

	AFGGameMode_RebootSession_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameMode.IsMainMenuGameMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameMode::IsMainMenuGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameMode.IsMainMenuGameMode");

	AFGGameMode_IsMainMenuGameMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.SetGamePhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EGamePhase>*       newPhase                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGGamePhaseManager::SetGamePhase(TEnumAsByte<EGamePhase>* newPhase)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.SetGamePhase");

	AFGGamePhaseManager_SetGamePhase_Params params;
	params.newPhase = newPhase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGamePhaseManager.PayOffOnGamePhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FItemAmount*            payOff                         (Parm)
// TEnumAsByte<EGamePhase>*       gamePhase                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGGamePhaseManager::PayOffOnGamePhase(struct FItemAmount* payOff, TEnumAsByte<EGamePhase>* gamePhase)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.PayOffOnGamePhase");

	AFGGamePhaseManager_PayOffOnGamePhase_Params params;
	params.payOff = payOff;
	params.gamePhase = gamePhase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.OnRep_GamePhase
// (Final, Native, Public)

void AFGGamePhaseManager::OnRep_GamePhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.OnRep_GamePhase");

	AFGGamePhaseManager_OnRep_GamePhase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGamePhaseManager.GetGamePhaseName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EGamePhase>*       gamePhase                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGGamePhaseManager::GetGamePhaseName(TEnumAsByte<EGamePhase>* gamePhase)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetGamePhaseName");

	AFGGamePhaseManager_GetGamePhaseName_Params params;
	params.gamePhase = gamePhase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.GetGamePhaseForTechTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           techTier                       (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EGamePhase>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EGamePhase> AFGGamePhaseManager::GetGamePhaseForTechTier(int* techTier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetGamePhaseForTechTier");

	AFGGamePhaseManager_GetGamePhaseForTechTier_Params params;
	params.techTier = techTier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.GetGamePhaseForSchematic
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inSchematic                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EGamePhase>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EGamePhase> AFGGamePhaseManager::GetGamePhaseForSchematic(class UClass** inSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetGamePhaseForSchematic");

	AFGGamePhaseManager_GetGamePhaseForSchematic_Params params;
	params.inSchematic = inSchematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.GetGamePhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EGamePhase>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EGamePhase> AFGGamePhaseManager::GetGamePhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetGamePhase");

	AFGGamePhaseManager_GetGamePhase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGamePhaseManager.GetCostForGamePhase
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TEnumAsByte<EGamePhase>*       gamePhase                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     out_cost                       (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGGamePhaseManager::GetCostForGamePhase(TEnumAsByte<EGamePhase>* gamePhase, TArray<struct FItemAmount>* out_cost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetCostForGamePhase");

	AFGGamePhaseManager_GetCostForGamePhase_Params params;
	params.gamePhase = gamePhase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_cost != nullptr)
		*out_cost = params.out_cost;
}


// Function FactoryGame.FGGamePhaseManager.GetBaseCostForGamePhase
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TEnumAsByte<EGamePhase>*       gamePhase                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     out_cost                       (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGGamePhaseManager::GetBaseCostForGamePhase(TEnumAsByte<EGamePhase>* gamePhase, TArray<struct FItemAmount>* out_cost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.GetBaseCostForGamePhase");

	AFGGamePhaseManager_GetBaseCostForGamePhase_Params params;
	params.gamePhase = gamePhase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_cost != nullptr)
		*out_cost = params.out_cost;
}


// Function FactoryGame.FGGamePhaseManager.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGGamePhaseManager*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGGamePhaseManager* AFGGamePhaseManager::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGamePhaseManager.Get");

	AFGGamePhaseManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameplayTask_Attack.GetAttackClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGGameplayTask_Attack::GetAttackClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_Attack.GetAttackClass");

	UFGGameplayTask_Attack_GetAttackClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameplayTask_AttackJump.StartJump
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFGEnemy**               Enemy                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 attackClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          StartJump                      (Parm, ZeroConstructor, IsPlainOldData)
// class UFGGameplayTask_AttackJump* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGGameplayTask_AttackJump* UFGGameplayTask_AttackJump::STATIC_StartJump(class AFGEnemy** Enemy, class UClass** attackClass, bool* StartJump)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackJump.StartJump");

	UFGGameplayTask_AttackJump_StartJump_Params params;
	params.Enemy = Enemy;
	params.attackClass = attackClass;
	params.StartJump = StartJump;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameplayTask_AttackJump.OnMontageEnded
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage**           Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          interrupted                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameplayTask_AttackJump::OnMontageEnded(class UAnimMontage** Montage, bool* interrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackJump.OnMontageEnded");

	UFGGameplayTask_AttackJump_OnMontageEnded_Params params;
	params.Montage = Montage;
	params.interrupted = interrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameplayTask_AttackJump.OnLandedCallback
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FHitResult*             Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFGGameplayTask_AttackJump::OnLandedCallback(struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackJump.OnLandedCallback");

	UFGGameplayTask_AttackJump_OnLandedCallback_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameplayTask_AttackMelee.OnMontageEnded
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage**           Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          interrupted                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameplayTask_AttackMelee::OnMontageEnded(class UAnimMontage** Montage, bool* interrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackMelee.OnMontageEnded");

	UFGGameplayTask_AttackMelee_OnMontageEnded_Params params;
	params.Montage = Montage;
	params.interrupted = interrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameplayTask_AttackMelee.OnMontageBlendingOut
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage**           Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          interrupted                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameplayTask_AttackMelee::OnMontageBlendingOut(class UAnimMontage** Montage, bool* interrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackMelee.OnMontageBlendingOut");

	UFGGameplayTask_AttackMelee_OnMontageBlendingOut_Params params;
	params.Montage = Montage;
	params.interrupted = interrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameplayTask_AttackMelee.Attack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFGEnemy**               Enemy                          (Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UFGAggroTargetInterface>* attackTarget                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 attackClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UFGGameplayTask_AttackMelee* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGGameplayTask_AttackMelee* UFGGameplayTask_AttackMelee::STATIC_Attack(class AFGEnemy** Enemy, TScriptInterface<class UFGAggroTargetInterface>* attackTarget, class UClass** attackClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameplayTask_AttackMelee.Attack");

	UFGGameplayTask_AttackMelee_Attack_Params params;
	params.Enemy = Enemy;
	params.attackTarget = attackTarget;
	params.attackClass = attackClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameSession.ListenForIntroSequenceUpdated
// (Final, Native, Protected)

void AFGGameSession::ListenForIntroSequenceUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameSession.ListenForIntroSequenceUpdated");

	AFGGameSession_ListenForIntroSequenceUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameSession.IntroSequenceUpdated
// (Final, Native, Protected)

void AFGGameSession::IntroSequenceUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameSession.IntroSequenceUpdated");

	AFGGameSession_IntroSequenceUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SetIsSpaceElevatorBuilt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsSpaceElevatorBuilt           (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SetIsSpaceElevatorBuilt(bool* IsSpaceElevatorBuilt)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SetIsSpaceElevatorBuilt");

	AFGGameState_SetIsSpaceElevatorBuilt_Params params;
	params.IsSpaceElevatorBuilt = IsSpaceElevatorBuilt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SetHasInitalTradingPostLandAnimPlayed
// (Final, Native, Public, BlueprintCallable)

void AFGGameState::SetHasInitalTradingPostLandAnimPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SetHasInitalTradingPostLandAnimPlayed");

	AFGGameState_SetHasInitalTradingPostLandAnimPlayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SetCheatNoPower
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          NoPower                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SetCheatNoPower(bool* NoPower)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SetCheatNoPower");

	AFGGameState_SetCheatNoPower_Params params;
	params.NoPower = NoPower;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SetCheatNoCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          NoCost                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SetCheatNoCost(bool* NoCost)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SetCheatNoCost");

	AFGGameState_SetCheatNoCost_Params params;
	params.NoCost = NoCost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SetAndReplicateBuildingColorInSlot
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// unsigned char*                 Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor*                 pColor                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor*                 sColor                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SetAndReplicateBuildingColorInSlot(unsigned char* Slot, struct FColor* pColor, struct FColor* sColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SetAndReplicateBuildingColorInSlot");

	AFGGameState_SetAndReplicateBuildingColorInSlot_Params params;
	params.Slot = Slot;
	params.pColor = pColor;
	params.sColor = sColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SendMessageToPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inMessage                      (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      Controller                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SendMessageToPlayer(class UClass** inMessage, class APlayerController** Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SendMessageToPlayer");

	AFGGameState_SendMessageToPlayer_Params params;
	params.inMessage = inMessage;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.SendMessageToAllPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inMessage                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::SendMessageToAllPlayers(class UClass** inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.SendMessageToAllPlayers");

	AFGGameState_SendMessageToAllPlayers_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.OnRep_PlannedRestartTime
// (Final, Native, Private)

void AFGGameState::OnRep_PlannedRestartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.OnRep_PlannedRestartTime");

	AFGGameState_OnRep_PlannedRestartTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.OnRep_MapAreaVisited
// (Final, Native, Public)

void AFGGameState::OnRep_MapAreaVisited()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.OnRep_MapAreaVisited");

	AFGGameState_OnRep_MapAreaVisited_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.OnRep_BuildingColorSlot
// (Final, Native, Public)

void AFGGameState::OnRep_BuildingColorSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.OnRep_BuildingColorSlot");

	AFGGameState_OnRep_BuildingColorSlot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.NotifyPlayerAdded
// (Final, Native, Public)
// Parameters:
// class AFGCharacterPlayer**     inPlayer                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGGameState::NotifyPlayerAdded(class AFGCharacterPlayer** inPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.NotifyPlayerAdded");

	AFGGameState_NotifyPlayerAdded_Params params;
	params.inPlayer = inPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameState.IsTradingPostBuilt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::IsTradingPostBuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.IsTradingPostBuilt");

	AFGGameState_IsTradingPostBuilt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.IsSpaceElevatorBuilt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::IsSpaceElevatorBuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.IsSpaceElevatorBuilt");

	AFGGameState_IsSpaceElevatorBuilt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.IsMapAreaVisisted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inArea                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::IsMapAreaVisisted(class UClass** inArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.IsMapAreaVisisted");

	AFGGameState_IsMapAreaVisisted_Params params;
	params.inArea = inArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.IsItemEverPickedUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::IsItemEverPickedUp(class UClass** ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.IsItemEverPickedUp");

	AFGGameState_IsItemEverPickedUp_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.HasInitalTradingPostLandAnimPlayed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::HasInitalTradingPostLandAnimPlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.HasInitalTradingPostLandAnimPlayed");

	AFGGameState_HasInitalTradingPostLandAnimPlayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetVisitedMapAreas
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UClass*>          out_VisitedAreas               (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGGameState::GetVisitedMapAreas(TArray<class UClass*>* out_VisitedAreas)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetVisitedMapAreas");

	AFGGameState_GetVisitedMapAreas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_VisitedAreas != nullptr)
		*out_VisitedAreas = params.out_VisitedAreas;
}


// Function FactoryGame.FGGameState.GetTutorialIntroManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGTutorialIntroManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTutorialIntroManager* AFGGameState::GetTutorialIntroManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetTutorialIntroManager");

	AFGGameState_GetTutorialIntroManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetTotalPlayDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGGameState::GetTotalPlayDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetTotalPlayDuration");

	AFGGameState_GetTotalPlayDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetSessionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGGameState::GetSessionName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetSessionName");

	AFGGameState_GetSessionName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetSchematicManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGSchematicManager*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGSchematicManager* AFGGameState::GetSchematicManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetSchematicManager");

	AFGGameState_GetSchematicManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetResearchManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGResearchManager*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResearchManager* AFGGameState::GetResearchManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetResearchManager");

	AFGGameState_GetResearchManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetGamePhaseManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGGamePhaseManager*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGGamePhaseManager* AFGGameState::GetGamePhaseManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetGamePhaseManager");

	AFGGameState_GetGamePhaseManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetCheatNoPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::GetCheatNoPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetCheatNoPower");

	AFGGameState_GetCheatNoPower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetCheatNoCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGGameState::GetCheatNoCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetCheatNoCost");

	AFGGameState_GetCheatNoCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameState.GetActorRepresentationManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGActorRepresentationManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGActorRepresentationManager* AFGGameState::GetActorRepresentationManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameState.GetActorRepresentationManager");

	AFGGameState_GetActorRepresentationManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.StopSubtitle
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::StopSubtitle(class AActor** Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.StopSubtitle");

	UFGGameUI_StopSubtitle_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.ShowDirectionalSubtitle
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FText*                  Subtitle                       (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor**                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bUseDuration                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::ShowDirectionalSubtitle(struct FText* Subtitle, class AActor** Instigator, float* Duration, bool* bUseDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.ShowDirectionalSubtitle");

	UFGGameUI_ShowDirectionalSubtitle_Params params;
	params.Subtitle = Subtitle;
	params.Instigator = Instigator;
	params.Duration = Duration;
	params.bUseDuration = bUseDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.SetWindowWantsInventoryAddon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          doWantAddon                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::SetWindowWantsInventoryAddon(bool* doWantAddon)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.SetWindowWantsInventoryAddon");

	UFGGameUI_SetWindowWantsInventoryAddon_Params params;
	params.doWantAddon = doWantAddon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.SetShowInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          doShow                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::SetShowInventory(bool* doShow)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.SetShowInventory");

	UFGGameUI_SetShowInventory_Params params;
	params.doShow = doShow;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.SetCurrentAudioMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGAudioMessage**        newMessage                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGGameUI::SetCurrentAudioMessage(class UFGAudioMessage** newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.SetCurrentAudioMessage");

	UFGGameUI_SetCurrentAudioMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.ResumeGame
// (Final, Native, Public, BlueprintCallable)

void UFGGameUI::ResumeGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.ResumeGame");

	UFGGameUI_ResumeGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.RemovePawnHUD
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGGameUI::RemovePawnHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.RemovePawnHUD");

	UFGGameUI_RemovePawnHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.RemoveInteractWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGInteractWidget**      WidgetToRemove                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGGameUI::RemoveInteractWidget(class UFGInteractWidget** WidgetToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.RemoveInteractWidget");

	UFGGameUI_RemoveInteractWidget_Params params;
	params.WidgetToRemove = WidgetToRemove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.RemoveAudioMessage
// (Native, Event, Public, BlueprintEvent)

void UFGGameUI::RemoveAudioMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.RemoveAudioMessage");

	UFGGameUI_RemoveAudioMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.ReceivedMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// class UClass**                 inMessage                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::ReceivedMessage(class UClass** inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.ReceivedMessage");

	UFGGameUI_ReceivedMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.PushWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFGInteractWidget**      Widget                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGGameUI::PushWidget(class UFGInteractWidget** Widget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.PushWidget");

	UFGGameUI_PushWidget_Params params;
	params.Widget = Widget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.PopWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFGInteractWidget**      WidgetToRemove                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUI::PopWidget(class UFGInteractWidget** WidgetToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.PopWidget");

	UFGGameUI_PopWidget_Params params;
	params.WidgetToRemove = WidgetToRemove;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.PopAllWidgets
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGGameUI::PopAllWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.PopAllWidgets");

	UFGGameUI_PopAllWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.PlayAudioMessage
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass**                 MessageClass                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::PlayAudioMessage(class UClass** MessageClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.PlayAudioMessage");

	UFGGameUI_PlayAudioMessage_Params params;
	params.MessageClass = MessageClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.OnResumeGame
// (Event, Public, BlueprintEvent)

void UFGGameUI::OnResumeGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.OnResumeGame");

	UFGGameUI_OnResumeGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.OnReceiveRadiationStop
// (Event, Public, BlueprintEvent)

void UFGGameUI::OnReceiveRadiationStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.OnReceiveRadiationStop");

	UFGGameUI_OnReceiveRadiationStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.OnReceiveRadiationStart
// (Event, Public, BlueprintEvent)

void UFGGameUI::OnReceiveRadiationStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.OnReceiveRadiationStart");

	UFGGameUI_OnReceiveRadiationStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.OnRadiationIntensityUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// float*                         radiationIntensity             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         radiationImmunity              (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::OnRadiationIntensityUpdated(float* radiationIntensity, float* radiationImmunity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.OnRadiationIntensityUpdated");

	UFGGameUI_OnRadiationIntensityUpdated_Params params;
	params.radiationIntensity = radiationIntensity;
	params.radiationImmunity = radiationImmunity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.HandlePendingMessages
// (Native, Event, Public, BlueprintEvent)

void UFGGameUI::HandlePendingMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.HandlePendingMessages");

	UFGGameUI_HandlePendingMessages_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.HandleFocusLost
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGGameUI::HandleFocusLost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.HandleFocusLost");

	UFGGameUI_HandleFocusLost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.GetWindowWantsInventoryAddon
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUI::GetWindowWantsInventoryAddon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.GetWindowWantsInventoryAddon");

	UFGGameUI_GetWindowWantsInventoryAddon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.GetShowInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUI::GetShowInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.GetShowInventory");

	UFGGameUI_GetShowInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.GetPendingMessages
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGGameUI::GetPendingMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.GetPendingMessages");

	UFGGameUI_GetPendingMessages_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.GetInteractWidgetStack
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFGInteractWidget*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UFGInteractWidget*> UFGGameUI::GetInteractWidgetStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.GetInteractWidgetStack");

	UFGGameUI_GetInteractWidgetStack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.GetCurrentAudioMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGAudioMessage*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGAudioMessage* UFGGameUI::GetCurrentAudioMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.GetCurrentAudioMessage");

	UFGGameUI_GetCurrentAudioMessage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.FindWidgetByClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInteractWidget*       ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInteractWidget* UFGGameUI::FindWidgetByClass(class UClass** WidgetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.FindWidgetByClass");

	UFGGameUI_FindWidgetByClass_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.ClearHintOnTutorialStepCompleted
// (Event, Public, BlueprintEvent)

void UFGGameUI::ClearHintOnTutorialStepCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.ClearHintOnTutorialStepCompleted");

	UFGGameUI_ClearHintOnTutorialStepCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.CanReceiveMessage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UClass**                 inMessage                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUI::CanReceiveMessage(class UClass** inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.CanReceiveMessage");

	UFGGameUI_CanReceiveMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUI.CancelPressed
// (Final, Native, Public, BlueprintCallable)

void UFGGameUI::CancelPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.CancelPressed");

	UFGGameUI_CancelPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.AddPendingMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 newMessage                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUI::AddPendingMessage(class UClass** newMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.AddPendingMessage");

	UFGGameUI_AddPendingMessage_Params params;
	params.newMessage = newMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.AddPawnHUD
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget**            newContent                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGGameUI::AddPawnHUD(class UUserWidget** newContent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.AddPawnHUD");

	UFGGameUI_AddPawnHUD_Params params;
	params.newContent = newContent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.AddIntroTutorialInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FTutorialHintData*      TutorialHintData               (Parm)

void UFGGameUI::AddIntroTutorialInfo(struct FTutorialHintData* TutorialHintData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.AddIntroTutorialInfo");

	UFGGameUI_AddIntroTutorialInfo_Params params;
	params.TutorialHintData = TutorialHintData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.AddInteractWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFGInteractWidget**      widgetToAdd                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGGameUI::AddInteractWidget(class UFGInteractWidget** widgetToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.AddInteractWidget");

	UFGGameUI_AddInteractWidget_Params params;
	params.widgetToAdd = widgetToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUI.AddCheatWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPopupData*             PopupData                      (Parm)
// class UFGPopupWidget*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPopupWidget* UFGGameUI::AddCheatWidget(struct FPopupData* PopupData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUI.AddCheatWidget");

	UFGGameUI_AddCheatWidget_Params params;
	params.PopupData = PopupData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.UpdatePostProcessSettings
// (Final, Native, Public, BlueprintCallable)

void UFGGameUserSettings::UpdatePostProcessSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.UpdatePostProcessSettings");

	UFGGameUserSettings_UpdatePostProcessSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.UnsubscribeToDynamicOptionUpdate
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class FString*                 cvar                           (Parm, ZeroConstructor)
// struct FScriptDelegate*        optionUpdatedDelegate          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGGameUserSettings::UnsubscribeToDynamicOptionUpdate(class FString* cvar, struct FScriptDelegate* optionUpdatedDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.UnsubscribeToDynamicOptionUpdate");

	UFGGameUserSettings_UnsubscribeToDynamicOptionUpdate_Params params;
	params.cvar = cvar;
	params.optionUpdatedDelegate = optionUpdatedDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.UnsubscribeToAllDynamicOptionUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject**                boundObject                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::UnsubscribeToAllDynamicOptionUpdate(class UObject** boundObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.UnsubscribeToAllDynamicOptionUpdate");

	UFGGameUserSettings_UnsubscribeToAllDynamicOptionUpdate_Params params;
	params.boundObject = boundObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SubscribeToDynamicOptionUpdate
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class FString*                 cvar                           (Parm, ZeroConstructor)
// struct FScriptDelegate*        optionUpdatedDelegate          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGGameUserSettings::SubscribeToDynamicOptionUpdate(class FString* cvar, struct FScriptDelegate* optionUpdatedDelegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SubscribeToDynamicOptionUpdate");

	UFGGameUserSettings_SubscribeToDynamicOptionUpdate_Params params;
	params.cvar = cvar;
	params.optionUpdatedDelegate = optionUpdatedDelegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetShowBreakNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetShowBreakNotification(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetShowBreakNotification");

	UFGGameUserSettings_SetShowBreakNotification_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetNeworkQuality
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           newNetworkQuality              (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetNeworkQuality(int* newNetworkQuality)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetNeworkQuality");

	UFGGameUserSettings_SetNeworkQuality_Params params;
	params.newNetworkQuality = newNetworkQuality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetMotionBlurEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetMotionBlurEnabled(bool* enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetMotionBlurEnabled");

	UFGGameUserSettings_SetMotionBlurEnabled_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetInvertedLook
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          newInvertLook                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetInvertedLook(bool* newInvertLook)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetInvertedLook");

	UFGGameUserSettings_SetInvertedLook_Params params;
	params.newInvertLook = newInvertLook;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetIntOptionValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString*                 cvar                           (Parm, ZeroConstructor)
// int*                           Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          UpdateInstantly                (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          RequireRestart                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetIntOptionValue(class FString* cvar, int* Value, bool* UpdateInstantly, bool* RequireRestart)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetIntOptionValue");

	UFGGameUserSettings_SetIntOptionValue_Params params;
	params.cvar = cvar;
	params.Value = Value;
	params.UpdateInstantly = UpdateInstantly;
	params.RequireRestart = RequireRestart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetHZBOEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetHZBOEnabled(bool* enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetHZBOEnabled");

	UFGGameUserSettings_SetHZBOEnabled_Params params;
	params.enable = enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetHoldToSprint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          newHoldToSprint                (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetHoldToSprint(bool* newHoldToSprint)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetHoldToSprint");

	UFGGameUserSettings_SetHoldToSprint_Params params;
	params.newHoldToSprint = newHoldToSprint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetHeadBobScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newHeadBobScale                (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetHeadBobScale(float* newHeadBobScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetHeadBobScale");

	UFGGameUserSettings_SetHeadBobScale_Params params;
	params.newHeadBobScale = newHeadBobScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetFOV
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           NewFOV                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetFOV(int* NewFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetFOV");

	UFGGameUserSettings_SetFOV_Params params;
	params.NewFOV = NewFOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetFloatOptionValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString*                 cvar                           (Parm, ZeroConstructor)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          UpdateInstantly                (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          RequireRestart                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetFloatOptionValue(class FString* cvar, float* Value, bool* UpdateInstantly, bool* RequireRestart)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetFloatOptionValue");

	UFGGameUserSettings_SetFloatOptionValue_Params params;
	params.cvar = cvar;
	params.Value = Value;
	params.UpdateInstantly = UpdateInstantly;
	params.RequireRestart = RequireRestart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetBoolOptionValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString*                 cvar                           (Parm, ZeroConstructor)
// bool*                          Value                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          UpdateInstantly                (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          RequireRestart                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetBoolOptionValue(class FString* cvar, bool* Value, bool* UpdateInstantly, bool* RequireRestart)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetBoolOptionValue");

	UFGGameUserSettings_SetBoolOptionValue_Params params;
	params.cvar = cvar;
	params.Value = Value;
	params.UpdateInstantly = UpdateInstantly;
	params.RequireRestart = RequireRestart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetAutoSortInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          shouldAutoSort                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetAutoSortInventory(bool* shouldAutoSort)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetAutoSortInventory");

	UFGGameUserSettings_SetAutoSortInventory_Params params;
	params.shouldAutoSort = shouldAutoSort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetAutosaveInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           newInterval                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetAutosaveInterval(int* newInterval)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetAutosaveInterval");

	UFGGameUserSettings_SetAutosaveInterval_Params params;
	params.newInterval = newInterval;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetAudioVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString*                 Name                           (Parm, ZeroConstructor)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetAudioVolume(class FString* Name, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetAudioVolume");

	UFGGameUserSettings_SetAudioVolume_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetAudioToDefaults
// (Native, Public, BlueprintCallable)

void UFGGameUserSettings::SetAudioToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetAudioToDefaults");

	UFGGameUserSettings_SetAudioToDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetArachnophobiaMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          newArachnophobiaMode           (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetArachnophobiaMode(bool* newArachnophobiaMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetArachnophobiaMode");

	UFGGameUserSettings_SetArachnophobiaMode_Params params;
	params.newArachnophobiaMode = newArachnophobiaMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.SetAnalyticsDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsDisabled                     (Parm, ZeroConstructor, IsPlainOldData)
// class UAnalyticsService**      AnalyticsService               (Parm, ZeroConstructor, IsPlainOldData)

void UFGGameUserSettings::SetAnalyticsDisabled(bool* IsDisabled, class UAnalyticsService** AnalyticsService)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.SetAnalyticsDisabled");

	UFGGameUserSettings_SetAnalyticsDisabled_Params params;
	params.IsDisabled = IsDisabled;
	params.AnalyticsService = AnalyticsService;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.ResetAudioToCurrentSettings
// (Native, Public, BlueprintCallable)

void UFGGameUserSettings::ResetAudioToCurrentSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.ResetAudioToCurrentSettings");

	UFGGameUserSettings_ResetAudioToCurrentSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.IsUsingCustomQualitySetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                 SettingName                    (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::IsUsingCustomQualitySetting(class FString* SettingName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.IsUsingCustomQualitySetting");

	UFGGameUserSettings_IsUsingCustomQualitySetting_Params params;
	params.SettingName = SettingName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.IsPostProcessUsingCustomSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::IsPostProcessUsingCustomSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.IsPostProcessUsingCustomSettings");

	UFGGameUserSettings_IsPostProcessUsingCustomSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.IsMotionBlurEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::IsMotionBlurEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.IsMotionBlurEnabled");

	UFGGameUserSettings_IsMotionBlurEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.IsMotionBlurDirty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::IsMotionBlurDirty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.IsMotionBlurDirty");

	UFGGameUserSettings_IsMotionBlurDirty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.IsHZBOEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::IsHZBOEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.IsHZBOEnabled");

	UFGGameUserSettings_IsHZBOEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetShowBreakNotification
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetShowBreakNotification()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetShowBreakNotification");

	UFGGameUserSettings_GetShowBreakNotification_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetRequireRestart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetRequireRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetRequireRestart");

	UFGGameUserSettings_GetRequireRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetNeworkQuality
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGGameUserSettings::GetNeworkQuality()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetNeworkQuality");

	UFGGameUserSettings_GetNeworkQuality_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetKeyMappings
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FFGKeyMapping>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FFGKeyMapping> UFGGameUserSettings::GetKeyMappings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetKeyMappings");

	UFGGameUserSettings_GetKeyMappings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetInvertedLook
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetInvertedLook()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetInvertedLook");

	UFGGameUserSettings_GetInvertedLook_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetIntOptionValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                 cvar                           (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGGameUserSettings::GetIntOptionValue(class FString* cvar)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetIntOptionValue");

	UFGGameUserSettings_GetIntOptionValue_Params params;
	params.cvar = cvar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetHoldToSprint
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetHoldToSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetHoldToSprint");

	UFGGameUserSettings_GetHoldToSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetHeadBobScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGGameUserSettings::GetHeadBobScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetHeadBobScale");

	UFGGameUserSettings_GetHeadBobScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGGameUserSettings::GetFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetFOV");

	UFGGameUserSettings_GetFOV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetFloatOptionValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                 cvar                           (Parm, ZeroConstructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGGameUserSettings::GetFloatOptionValue(class FString* cvar)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetFloatOptionValue");

	UFGGameUserSettings_GetFloatOptionValue_Params params;
	params.cvar = cvar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetFGGameUserSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFGGameUserSettings*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGGameUserSettings* UFGGameUserSettings::STATIC_GetFGGameUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetFGGameUserSettings");

	UFGGameUserSettings_GetFGGameUserSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetDefaultQualitySetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                 SettingName                    (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGGameUserSettings::GetDefaultQualitySetting(class FString* SettingName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetDefaultQualitySetting");

	UFGGameUserSettings_GetDefaultQualitySetting_Params params;
	params.SettingName = SettingName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetBoolOptionValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                 cvar                           (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetBoolOptionValue(class FString* cvar)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetBoolOptionValue");

	UFGGameUserSettings_GetBoolOptionValue_Params params;
	params.cvar = cvar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetAutoSortInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetAutoSortInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetAutoSortInventory");

	UFGGameUserSettings_GetAutoSortInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetAutosaveInterval
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGGameUserSettings::GetAutosaveInterval()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetAutosaveInterval");

	UFGGameUserSettings_GetAutosaveInterval_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetAudioVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                 Name                           (Parm, ZeroConstructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGGameUserSettings::GetAudioVolume(class FString* Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetAudioVolume");

	UFGGameUserSettings_GetAudioVolume_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetArachnophobiaMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetArachnophobiaMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetArachnophobiaMode");

	UFGGameUserSettings_GetArachnophobiaMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.GetAnalyticsDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGGameUserSettings::GetAnalyticsDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.GetAnalyticsDisabled");

	UFGGameUserSettings_GetAnalyticsDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGameUserSettings.ClearRequireRestart
// (Final, Native, Public, BlueprintCallable)

void UFGGameUserSettings::ClearRequireRestart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.ClearRequireRestart");

	UFGGameUserSettings_ClearRequireRestart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGameUserSettings.ApplyRestartRequiredChanges
// (Final, Native, Public, BlueprintCallable)

void UFGGameUserSettings::ApplyRestartRequiredChanges()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGameUserSettings.ApplyRestartRequiredChanges");

	UFGGameUserSettings_ApplyRestartRequiredChanges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGlobalSettings.GetSubsystemClassesCDO
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGSubsystemClasses*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGSubsystemClasses* UFGGlobalSettings::STATIC_GetSubsystemClassesCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetSubsystemClassesCDO");

	UFGGlobalSettings_GetSubsystemClassesCDO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetSignSettingsCDO
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGSignSettings*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGSignSettings* UFGGlobalSettings::STATIC_GetSignSettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetSignSettingsCDO");

	UFGGlobalSettings_GetSignSettingsCDO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetResourceSettingsCDO
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGResourceSettings*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGResourceSettings* UFGGlobalSettings::STATIC_GetResourceSettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetResourceSettingsCDO");

	UFGGlobalSettings_GetResourceSettingsCDO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetHardDriveSettingsCDO
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGHardDriveSettings*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGHardDriveSettings* UFGGlobalSettings::STATIC_GetHardDriveSettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetHardDriveSettingsCDO");

	UFGGlobalSettings_GetHardDriveSettingsCDO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetGlobalSettingsClassCDO
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGGlobalSettings*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGGlobalSettings* UFGGlobalSettings::STATIC_GetGlobalSettingsClassCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetGlobalSettingsClassCDO");

	UFGGlobalSettings_GetGlobalSettingsClassCDO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetFactorySettingsCDO
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGFactorySettings*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGFactorySettings* UFGGlobalSettings::STATIC_GetFactorySettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetFactorySettingsCDO");

	UFGGlobalSettings_GetFactorySettingsCDO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetEnvironmentSettingsCDO
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGEnvironmentSettings*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGEnvironmentSettings* UFGGlobalSettings::STATIC_GetEnvironmentSettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetEnvironmentSettingsCDO");

	UFGGlobalSettings_GetEnvironmentSettingsCDO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGlobalSettings.GetDropPodSettingsCDO
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGDropPodSettings*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGDropPodSettings* UFGGlobalSettings::STATIC_GetDropPodSettingsCDO()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGlobalSettings.GetDropPodSettingsCDO");

	UFGGlobalSettings_GetDropPodSettingsCDO_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGGolfCartDispenser.SpawnGolfCart
// (Event, Public, BlueprintEvent)

void AFGGolfCartDispenser::SpawnGolfCart()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGolfCartDispenser.SpawnGolfCart");

	AFGGolfCartDispenser_SpawnGolfCart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGGolfCartDispenser.Server_PrimaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFGGolfCartDispenser::Server_PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGGolfCartDispenser.Server_PrimaryFire");

	AFGGolfCartDispenser_Server_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHardDriveSettings.GetResearchRewardPackages
// (Final, Native, Static, Public)
// Parameters:
// class UWorld**                 World                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGHardDriveSettings::STATIC_GetResearchRewardPackages(class UWorld** World)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHardDriveSettings.GetResearchRewardPackages");

	UFGHardDriveSettings_GetResearchRewardPackages_Params params;
	params.World = World;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHardDriveSettings.GetHardDriveResearchSchematic
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGHardDriveSettings::STATIC_GetHardDriveResearchSchematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHardDriveSettings.GetHardDriveResearchSchematic");

	UFGHardDriveSettings_GetHardDriveResearchSchematic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHardDriveSettings.GetFallbackReturnItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FItemAmount             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FItemAmount UFGHardDriveSettings::GetFallbackReturnItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHardDriveSettings.GetFallbackReturnItem");

	UFGHardDriveSettings_GetFallbackReturnItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHealthComponent.TakeRadialDamage
// (Native, Public, HasDefaults)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             HitInfo                        (Parm, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::TakeRadialDamage(class AActor** DamagedActor, float* Damage, class UDamageType** DamageType, struct FVector* HitLocation, struct FHitResult* HitInfo, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.TakeRadialDamage");

	UFGHealthComponent_TakeRadialDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.HitLocation = HitLocation;
	params.HitInfo = HitInfo;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.TakePointDamage
// (Native, Public, HasDefaults)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                ShotFromDirection              (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::TakePointDamage(class AActor** DamagedActor, float* Damage, class AController** InstigatedBy, struct FVector* HitLocation, class UPrimitiveComponent** HitComponent, struct FName* BoneName, struct FVector* ShotFromDirection, class UDamageType** DamageType, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.TakePointDamage");

	UFGHealthComponent_TakePointDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.InstigatedBy = InstigatedBy;
	params.HitLocation = HitLocation;
	params.HitComponent = HitComponent;
	params.BoneName = BoneName;
	params.ShotFromDirection = ShotFromDirection;
	params.DamageType = DamageType;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.TakeDamage
// (Native, Public)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::TakeDamage(class AActor** DamagedActor, float* damageAmount, class UDamageType** DamageType, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.TakeDamage");

	UFGHealthComponent_TakeDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.ReviveResetHealth
// (Final, Native, Public, BlueprintCallable)

void UFGHealthComponent::ReviveResetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.ReviveResetHealth");

	UFGHealthComponent_ReviveResetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.ResetHealthFromDeath
// (Final, Native, Public, BlueprintCallable)

void UFGHealthComponent::ResetHealthFromDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.ResetHealthFromDeath");

	UFGHealthComponent_ResetHealthFromDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.ResetHealth
// (Final, Native, Public, BlueprintCallable)

void UFGHealthComponent::ResetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.ResetHealth");

	UFGHealthComponent_ResetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.RemoveAdjustDamageListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptDelegate*        AdjustDamage                   (Parm, ZeroConstructor)

void UFGHealthComponent::RemoveAdjustDamageListener(struct FScriptDelegate* AdjustDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.RemoveAdjustDamageListener");

	UFGHealthComponent_RemoveAdjustDamageListener_Params params;
	params.AdjustDamage = AdjustDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.Kill
// (Final, Native, Public, BlueprintCallable)

void UFGHealthComponent::Kill()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Kill");

	UFGHealthComponent_Kill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.IsDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGHealthComponent::IsDead()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.IsDead");

	UFGHealthComponent_IsDead_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHealthComponent.Heal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         healAmount                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Heal(float* healAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Heal");

	UFGHealthComponent_Heal_Params params;
	params.healAmount = healAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.GetMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGHealthComponent::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.GetMaxHealth");

	UFGHealthComponent_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHealthComponent.GetCurrentHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGHealthComponent::GetCurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.GetCurrentHealth");

	UFGHealthComponent_GetCurrentHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHealthComponent.Client_TakeRadialDamage
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             HitInfo                        (Parm, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Client_TakeRadialDamage(class AActor** DamagedActor, float* Damage, class UDamageType** DamageType, struct FVector* HitLocation, struct FHitResult* HitInfo, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Client_TakeRadialDamage");

	UFGHealthComponent_Client_TakeRadialDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.HitLocation = HitLocation;
	params.HitInfo = HitInfo;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.Client_TakePointDamage
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                ShotFromDirection              (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Client_TakePointDamage(class AActor** DamagedActor, float* Damage, class AController** InstigatedBy, struct FVector* HitLocation, class UPrimitiveComponent** HitComponent, struct FName* BoneName, struct FVector* ShotFromDirection, class UDamageType** DamageType, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Client_TakePointDamage");

	UFGHealthComponent_Client_TakePointDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;
	params.InstigatedBy = InstigatedBy;
	params.HitLocation = HitLocation;
	params.HitComponent = HitComponent;
	params.BoneName = BoneName;
	params.ShotFromDirection = ShotFromDirection;
	params.DamageType = DamageType;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.Client_TakeDamage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         damageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            InstigatedBy                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Client_TakeDamage(class AActor** DamagedActor, float* damageAmount, class UDamageType** DamageType, class AController** InstigatedBy, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Client_TakeDamage");

	UFGHealthComponent_Client_TakeDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.damageAmount = damageAmount;
	params.DamageType = DamageType;
	params.InstigatedBy = InstigatedBy;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.Client_Heal
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Client_Heal(float* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Client_Heal");

	UFGHealthComponent_Client_Heal_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.Client_Died
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AActor**                 DeadActor                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGHealthComponent::Client_Died(class AActor** DeadActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.Client_Died");

	UFGHealthComponent_Client_Died_Params params;
	params.DeadActor = DeadActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHealthComponent.AddAdjustDamageListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FScriptDelegate*        AdjustDamage                   (Parm, ZeroConstructor)

void UFGHealthComponent::AddAdjustDamageListener(struct FScriptDelegate* AdjustDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHealthComponent.AddAdjustDamageListener");

	UFGHealthComponent_AddAdjustDamageListener_Params params;
	params.AdjustDamage = AdjustDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHookshot.RestoreAudioSourceToOriginalLocation
// (Final, Native, Protected, BlueprintCallable)

void AFGHookshot::RestoreAudioSourceToOriginalLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHookshot.RestoreAudioSourceToOriginalLocation");

	AFGHookshot_RestoreAudioSourceToOriginalLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHookshot.OwnerLanded
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult*             Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGHookshot::OwnerLanded(struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHookshot.OwnerLanded");

	AFGHookshot_OwnerLanded_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHookshot.OnWireDetach
// (Event, Public, BlueprintEvent)

void AFGHookshot::OnWireDetach()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHookshot.OnWireDetach");

	AFGHookshot_OnWireDetach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHookshot.OnFire
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// bool*                          attachedToSomething            (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGHookshot::OnFire(bool* attachedToSomething, struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHookshot.OnFire");

	AFGHookshot_OnFire_Params params;
	params.attachedToSomething = attachedToSomething;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHookshot.MoveAudioSourceInFrontOfPlayer
// (Final, Native, Protected, BlueprintCallable)

void AFGHookshot::MoveAudioSourceInFrontOfPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHookshot.MoveAudioSourceInFrontOfPlayer");

	AFGHookshot_MoveAudioSourceInFrontOfPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUDBase.GetBaseUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGBaseUI*               ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGBaseUI* AFGHUDBase::GetBaseUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUDBase.GetBaseUI");

	AFGHUDBase_GetBaseUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.UpdateCrosshairState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::UpdateCrosshairState(class AFGCharacterPlayer** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.UpdateCrosshairState");

	AFGHUD_UpdateCrosshairState_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.UpdateCrosshairColorState
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor*           NewColor                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFGHUD::UpdateCrosshairColorState(struct FLinearColor* NewColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.UpdateCrosshairColorState");

	AFGHUD_UpdateCrosshairColorState_Params params;
	params.NewColor = NewColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.ShowRespawnUI
// (Final, Native, Public, BlueprintCallable)

void AFGHUD::ShowRespawnUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.ShowRespawnUI");

	AFGHUD_ShowRespawnUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetShowCrossHair
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          showCrosshair                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetShowCrossHair(bool* showCrosshair)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetShowCrossHair");

	AFGHUD_SetShowCrossHair_Params params;
	params.showCrosshair = showCrosshair;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetPumpiMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          hideHUD                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetPumpiMode(bool* hideHUD)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetPumpiMode");

	AFGHUD_SetPumpiMode_Params params;
	params.hideHUD = hideHUD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetPreviewView
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FItemView*              View                           (ConstParm, Parm, OutParm, ReferenceParm)

void AFGHUD::SetPreviewView(struct FItemView* View)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetPreviewView");

	AFGHUD_SetPreviewView_Params params;
	params.View = View;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetPreviewDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         previewDistance                (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetPreviewDistance(float* previewDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetPreviewDistance");

	AFGHUD_SetPreviewDistance_Params params;
	params.previewDistance = previewDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetPreviewActorClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 ActorClass                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetPreviewActorClass(class UClass** ActorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetPreviewActorClass");

	AFGHUD_SetPreviewActorClass_Params params;
	params.ActorClass = ActorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetPartialPumpiMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          hideHUD                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetPartialPumpiMode(bool* hideHUD)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetPartialPumpiMode");

	AFGHUD_SetPartialPumpiMode_Params params;
	params.hideHUD = hideHUD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetHUDVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          hudVisibility                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetHUDVisibility(bool* hudVisibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetHUDVisibility");

	AFGHUD_SetHUDVisibility_Params params;
	params.hudVisibility = hudVisibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetForceHideCrossHair
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          forceHide                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetForceHideCrossHair(bool* forceHide)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetForceHideCrossHair");

	AFGHUD_SetForceHideCrossHair_Params params;
	params.forceHide = forceHide;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetCrustomCrosshairTexture
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D**             newTexture                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetCrustomCrosshairTexture(class UTexture2D** newTexture)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetCrustomCrosshairTexture");

	AFGHUD_SetCrustomCrosshairTexture_Params params;
	params.newTexture = newTexture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.SetCrosshairState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECrosshairState*               crosshairState                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::SetCrosshairState(ECrosshairState* crosshairState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.SetCrosshairState");

	AFGHUD_SetCrosshairState_Params params;
	params.crosshairState = crosshairState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.RemoveEquipmentHUD
// (Event, Public, BlueprintEvent)
// Parameters:
// EEquipmentSlot*                Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::RemoveEquipmentHUD(EEquipmentSlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.RemoveEquipmentHUD");

	AFGHUD_RemoveEquipmentHUD_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.OpenInteractUI
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass**                 WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                interactObject                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::OpenInteractUI(class UClass** WidgetClass, class UObject** interactObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.OpenInteractUI");

	AFGHUD_OpenInteractUI_Params params;
	params.WidgetClass = WidgetClass;
	params.interactObject = interactObject;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.GetShowCrosshair
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHUD::GetShowCrosshair()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetShowCrosshair");

	AFGHUD_GetShowCrosshair_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetPumpiMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHUD::GetPumpiMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetPumpiMode");

	AFGHUD_GetPumpiMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetPreviewTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTextureRenderTarget2D*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTextureRenderTarget2D* AFGHUD::GetPreviewTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetPreviewTexture");

	AFGHUD_GetPreviewTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetPawnHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* AFGHUD::GetPawnHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetPawnHUD");

	AFGHUD_GetPawnHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetPartialPumpiMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHUD::GetPartialPumpiMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetPartialPumpiMode");

	AFGHUD_GetPartialPumpiMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetHUDVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGHUD::GetHUDVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetHUDVisibility");

	AFGHUD_GetHUDVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetGameUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGGameUI*               ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGGameUI* AFGHUD::GetGameUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetGameUI");

	AFGHUD_GetGameUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.GetCrosshairState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECrosshairState                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECrosshairState AFGHUD::GetCrosshairState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.GetCrosshairState");

	AFGHUD_GetCrosshairState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGHUD.EndPreviewActor
// (Final, Native, Public, BlueprintCallable)

void AFGHUD::EndPreviewActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.EndPreviewActor");

	AFGHUD_EndPreviewActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.CloseRespawnUI
// (Final, Native, Public, BlueprintCallable)

void AFGHUD::CloseRespawnUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.CloseRespawnUI");

	AFGHUD_CloseRespawnUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.BeginPreviewActor
// (Final, Native, Public, BlueprintCallable)

void AFGHUD::BeginPreviewActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.BeginPreviewActor");

	AFGHUD_BeginPreviewActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.AddPawnHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::AddPawnHUD(class UClass** WidgetClass, class APawn** Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.AddPawnHUD");

	AFGHUD_AddPawnHUD_Params params;
	params.WidgetClass = WidgetClass;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGHUD.AddEquipmentHUD
// (Event, Public, BlueprintEvent)
// Parameters:
// class UClass**                 WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData)
// EEquipmentSlot*                Slot                           (Parm, ZeroConstructor, IsPlainOldData)

void AFGHUD::AddEquipmentHUD(class UClass** WidgetClass, EEquipmentSlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGHUD.AddEquipmentHUD");

	AFGHUD_AddEquipmentHUD_Params params;
	params.WidgetClass = WidgetClass;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInputLibrary.UpdateInputMappings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void UFGInputLibrary::STATIC_UpdateInputMappings(class APlayerController** PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.UpdateInputMappings");

	UFGInputLibrary_UpdateInputMappings_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInputLibrary.RebindKey
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping*          newKeyMapping                  (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::STATIC_RebindKey(class APlayerController** PlayerController, struct FFGKeyMapping* newKeyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.RebindKey");

	UFGInputLibrary_RebindKey_Params params;
	params.PlayerController = PlayerController;
	params.newKeyMapping = newKeyMapping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.NullKeyMappingWithSameKeyCombo
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping*          keyMapping                     (ConstParm, Parm, OutParm, ReferenceParm)

void UFGInputLibrary::STATIC_NullKeyMappingWithSameKeyCombo(class APlayerController** PlayerController, struct FFGKeyMapping* keyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.NullKeyMappingWithSameKeyCombo");

	UFGInputLibrary_NullKeyMappingWithSameKeyCombo_Params params;
	params.PlayerController = PlayerController;
	params.keyMapping = keyMapping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInputLibrary.IsKeyMappingRelevant
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName*                  keyMappingName                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::STATIC_IsKeyMappingRelevant(struct FName* keyMappingName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsKeyMappingRelevant");

	UFGInputLibrary_IsKeyMappingRelevant_Params params;
	params.keyMappingName = keyMappingName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsFGKeyMappingAvailable
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping*          keyMapping                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::STATIC_IsFGKeyMappingAvailable(class APlayerController** PlayerController, struct FFGKeyMapping* keyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsFGKeyMappingAvailable");

	UFGInputLibrary_IsFGKeyMappingAvailable_Params params;
	params.PlayerController = PlayerController;
	params.keyMapping = keyMapping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsAxisMappingUsingSameKeys
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputAxisKeyMapping*   mappingA                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FInputAxisKeyMapping*   mappingB                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::STATIC_IsAxisMappingUsingSameKeys(struct FInputAxisKeyMapping* mappingA, struct FInputAxisKeyMapping* mappingB)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsAxisMappingUsingSameKeys");

	UFGInputLibrary_IsAxisMappingUsingSameKeys_Params params;
	params.mappingA = mappingA;
	params.mappingB = mappingB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsAxisKeyMappingAvailable
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping*          keyMapping                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::STATIC_IsAxisKeyMappingAvailable(class APlayerController** PlayerController, struct FFGKeyMapping* keyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsAxisKeyMappingAvailable");

	UFGInputLibrary_IsAxisKeyMappingAvailable_Params params;
	params.PlayerController = PlayerController;
	params.keyMapping = keyMapping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsActionMappingUsingSameKeys
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputActionKeyMapping* mappingA                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FInputActionKeyMapping* mappingB                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::STATIC_IsActionMappingUsingSameKeys(struct FInputActionKeyMapping* mappingA, struct FInputActionKeyMapping* mappingB)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsActionMappingUsingSameKeys");

	UFGInputLibrary_IsActionMappingUsingSameKeys_Params params;
	params.mappingA = mappingA;
	params.mappingB = mappingB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsActionKeyMappingAvailable
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping*          keyMapping                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::STATIC_IsActionKeyMappingAvailable(class APlayerController** PlayerController, struct FFGKeyMapping* keyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsActionKeyMappingAvailable");

	UFGInputLibrary_IsActionKeyMappingAvailable_Params params;
	params.PlayerController = PlayerController;
	params.keyMapping = keyMapping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.IsActionAndAxisMappingUsingSameKeys
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputActionKeyMapping* actionMapping                  (ConstParm, Parm, OutParm, ReferenceParm)
// struct FInputAxisKeyMapping*   axisMapping                    (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInputLibrary::STATIC_IsActionAndAxisMappingUsingSameKeys(struct FInputActionKeyMapping* actionMapping, struct FInputAxisKeyMapping* axisMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.IsActionAndAxisMappingUsingSameKeys");

	UFGInputLibrary_IsActionAndAxisMappingUsingSameKeys_Params params;
	params.actionMapping = actionMapping;
	params.axisMapping = axisMapping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetOverlappingKeyMapping
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGKeyMapping*          keyMapping                     (ConstParm, Parm, OutParm, ReferenceParm)
// struct FFGKeyMapping           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFGKeyMapping UFGInputLibrary::STATIC_GetOverlappingKeyMapping(class APlayerController** PlayerController, struct FFGKeyMapping* keyMapping)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetOverlappingKeyMapping");

	UFGInputLibrary_GetOverlappingKeyMapping_Params params;
	params.PlayerController = PlayerController;
	params.keyMapping = keyMapping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetKeyNameForAxis
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          positiveAxisScale              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          getGamepadKey                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGInputLibrary::STATIC_GetKeyNameForAxis(class APlayerController** PlayerController, struct FName* AxisName, bool* positiveAxisScale, bool* getGamepadKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetKeyNameForAxis");

	UFGInputLibrary_GetKeyNameForAxis_Params params;
	params.PlayerController = PlayerController;
	params.AxisName = AxisName;
	params.positiveAxisScale = positiveAxisScale;
	params.getGamepadKey = getGamepadKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetKeyNameForAction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          getGamepadKey                  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          abbreviateKeyName              (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGInputLibrary::STATIC_GetKeyNameForAction(class APlayerController** PlayerController, struct FName* ActionName, bool* getGamepadKey, bool* abbreviateKeyName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetKeyNameForAction");

	UFGInputLibrary_GetKeyNameForAction_Params params;
	params.PlayerController = PlayerController;
	params.ActionName = ActionName;
	params.getGamepadKey = getGamepadKey;
	params.abbreviateKeyName = abbreviateKeyName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetKeyMappingForAction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  inAction                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          getGamepadKey                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FInputActionKeyMapping  ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInputActionKeyMapping UFGInputLibrary::STATIC_GetKeyMappingForAction(class APlayerController** PlayerController, struct FName* inAction, bool* getGamepadKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetKeyMappingForAction");

	UFGInputLibrary_GetKeyMappingForAction_Params params;
	params.PlayerController = PlayerController;
	params.inAction = inAction;
	params.getGamepadKey = getGamepadKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetKeyForAxis
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  AxisName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          positiveAxisScale              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          getGamepadKey                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FKey                    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FKey UFGInputLibrary::STATIC_GetKeyForAxis(class APlayerController** PlayerController, struct FName* AxisName, bool* positiveAxisScale, bool* getGamepadKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetKeyForAxis");

	UFGInputLibrary_GetKeyForAxis_Params params;
	params.PlayerController = PlayerController;
	params.AxisName = AxisName;
	params.positiveAxisScale = positiveAxisScale;
	params.getGamepadKey = getGamepadKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.GetAbbreviatedKeyName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey*                   Key                            (Parm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGInputLibrary::STATIC_GetAbbreviatedKeyName(struct FKey* Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.GetAbbreviatedKeyName");

	UFGInputLibrary_GetAbbreviatedKeyName_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.FormatStringWithKeyNames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  textToFormat                   (Parm)
// bool*                          abbreviateKeyNames             (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGInputLibrary::STATIC_FormatStringWithKeyNames(class APlayerController** PlayerController, struct FText* textToFormat, bool* abbreviateKeyNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.FormatStringWithKeyNames");

	UFGInputLibrary_FormatStringWithKeyNames_Params params;
	params.PlayerController = PlayerController;
	params.textToFormat = textToFormat;
	params.abbreviateKeyNames = abbreviateKeyNames;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInputLibrary.CreateFGKeyMappingStruct
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName*                  ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsAxisMapping                  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          positiveAxisScale              (Parm, ZeroConstructor, IsPlainOldData)
// struct FInputEvent*            InputEvent                     (Parm)
// struct FKey*                   keyPressed                     (Parm)
// struct FFGKeyMapping           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFGKeyMapping UFGInputLibrary::STATIC_CreateFGKeyMappingStruct(struct FName* ActionName, bool* IsAxisMapping, bool* positiveAxisScale, struct FInputEvent* InputEvent, struct FKey* keyPressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInputLibrary.CreateFGKeyMappingStruct");

	UFGInputLibrary_CreateFGKeyMappingStruct_Params params;
	params.ActionName = ActionName;
	params.IsAxisMapping = IsAxisMapping;
	params.positiveAxisScale = positiveAxisScale;
	params.InputEvent = InputEvent;
	params.keyPressed = keyPressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractableMarker.SetTrackedActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 trackedActor                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGInteractableMarker::SetTrackedActor(class AActor** trackedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractableMarker.SetTrackedActor");

	AFGInteractableMarker_SetTrackedActor_Params params;
	params.trackedActor = trackedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractableMarker.OnSetActorTracked
// (Event, Public, BlueprintEvent)

void AFGInteractableMarker::OnSetActorTracked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractableMarker.OnSetActorTracked");

	AFGInteractableMarker_OnSetActorTracked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractableMarker.GetTrackedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AFGInteractableMarker::GetTrackedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractableMarker.GetTrackedActor");

	AFGInteractableMarker_GetTrackedActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.UpdateIgnoreMoveInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGInteractWidget::UpdateIgnoreMoveInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.UpdateIgnoreMoveInput");

	UFGInteractWidget_UpdateIgnoreMoveInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.UpdateIgnoreLookInput
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGInteractWidget::UpdateIgnoreLookInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.UpdateIgnoreLookInput");

	UFGInteractWidget_UpdateIgnoreLookInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetupDefaultFocus
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGInteractWidget::SetupDefaultFocus()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetupDefaultFocus");

	UFGInteractWidget_SetupDefaultFocus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetInputMode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGInteractWidget::SetInputMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetInputMode");

	UFGInteractWidget_SetInputMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetDesiredVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EVerticalAlignment>* newAlignment                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGInteractWidget::SetDesiredVerticalAlignment(TEnumAsByte<EVerticalAlignment>* newAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetDesiredVerticalAlignment");

	UFGInteractWidget_SetDesiredVerticalAlignment_Params params;
	params.newAlignment = newAlignment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetDesiredHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EHorizontalAlignment>* newAlignment                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGInteractWidget::SetDesiredHorizontalAlignment(TEnumAsByte<EHorizontalAlignment>* newAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetDesiredHorizontalAlignment");

	UFGInteractWidget_SetDesiredHorizontalAlignment_Params params;
	params.newAlignment = newAlignment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetDesiredAlignmentSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateChildSize*        newSize                        (Parm)

void UFGInteractWidget::SetDesiredAlignmentSize(struct FSlateChildSize* newSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetDesiredAlignmentSize");

	UFGInteractWidget_SetDesiredAlignmentSize_Params params;
	params.newSize = newSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.SetDefaultFocusWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget**                FocusWidget                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGInteractWidget::SetDefaultFocusWidget(class UWidget** FocusWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.SetDefaultFocusWidget");

	UFGInteractWidget_SetDefaultFocusWidget_Params params;
	params.FocusWidget = FocusWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.OnEscapePressed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFGInteractWidget::OnEscapePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.OnEscapePressed");

	UFGInteractWidget_OnEscapePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.OnCustomTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float*                         UpdateTime                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGInteractWidget::OnCustomTick(float* UpdateTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.OnCustomTick");

	UFGInteractWidget_OnCustomTick_Params params;
	params.UpdateTime = UpdateTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.OnConsume
// (Final, Native, Public, BlueprintCallable)

void UFGInteractWidget::OnConsume()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.OnConsume");

	UFGInteractWidget_OnConsume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.Init
// (Native, Event, Public, BlueprintEvent)

void UFGInteractWidget::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.Init");

	UFGInteractWidget_Init_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInteractWidget.GetUseGamepadCursor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInteractWidget::GetUseGamepadCursor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetUseGamepadCursor");

	UFGInteractWidget_GetUseGamepadCursor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetSupportsStacking
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInteractWidget::GetSupportsStacking()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetSupportsStacking");

	UFGInteractWidget_GetSupportsStacking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetDesiredVerticalAlignment
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EVerticalAlignment> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EVerticalAlignment> UFGInteractWidget::GetDesiredVerticalAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetDesiredVerticalAlignment");

	UFGInteractWidget_GetDesiredVerticalAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetDesiredHorizontalAlignment
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EHorizontalAlignment> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EHorizontalAlignment> UFGInteractWidget::GetDesiredHorizontalAlignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetDesiredHorizontalAlignment");

	UFGInteractWidget_GetDesiredHorizontalAlignment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetDesiredAlignmentSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSlateChildSize         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateChildSize UFGInteractWidget::GetDesiredAlignmentSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetDesiredAlignmentSize");

	UFGInteractWidget_GetDesiredAlignmentSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetDefaultFocusWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UFGInteractWidget::GetDefaultFocusWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetDefaultFocusWidget");

	UFGInteractWidget_GetDefaultFocusWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInteractWidget.GetCustomTickRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGInteractWidget::GetCustomTickRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInteractWidget.GetCustomTickRate");

	UFGInteractWidget_GetCustomTickRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.SplitStackAtIdx
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// int*                           numItemsToMove                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::SplitStackAtIdx(int* idx, int* numItemsToMove)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.SplitStackAtIdx");

	UFGInventoryComponent_SplitStackAtIdx_Params params;
	params.idx = idx;
	params.numItemsToMove = numItemsToMove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.SortInventory
// (Final, Native, Public, BlueprintCallable)

void UFGInventoryComponent::SortInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.SortInventory");

	UFGInventoryComponent_SortInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.SetCanBeRearranged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          canBeRearranged                (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::SetCanBeRearranged(bool* canBeRearranged)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.SetCanBeRearranged");

	UFGInventoryComponent_SetCanBeRearranged_Params params;
	params.canBeRearranged = canBeRearranged;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.SetAllowedItemOnIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 allowedItemClass               (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::SetAllowedItemOnIndex(int* idx, class UClass** allowedItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.SetAllowedItemOnIndex");

	UFGInventoryComponent_SetAllowedItemOnIndex_Params params;
	params.idx = idx;
	params.allowedItemClass = allowedItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.Server_SortInventory
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UFGInventoryComponent::Server_SortInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.Server_SortInventory");

	UFGInventoryComponent_Server_SortInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.Resize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           newSize                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::Resize(int* newSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.Resize");

	UFGInventoryComponent_Resize_Params params;
	params.newSize = newSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.RemoveFromIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Num                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::RemoveFromIndex(int* idx, int* Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.RemoveFromIndex");

	UFGInventoryComponent_RemoveFromIndex_Params params;
	params.idx = idx;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.RemoveArbitrarySlotSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::RemoveArbitrarySlotSize(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.RemoveArbitrarySlotSize");

	UFGInventoryComponent_RemoveArbitrarySlotSize_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.RemoveAllFromIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::RemoveAllFromIndex(int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.RemoveAllFromIndex");

	UFGInventoryComponent_RemoveAllFromIndex_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.Remove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Num                            (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::Remove(class UClass** ItemClass, int* Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.Remove");

	UFGInventoryComponent_Remove_Params params;
	params.ItemClass = ItemClass;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.OnRep_InventoryStacks
// (Final, Native, Protected)

void UFGInventoryComponent::OnRep_InventoryStacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.OnRep_InventoryStacks");

	UFGInventoryComponent_OnRep_InventoryStacks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.IsValidIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::IsValidIndex(int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.IsValidIndex");

	UFGInventoryComponent_IsValidIndex_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.IsSomethingOnIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::IsSomethingOnIndex(int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.IsSomethingOnIndex");

	UFGInventoryComponent_IsSomethingOnIndex_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.IsItemAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 Item                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           idx                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::IsItemAllowed(class UClass** Item, int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.IsItemAllowed");

	UFGInventoryComponent_IsItemAllowed_Params params;
	params.Item = Item;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.IsIndexEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::IsIndexEmpty(int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.IsIndexEmpty");

	UFGInventoryComponent_IsIndexEmpty_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.IsEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::IsEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.IsEmpty");

	UFGInventoryComponent_IsEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.HasItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Num                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::HasItems(class UClass** ItemClass, int* Num)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.HasItems");

	UFGInventoryComponent_HasItems_Params params;
	params.ItemClass = ItemClass;
	params.Num = Num;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForStacks
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FInventoryStack>* stacks                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::HasEnoughSpaceForStacks(TArray<struct FInventoryStack>* stacks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForStacks");

	UFGInventoryComponent_HasEnoughSpaceForStacks_Params params;
	params.stacks = stacks;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForStack
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FInventoryStack*        stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::HasEnoughSpaceForStack(struct FInventoryStack* stack)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForStack");

	UFGInventoryComponent_HasEnoughSpaceForStack_Params params;
	params.stack = stack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForItem
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FInventoryItem*         stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::HasEnoughSpaceForItem(struct FInventoryItem* stack)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.HasEnoughSpaceForItem");

	UFGInventoryComponent_HasEnoughSpaceForItem_Params params;
	params.stack = stack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.HasAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::HasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.HasAuthority");

	UFGInventoryComponent_HasAuthority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetStackFromIndex
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryStack         out_stack                      (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::GetStackFromIndex(int* idx, struct FInventoryStack* out_stack)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetStackFromIndex");

	UFGInventoryComponent_GetStackFromIndex_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stack != nullptr)
		*out_stack = params.out_stack;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetSlotSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 itemDesc                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::GetSlotSize(int* Index, class UClass** itemDesc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetSlotSize");

	UFGInventoryComponent_GetSlotSize_Params params;
	params.Index = Index;
	params.itemDesc = itemDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetSizeLinear
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::GetSizeLinear()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetSizeLinear");

	UFGInventoryComponent_GetSizeLinear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetRelevantStackIndexes
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UClass*>*         relevantClasses                (Parm, ZeroConstructor)
// int*                           stackLimit                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<int> UFGInventoryComponent::GetRelevantStackIndexes(TArray<class UClass*>* relevantClasses, int* stackLimit)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetRelevantStackIndexes");

	UFGInventoryComponent_GetRelevantStackIndexes_Params params;
	params.relevantClasses = relevantClasses;
	params.stackLimit = stackLimit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetNumItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::GetNumItems(class UClass** ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetNumItems");

	UFGInventoryComponent_GetNumItems_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetInventoryStacks
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FInventoryStack> out_stacks                     (Parm, OutParm, ZeroConstructor)

void UFGInventoryComponent::GetInventoryStacks(TArray<struct FInventoryStack>* out_stacks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetInventoryStacks");

	UFGInventoryComponent_GetInventoryStacks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stacks != nullptr)
		*out_stacks = params.out_stacks;
}


// Function FactoryGame.FGInventoryComponent.GetFullestStackIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::GetFullestStackIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetFullestStackIndex");

	UFGInventoryComponent_GetFullestStackIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetCanBeRearranged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::GetCanBeRearranged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetCanBeRearranged");

	UFGInventoryComponent_GetCanBeRearranged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.GetAllowedItemOnIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGInventoryComponent::GetAllowedItemOnIndex(int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.GetAllowedItemOnIndex");

	UFGInventoryComponent_GetAllowedItemOnIndex_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.FindEmptyIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::FindEmptyIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.FindEmptyIndex");

	UFGInventoryComponent_FindEmptyIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.Empty
// (Final, Native, Public, BlueprintCallable)

void UFGInventoryComponent::Empty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.Empty");

	UFGInventoryComponent_Empty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.CanSplitStackAtIdx
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponent::CanSplitStackAtIdx(int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.CanSplitStackAtIdx");

	UFGInventoryComponent_CanSplitStackAtIdx_Params params;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.AddStackToIndex
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryStack*        stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool*                          allowPartial                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::AddStackToIndex(int* idx, struct FInventoryStack* stack, bool* allowPartial)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.AddStackToIndex");

	UFGInventoryComponent_AddStackToIndex_Params params;
	params.idx = idx;
	params.stack = stack;
	params.allowPartial = allowPartial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.AddStacks
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FInventoryStack>* stacks                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGInventoryComponent::AddStacks(TArray<struct FInventoryStack>* stacks)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.AddStacks");

	UFGInventoryComponent_AddStacks_Params params;
	params.stacks = stacks;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponent.AddStack
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FInventoryStack*        stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool*                          allowPartialAdd                (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponent::AddStack(struct FInventoryStack* stack, bool* allowPartialAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.AddStack");

	UFGInventoryComponent_AddStack_Params params;
	params.stack = stack;
	params.allowPartialAdd = allowPartialAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponent.AddArbitrarySlotSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           arbitrarySlotSize              (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryComponent::AddArbitrarySlotSize(int* Index, int* arbitrarySlotSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponent.AddArbitrarySlotSize");

	UFGInventoryComponent_AddArbitrarySlotSize_Params params;
	params.Index = Index;
	params.arbitrarySlotSize = arbitrarySlotSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInventoryComponentEquipment.GetEquipmentSlotEnum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EEquipmentSlot                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EEquipmentSlot UFGInventoryComponentEquipment::GetEquipmentSlotEnum()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponentEquipment.GetEquipmentSlotEnum");

	UFGInventoryComponentEquipment_GetEquipmentSlotEnum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponentEquipment.GetActiveIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryComponentEquipment::GetActiveIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponentEquipment.GetActiveIndex");

	UFGInventoryComponentEquipment_GetActiveIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryComponentTrash.IsValidItem
// (Final, Native, Private, Const)
// Parameters:
// class UClass**                 Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryComponentTrash::IsValidItem(class UClass** Resource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryComponentTrash.IsValidItem");

	UFGInventoryComponentTrash_IsValidItem_Params params;
	params.Resource = Resource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.RemoveAllItemsNotOfResourceForm
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FInventoryStack> Items                          (Parm, OutParm, ZeroConstructor, ReferenceParm)
// EResourceForm*                 validForm                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGInventoryLibrary::STATIC_RemoveAllItemsNotOfResourceForm(EResourceForm* validForm, TArray<struct FInventoryStack>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.RemoveAllItemsNotOfResourceForm");

	UFGInventoryLibrary_RemoveAllItemsNotOfResourceForm_Params params;
	params.validForm = validForm;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;
}


// Function FactoryGame.FGInventoryLibrary.MoveInventoryItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFGInventoryComponent**  SourceComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           sourceIdx                      (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponent**  destinationComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           destinationIdx                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryLibrary::STATIC_MoveInventoryItem(class UFGInventoryComponent** SourceComponent, int* sourceIdx, class UFGInventoryComponent** destinationComponent, int* destinationIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.MoveInventoryItem");

	UFGInventoryLibrary_MoveInventoryItem_Params params;
	params.SourceComponent = SourceComponent;
	params.sourceIdx = sourceIdx;
	params.destinationComponent = destinationComponent;
	params.destinationIdx = destinationIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.MergeInventoryItem
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FInventoryStack> Items                          (Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FInventoryStack*        Item                           (ConstParm, Parm, OutParm, ReferenceParm)

void UFGInventoryLibrary::STATIC_MergeInventoryItem(struct FInventoryStack* Item, TArray<struct FInventoryStack>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.MergeInventoryItem");

	UFGInventoryLibrary_MergeInventoryItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;
}


// Function FactoryGame.FGInventoryLibrary.MakeInventoryStack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           NumItems                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryItem*         Item                           (Parm)
// struct FInventoryStack         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInventoryStack UFGInventoryLibrary::STATIC_MakeInventoryStack(int* NumItems, struct FInventoryItem* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.MakeInventoryStack");

	UFGInventoryLibrary_MakeInventoryStack_Params params;
	params.NumItems = NumItems;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.MakeInventoryItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryItem          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInventoryItem UFGInventoryLibrary::STATIC_MakeInventoryItem(class UClass** ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.MakeInventoryItem");

	UFGInventoryLibrary_MakeInventoryItem_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.IsValidItem
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInventoryItem*         Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryLibrary::STATIC_IsValidItem(struct FInventoryItem* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.IsValidItem");

	UFGInventoryLibrary_IsValidItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.HasState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInventoryItem*         Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryLibrary::STATIC_HasState(struct FInventoryItem* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.HasState");

	UFGInventoryLibrary_HasState_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.HasItems
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInventoryStack*        stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryLibrary::STATIC_HasItems(struct FInventoryStack* stack)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.HasItems");

	UFGInventoryLibrary_HasItems_Params params;
	params.stack = stack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.GrabAllItemsFromInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFGInventoryComponent**  SourceComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFGInventoryComponent**  destinationComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass**                 onlyGrabOfDesc                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGInventoryLibrary::STATIC_GrabAllItemsFromInventory(class UFGInventoryComponent** SourceComponent, class UFGInventoryComponent** destinationComponent, class UClass** onlyGrabOfDesc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.GrabAllItemsFromInventory");

	UFGInventoryLibrary_GrabAllItemsFromInventory_Params params;
	params.SourceComponent = SourceComponent;
	params.destinationComponent = destinationComponent;
	params.onlyGrabOfDesc = onlyGrabOfDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.GetUIDataPartialForInventoryStack
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInventoryStack*        InventoryStack                 (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass**                 buildableFactory               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ItemClass                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          numItemsConverted              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          maxItemsConverted              (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFGInventoryLibrary::STATIC_GetUIDataPartialForInventoryStack(struct FInventoryStack* InventoryStack, class UClass** buildableFactory, class UClass** ItemClass, float* numItemsConverted, float* maxItemsConverted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.GetUIDataPartialForInventoryStack");

	UFGInventoryLibrary_GetUIDataPartialForInventoryStack_Params params;
	params.InventoryStack = InventoryStack;
	params.buildableFactory = buildableFactory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ItemClass != nullptr)
		*ItemClass = params.ItemClass;
	if (numItemsConverted != nullptr)
		*numItemsConverted = params.numItemsConverted;
	if (maxItemsConverted != nullptr)
		*maxItemsConverted = params.maxItemsConverted;
}


// Function FactoryGame.FGInventoryLibrary.GetUIDataFullForInventoryStack
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInventoryStack*        InventoryStack                 (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass**                 buildableFactory               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ItemClass                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          numItemsConverted              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          maxItemsConverted              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FText                   suffix                         (Parm, OutParm)
// EResourceForm                  form                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFGInventoryLibrary::STATIC_GetUIDataFullForInventoryStack(struct FInventoryStack* InventoryStack, class UClass** buildableFactory, class UClass** ItemClass, float* numItemsConverted, float* maxItemsConverted, struct FText* suffix, EResourceForm* form)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.GetUIDataFullForInventoryStack");

	UFGInventoryLibrary_GetUIDataFullForInventoryStack_Params params;
	params.InventoryStack = InventoryStack;
	params.buildableFactory = buildableFactory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ItemClass != nullptr)
		*ItemClass = params.ItemClass;
	if (numItemsConverted != nullptr)
		*numItemsConverted = params.numItemsConverted;
	if (maxItemsConverted != nullptr)
		*maxItemsConverted = params.maxItemsConverted;
	if (suffix != nullptr)
		*suffix = params.suffix;
	if (form != nullptr)
		*form = params.form;
}


// Function FactoryGame.FGInventoryLibrary.GetProductionSuffixFromFormType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EResourceForm*                 form                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGInventoryLibrary::STATIC_GetProductionSuffixFromFormType(EResourceForm* form)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.GetProductionSuffixFromFormType");

	UFGInventoryLibrary_GetProductionSuffixFromFormType_Params params;
	params.form = form;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.GetMinNumSlotsForItems
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FInventoryStack> Items                          (Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGInventoryLibrary::STATIC_GetMinNumSlotsForItems(TArray<struct FInventoryStack>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.GetMinNumSlotsForItems");

	UFGInventoryLibrary_GetMinNumSlotsForItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.GetConversionScalarByForm
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EResourceForm*                 form                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGInventoryLibrary::STATIC_GetConversionScalarByForm(EResourceForm* form)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.GetConversionScalarByForm");

	UFGInventoryLibrary_GetConversionScalarByForm_Params params;
	params.form = form;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.GetAmountConvertedFromItemAmount
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FItemAmount*            ItemAmount                     (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass*                  ItemClass                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          amountConverted                (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFGInventoryLibrary::STATIC_GetAmountConvertedFromItemAmount(struct FItemAmount* ItemAmount, class UClass** ItemClass, float* amountConverted)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.GetAmountConvertedFromItemAmount");

	UFGInventoryLibrary_GetAmountConvertedFromItemAmount_Params params;
	params.ItemAmount = ItemAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ItemClass != nullptr)
		*ItemClass = params.ItemClass;
	if (amountConverted != nullptr)
		*amountConverted = params.amountConverted;
}


// Function FactoryGame.FGInventoryLibrary.GetAmountConvertedByForm
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// EResourceForm*                 form                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGInventoryLibrary::STATIC_GetAmountConvertedByForm(int* amount, EResourceForm* form)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.GetAmountConvertedByForm");

	UFGInventoryLibrary_GetAmountConvertedByForm_Params params;
	params.amount = amount;
	params.form = form;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.CreateInventoryComponentOfClass
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  Name                           (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGInventoryLibrary::STATIC_CreateInventoryComponentOfClass(class AActor** Owner, class UClass** inClass, struct FName* Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.CreateInventoryComponentOfClass");

	UFGInventoryLibrary_CreateInventoryComponentOfClass_Params params;
	params.Owner = Owner;
	params.inClass = inClass;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.CreateInventoryComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  Name                           (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGInventoryLibrary::STATIC_CreateInventoryComponent(class AActor** Owner, struct FName* Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.CreateInventoryComponent");

	UFGInventoryLibrary_CreateInventoryComponent_Params params;
	params.Owner = Owner;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInventoryLibrary.ConsolidateItemsAmount
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FItemAmount>     Items                          (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGInventoryLibrary::STATIC_ConsolidateItemsAmount(TArray<struct FItemAmount>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.ConsolidateItemsAmount");

	UFGInventoryLibrary_ConsolidateItemsAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;
}


// Function FactoryGame.FGInventoryLibrary.ConsolidateInventoryItems
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FInventoryStack> Items                          (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGInventoryLibrary::STATIC_ConsolidateInventoryItems(TArray<struct FInventoryStack>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.ConsolidateInventoryItems");

	UFGInventoryLibrary_ConsolidateInventoryItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;
}


// Function FactoryGame.FGInventoryLibrary.BreakInventoryStack
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInventoryStack*        stack                          (ConstParm, Parm, OutParm, ReferenceParm)
// int                            out_numItems                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FInventoryItem          out_item                       (Parm, OutParm)

void UFGInventoryLibrary::STATIC_BreakInventoryStack(struct FInventoryStack* stack, int* out_numItems, struct FInventoryItem* out_item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.BreakInventoryStack");

	UFGInventoryLibrary_BreakInventoryStack_Params params;
	params.stack = stack;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_numItems != nullptr)
		*out_numItems = params.out_numItems;
	if (out_item != nullptr)
		*out_item = params.out_item;
}


// Function FactoryGame.FGInventoryLibrary.BreakInventoryItem
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInventoryItem*         Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// class UClass*                  out_itemClass                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor*                  out_itemState                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFGInventoryLibrary::STATIC_BreakInventoryItem(struct FInventoryItem* Item, class UClass** out_itemClass, class AActor** out_itemState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInventoryLibrary.BreakInventoryItem");

	UFGInventoryLibrary_BreakInventoryItem_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_itemClass != nullptr)
		*out_itemClass = params.out_itemClass;
	if (out_itemState != nullptr)
		*out_itemState = params.out_itemState;
}


// Function FactoryGame.FGItemCategory.GetCategoryName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGItemCategory::STATIC_GetCategoryName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemCategory.GetCategoryName");

	UFGItemCategory_GetCategoryName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptorNuclearFuel.GetSpentFuelClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGItemDescriptorNuclearFuel::STATIC_GetSpentFuelClass(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptorNuclearFuel.GetSpentFuelClass");

	UFGItemDescriptorNuclearFuel_GetSpentFuelClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemDescriptorNuclearFuel.GetAmountWasteCreated
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGItemDescriptorNuclearFuel::STATIC_GetAmountWasteCreated(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemDescriptorNuclearFuel.GetAmountWasteCreated");

	UFGItemDescriptorNuclearFuel_GetAmountWasteCreated_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickedUpDependency.GetItems
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class UClass*>          out_items                      (Parm, OutParm, ZeroConstructor)

void UFGItemPickedUpDependency::GetItems(TArray<class UClass*>* out_items)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickedUpDependency.GetItems");

	UFGItemPickedUpDependency_GetItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_items != nullptr)
		*out_items = params.out_items;
}


// Function FactoryGame.FGItemPickup.SetNumItems
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// int*                           NumItems                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGItemPickup::SetNumItems(int* NumItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.SetNumItems");

	AFGItemPickup_SetNumItems_Params params;
	params.NumItems = NumItems;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup.PlayPickupEffect
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFGItemPickup::PlayPickupEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.PlayPickupEffect");

	AFGItemPickup_PlayPickupEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup.PickUpByCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGItemPickup::PickUpByCharacter(class AFGCharacterPlayer** byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.PickUpByCharacter");

	AFGItemPickup_PickUpByCharacter_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup.PickupByAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGItemPickup::PickupByAmount(int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.PickupByAmount");

	AFGItemPickup_PickupByAmount_Params params;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup.OnRep_PickedUp
// (Final, Native, Private)

void AFGItemPickup::OnRep_PickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.OnRep_PickedUp");

	AFGItemPickup_OnRep_PickedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup.OnPickup
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGItemPickup::OnPickup(class AFGCharacterPlayer** byCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.OnPickup");

	AFGItemPickup_OnPickup_Params params;
	params.byCharacter = byCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup.IsPickedUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGItemPickup::IsPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.IsPickedUp");

	AFGItemPickup_IsPickedUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup.GetPickupItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FInventoryStack         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FInventoryStack AFGItemPickup::GetPickupItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.GetPickupItems");

	AFGItemPickup_GetPickupItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup.GetNumItems
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGItemPickup::GetNumItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.GetNumItems");

	AFGItemPickup_GetNumItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup.GetNormalizedCollectionProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGItemPickup::GetNormalizedCollectionProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup.GetNormalizedCollectionProgress");

	AFGItemPickup_GetNormalizedCollectionProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup_Spawnable.PlaySpawnEffect
// (Event, Public, BlueprintEvent)

void AFGItemPickup_Spawnable::PlaySpawnEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup_Spawnable.PlaySpawnEffect");

	AFGItemPickup_Spawnable_PlaySpawnEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGItemPickup_Spawnable.FindGroundLocationInfrontOfActor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor**                 sourceActor                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         offsetLength                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryStack*        Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 out_location                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FRotator                out_rotation                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AFGItemPickup_Spawnable::STATIC_FindGroundLocationInfrontOfActor(class AActor** sourceActor, float* offsetLength, struct FInventoryStack* Item, struct FVector* out_location, struct FRotator* out_rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup_Spawnable.FindGroundLocationInfrontOfActor");

	AFGItemPickup_Spawnable_FindGroundLocationInfrontOfActor_Params params;
	params.sourceActor = sourceActor;
	params.offsetLength = offsetLength;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_location != nullptr)
		*out_location = params.out_location;
	if (out_rotation != nullptr)
		*out_rotation = params.out_rotation;
}


// Function FactoryGame.FGItemPickup_Spawnable.FindGroundLocationAndRotation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                fromLocation                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector                 out_location                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FRotator                out_rotation                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AFGItemPickup_Spawnable::STATIC_FindGroundLocationAndRotation(class UObject** WorldContext, struct FVector* fromLocation, TArray<class AActor*>* ActorsToIgnore, struct FVector* out_location, struct FRotator* out_rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup_Spawnable.FindGroundLocationAndRotation");

	AFGItemPickup_Spawnable_FindGroundLocationAndRotation_Params params;
	params.WorldContext = WorldContext;
	params.fromLocation = fromLocation;
	params.ActorsToIgnore = ActorsToIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_location != nullptr)
		*out_location = params.out_location;
	if (out_rotation != nullptr)
		*out_rotation = params.out_rotation;
}


// Function FactoryGame.FGItemPickup_Spawnable.CreateItemDropsInCylinder
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FInventoryStack>* Items                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector*                aroundLocation                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         SphereRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class AFGItemPickup_Spawnable*> out_itemDrops                  (Parm, OutParm, ZeroConstructor)
// class UClass**                 itemDropClass                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGItemPickup_Spawnable::STATIC_CreateItemDropsInCylinder(class UObject** WorldContext, TArray<struct FInventoryStack>* Items, struct FVector* aroundLocation, float* SphereRadius, TArray<class AActor*>* ActorsToIgnore, class UClass** itemDropClass, TArray<class AFGItemPickup_Spawnable*>* out_itemDrops)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup_Spawnable.CreateItemDropsInCylinder");

	AFGItemPickup_Spawnable_CreateItemDropsInCylinder_Params params;
	params.WorldContext = WorldContext;
	params.Items = Items;
	params.aroundLocation = aroundLocation;
	params.SphereRadius = SphereRadius;
	params.ActorsToIgnore = ActorsToIgnore;
	params.itemDropClass = itemDropClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_itemDrops != nullptr)
		*out_itemDrops = params.out_itemDrops;
}


// Function FactoryGame.FGItemPickup_Spawnable.CreateItemDrop
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryStack*        Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector*                SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               spawnRotation                  (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 itemDropClass                  (Parm, ZeroConstructor, IsPlainOldData)
// class AFGItemPickup_Spawnable* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGItemPickup_Spawnable* AFGItemPickup_Spawnable::STATIC_CreateItemDrop(class UObject** WorldContext, struct FInventoryStack* Item, struct FVector* SpawnLocation, struct FRotator* spawnRotation, class UClass** itemDropClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup_Spawnable.CreateItemDrop");

	AFGItemPickup_Spawnable_CreateItemDrop_Params params;
	params.WorldContext = WorldContext;
	params.Item = Item;
	params.SpawnLocation = SpawnLocation;
	params.spawnRotation = spawnRotation;
	params.itemDropClass = itemDropClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGItemPickup_Spawnable.AddItemToWorldStackAtLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FInventoryStack*        Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector*                SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               spawnRotation                  (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 itemDropClass                  (Parm, ZeroConstructor, IsPlainOldData)
// class AFGItemPickup_Spawnable* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGItemPickup_Spawnable* AFGItemPickup_Spawnable::STATIC_AddItemToWorldStackAtLocation(class UObject** WorldContext, struct FInventoryStack* Item, struct FVector* SpawnLocation, struct FRotator* spawnRotation, class UClass** itemDropClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGItemPickup_Spawnable.AddItemToWorldStackAtLocation");

	AFGItemPickup_Spawnable_AddItemToWorldStackAtLocation_Params params;
	params.WorldContext = WorldContext;
	params.Item = Item;
	params.SpawnLocation = SpawnLocation;
	params.spawnRotation = spawnRotation;
	params.itemDropClass = itemDropClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJetPack.OnStopThrusting
// (Event, Public, BlueprintEvent)

void AFGJetPack::OnStopThrusting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.OnStopThrusting");

	AFGJetPack_OnStopThrusting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGJetPack.OnStartThrusting
// (Event, Public, BlueprintEvent)

void AFGJetPack::OnStartThrusting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.OnStartThrusting");

	AFGJetPack_OnStartThrusting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGJetPack.GetNewVelocityWhenThrusting
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// float*                         Delta                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AFGJetPack::GetNewVelocityWhenThrusting(float* Delta)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.GetNewVelocityWhenThrusting");

	AFGJetPack_GetNewVelocityWhenThrusting_Params params;
	params.Delta = Delta;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJetPack.GetMaxFuel
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJetPack::GetMaxFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.GetMaxFuel");

	AFGJetPack_GetMaxFuel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJetPack.GetCurrentFuel
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJetPack::GetCurrentFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.GetCurrentFuel");

	AFGJetPack_GetCurrentFuel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJetPack.CanThrust
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGJetPack::CanThrust()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPack.CanThrust");

	AFGJetPack_CanThrust_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJetPackAttachment.OnStopThrusting
// (Event, Public, BlueprintEvent)

void AFGJetPackAttachment::OnStopThrusting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPackAttachment.OnStopThrusting");

	AFGJetPackAttachment_OnStopThrusting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGJetPackAttachment.OnStartThrusting
// (Event, Public, BlueprintEvent)

void AFGJetPackAttachment::OnStartThrusting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPackAttachment.OnStartThrusting");

	AFGJetPackAttachment_OnStartThrusting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGJetPackAttachment.OnRep_IsThrusting
// (Final, Native, Public)

void AFGJetPackAttachment::OnRep_IsThrusting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJetPackAttachment.OnRep_IsThrusting");

	AFGJetPackAttachment_OnRep_IsThrusting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGJumpingStilts.GetNormalizedFallSpeedUntilDamaged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJumpingStilts::GetNormalizedFallSpeedUntilDamaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJumpingStilts.GetNormalizedFallSpeedUntilDamaged");

	AFGJumpingStilts_GetNormalizedFallSpeedUntilDamaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJumpingStilts.GetMaxFallSpeedBeforeDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJumpingStilts::GetMaxFallSpeedBeforeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJumpingStilts.GetMaxFallSpeedBeforeDamage");

	AFGJumpingStilts_GetMaxFallSpeedBeforeDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJumpingStilts.GetCurrentFallSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJumpingStilts::GetCurrentFallSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJumpingStilts.GetCurrentFallSpeed");

	AFGJumpingStilts_GetCurrentFallSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJumpingStilts.GetAdjustedZJumpSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         defaultJumpZ                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJumpingStilts::GetAdjustedZJumpSpeed(float* defaultJumpZ)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJumpingStilts.GetAdjustedZJumpSpeed");

	AFGJumpingStilts_GetAdjustedZJumpSpeed_Params params;
	params.defaultJumpZ = defaultJumpZ;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGJumpingStilts.GetAdjustedMaxSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         defaultMaxSpeed                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGJumpingStilts::GetAdjustedMaxSpeed(float* defaultMaxSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGJumpingStilts.GetAdjustedMaxSpeed");

	AFGJumpingStilts_GetAdjustedMaxSpeed_Params params;
	params.defaultMaxSpeed = defaultMaxSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLadderComponent.EndPotentialClimberOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGLadderComponent::EndPotentialClimberOverlap(class UPrimitiveComponent** OverlappedComp, class AActor** Other, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLadderComponent.EndPotentialClimberOverlap");

	UFGLadderComponent_EndPotentialClimberOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLadderComponent.BeginPotentialClimberOverlap
// (Final, Native, Private, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          isFromSweep                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFGLadderComponent::BeginPotentialClimberOverlap(class UPrimitiveComponent** OverlappedComp, class AActor** Other, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* isFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLadderComponent.BeginPotentialClimberOverlap");

	UFGLadderComponent_BeginPotentialClimberOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.isFromSweep = isFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGListView.Refresh
// (Final, Native, Public, BlueprintCallable)

void UFGListView::Refresh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGListView.Refresh");

	UFGListView_Refresh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction FactoryGame.FGListView.OnGenerateRow__DelegateSignature
// (Public, Delegate)
// Parameters:
// int*                           Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UWidget*                 ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWidget* UFGListView::OnGenerateRow__DelegateSignature(int* Item)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FactoryGame.FGListView.OnGenerateRow__DelegateSignature");

	UFGListView_OnGenerateRow__DelegateSignature_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// DelegateFunction FactoryGame.FGListView.GetNumRows__DelegateSignature
// (Public, Delegate)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGListView::GetNumRows__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FactoryGame.FGListView.GetNumRows__DelegateSignature");

	UFGListView_GetNumRows__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocalPlayer.UpdatePresence
// (Final, Native, Public)

void UFGLocalPlayer::UpdatePresence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.UpdatePresence");

	UFGLocalPlayer_UpdatePresence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocalPlayer.OpenMap_WaitForProductUserId
// (Final, Native, Protected)

void UFGLocalPlayer::OpenMap_WaitForProductUserId()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.OpenMap_WaitForProductUserId");

	UFGLocalPlayer_OpenMap_WaitForProductUserId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocalPlayer.OpenMap_WaitForPresence
// (Final, Native, Protected)

void UFGLocalPlayer::OpenMap_WaitForPresence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.OpenMap_WaitForPresence");

	UFGLocalPlayer_OpenMap_WaitForPresence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocalPlayer.OnPresenceFailedToUpdate_OpenMap
// (Final, Native, Protected)
// Parameters:
// bool*                          ConfirmClicked                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocalPlayer::OnPresenceFailedToUpdate_OpenMap(bool* ConfirmClicked)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.OnPresenceFailedToUpdate_OpenMap");

	UFGLocalPlayer_OnPresenceFailedToUpdate_OpenMap_Params params;
	params.ConfirmClicked = ConfirmClicked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocalPlayer.OnLoginFailed_OpenMap
// (Final, Native, Protected)
// Parameters:
// bool*                          ConfirmClicked                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocalPlayer::OnLoginFailed_OpenMap(bool* ConfirmClicked)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.OnLoginFailed_OpenMap");

	UFGLocalPlayer_OnLoginFailed_OpenMap_Params params;
	params.ConfirmClicked = ConfirmClicked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocalPlayer.GetUsername
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGLocalPlayer::GetUsername()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.GetUsername");

	UFGLocalPlayer_GetUsername_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocalPlayer.GetLoginState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ELoginState>       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ELoginState> UFGLocalPlayer::GetLoginState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.GetLoginState");

	UFGLocalPlayer_GetLoginState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocalPlayer.GetFriendList
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FFGOnlineFriend> out_friends                    (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGLocalPlayer::GetFriendList(TArray<struct FFGOnlineFriend>* out_friends)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.GetFriendList");

	UFGLocalPlayer_GetFriendList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_friends != nullptr)
		*out_friends = params.out_friends;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocalPlayer.GetCurrentCreateSessionState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECreateSessionState            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECreateSessionState UFGLocalPlayer::GetCurrentCreateSessionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.GetCurrentCreateSessionState");

	UFGLocalPlayer_GetCurrentCreateSessionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocalPlayer.CreateOfflineSession_SetupServer
// (Final, Native, Protected)
// Parameters:
// bool*                          startOffline                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocalPlayer::CreateOfflineSession_SetupServer(bool* startOffline)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.CreateOfflineSession_SetupServer");

	UFGLocalPlayer_CreateOfflineSession_SetupServer_Params params;
	params.startOffline = startOffline;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocalPlayer.AutoLogin
// (Final, Native, Public, BlueprintCallable)

void UFGLocalPlayer::AutoLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocalPlayer.AutoLogin");

	UFGLocalPlayer_AutoLogin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.SetMultipleUnitControlMaster
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Force                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGLocomotive::SetMultipleUnitControlMaster(bool* Force)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.SetMultipleUnitControlMaster");

	AFGLocomotive_SetMultipleUnitControlMaster_Params params;
	params.Force = Force;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.OnRep_ReplicatedMovementTransform
// (Final, Native, Private)

void AFGLocomotive::OnRep_ReplicatedMovementTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.OnRep_ReplicatedMovementTransform");

	AFGLocomotive_OnRep_ReplicatedMovementTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.OnNameChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGLocomotive::OnNameChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.OnNameChanged");

	AFGLocomotive_OnNameChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.GetPowerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPowerInfoComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPowerInfoComponent* AFGLocomotive::GetPowerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.GetPowerInfo");

	AFGLocomotive_GetPowerInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.GetMultipleUnitRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EMultipleUnitControl           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EMultipleUnitControl AFGLocomotive::GetMultipleUnitRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.GetMultipleUnitRole");

	AFGLocomotive_GetMultipleUnitRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.GetLocomotiveMovementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGLocomotiveMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGLocomotiveMovementComponent* AFGLocomotive::GetLocomotiveMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.GetLocomotiveMovementComponent");

	AFGLocomotive_GetLocomotiveMovementComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotive.ClearMultipleUnitControlMaster
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFGLocomotive::ClearMultipleUnitControlMaster()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.ClearMultipleUnitControlMaster");

	AFGLocomotive_ClearMultipleUnitControlMaster_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotive.CanSetTrainMultipleUnitMaster
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGLocomotive::CanSetTrainMultipleUnitMaster()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotive.CanSetTrainMultipleUnitMaster");

	AFGLocomotive_CanSetTrainMultipleUnitMaster_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.SetPayloadMass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         payload                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailroadVehicleMovementComponent::SetPayloadMass(float* payload)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.SetPayloadMass");

	UFGRailroadVehicleMovementComponent_SetPayloadMass_Params params;
	params.payload = payload;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.IsMoving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGRailroadVehicleMovementComponent::IsMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.IsMoving");

	UFGRailroadVehicleMovementComponent_IsMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelsetRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGRailroadVehicleMovementComponent::GetWheelsetRotation(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelsetRotation");

	UFGRailroadVehicleMovementComponent_GetWheelsetRotation_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelsetOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetWheelsetOffset(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelsetOffset");

	UFGRailroadVehicleMovementComponent_GetWheelsetOffset_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelsetAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetWheelsetAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelsetAngle");

	UFGRailroadVehicleMovementComponent_GetWheelsetAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetWheelRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetWheelRotation");

	UFGRailroadVehicleMovementComponent_GetWheelRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetTractiveForce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetTractiveForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetTractiveForce");

	UFGRailroadVehicleMovementComponent_GetTractiveForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetTrackGrade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetTrackGrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetTrackGrade");

	UFGRailroadVehicleMovementComponent_GetTrackGrade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetTrackCurvature
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetTrackCurvature()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetTrackCurvature");

	UFGRailroadVehicleMovementComponent_GetTrackCurvature_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetTareMass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetTareMass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetTareMass");

	UFGRailroadVehicleMovementComponent_GetTareMass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetRelativeForwardSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetRelativeForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetRelativeForwardSpeed");

	UFGRailroadVehicleMovementComponent_GetRelativeForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetPayloadMass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetPayloadMass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetPayloadMass");

	UFGRailroadVehicleMovementComponent_GetPayloadMass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetNumWheelsets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGRailroadVehicleMovementComponent::GetNumWheelsets()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetNumWheelsets");

	UFGRailroadVehicleMovementComponent_GetNumWheelsets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxTractiveEffort
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetMaxTractiveEffort()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxTractiveEffort");

	UFGRailroadVehicleMovementComponent_GetMaxTractiveEffort_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxForwardSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetMaxForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxForwardSpeed");

	UFGRailroadVehicleMovementComponent_GetMaxForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxDynamicBrakingEffort
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetMaxDynamicBrakingEffort()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxDynamicBrakingEffort");

	UFGRailroadVehicleMovementComponent_GetMaxDynamicBrakingEffort_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxAirBrakingEffort
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetMaxAirBrakingEffort()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetMaxAirBrakingEffort");

	UFGRailroadVehicleMovementComponent_GetMaxAirBrakingEffort_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetMass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetMass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetMass");

	UFGRailroadVehicleMovementComponent_GetMass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetForwardSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetForwardSpeed");

	UFGRailroadVehicleMovementComponent_GetForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetDynamicBrakingForce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetDynamicBrakingForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetDynamicBrakingForce");

	UFGRailroadVehicleMovementComponent_GetDynamicBrakingForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetCouplerRotationAndExtention
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// float                          out_extention                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UFGRailroadVehicleMovementComponent::GetCouplerRotationAndExtention(int* Index, float* out_extention)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetCouplerRotationAndExtention");

	UFGRailroadVehicleMovementComponent_GetCouplerRotationAndExtention_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_extention != nullptr)
		*out_extention = params.out_extention;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetBrakingForce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetBrakingForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetBrakingForce");

	UFGRailroadVehicleMovementComponent_GetBrakingForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadVehicleMovementComponent.GetAirBrakingForce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRailroadVehicleMovementComponent::GetAirBrakingForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleMovementComponent.GetAirBrakingForce");

	UFGRailroadVehicleMovementComponent_GetAirBrakingForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotiveMovementComponent.UseReplicatedState
// (Final, Native, Protected)

void UFGLocomotiveMovementComponent::UseReplicatedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.UseReplicatedState");

	UFGLocomotiveMovementComponent_UseReplicatedState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.SetThrottleInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Throttle                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocomotiveMovementComponent::SetThrottleInput(float* Throttle)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.SetThrottleInput");

	UFGLocomotiveMovementComponent_SetThrottleInput_Params params;
	params.Throttle = Throttle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.SetSteeringInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Steering                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocomotiveMovementComponent::SetSteeringInput(float* Steering)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.SetSteeringInput");

	UFGLocomotiveMovementComponent_SetSteeringInput_Params params;
	params.Steering = Steering;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.SetReverserInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           reverser                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocomotiveMovementComponent::SetReverserInput(int* reverser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.SetReverserInput");

	UFGLocomotiveMovementComponent_SetReverserInput_Params params;
	params.reverser = reverser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.SetEmergencyBrake
// (Final, Native, Public, BlueprintCallable)

void UFGLocomotiveMovementComponent::SetEmergencyBrake()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.SetEmergencyBrake");

	UFGLocomotiveMovementComponent_SetEmergencyBrake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.SetAirBrakeInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Brake                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocomotiveMovementComponent::SetAirBrakeInput(float* Brake)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.SetAirBrakeInput");

	UFGLocomotiveMovementComponent_SetAirBrakeInput_Params params;
	params.Brake = Brake;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.ServerUpdateState
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           inReverserInput                (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InSteeringInput                (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InThrottleInput                (Parm, ZeroConstructor, IsPlainOldData)
// float*                         inDynamicBrakeInput            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         inAirBrakeInput                (Parm, ZeroConstructor, IsPlainOldData)

void UFGLocomotiveMovementComponent::ServerUpdateState(int* inReverserInput, float* InSteeringInput, float* InThrottleInput, float* inDynamicBrakeInput, float* inAirBrakeInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.ServerUpdateState");

	UFGLocomotiveMovementComponent_ServerUpdateState_Params params;
	params.inReverserInput = inReverserInput;
	params.InSteeringInput = InSteeringInput;
	params.InThrottleInput = InThrottleInput;
	params.inDynamicBrakeInput = inDynamicBrakeInput;
	params.inAirBrakeInput = inAirBrakeInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGLocomotiveMovementComponent.GetThrottle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGLocomotiveMovementComponent::GetThrottle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.GetThrottle");

	UFGLocomotiveMovementComponent_GetThrottle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotiveMovementComponent.GetReverser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGLocomotiveMovementComponent::GetReverser()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.GetReverser");

	UFGLocomotiveMovementComponent_GetReverser_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotiveMovementComponent.GetDynamicBrake
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGLocomotiveMovementComponent::GetDynamicBrake()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.GetDynamicBrake");

	UFGLocomotiveMovementComponent_GetDynamicBrake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLocomotiveMovementComponent.GetAirBrake
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGLocomotiveMovementComponent::GetAirBrake()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLocomotiveMovementComponent.GetAirBrake");

	UFGLocomotiveMovementComponent_GetAirBrake_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGLootSettings.GetLootSettingsDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UFGLootSettings::STATIC_GetLootSettingsDefaultObject(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGLootSettings.GetLootSettingsDefaultObject");

	UFGLootSettings_GetLootSettingsDefaultObject_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGManta.GetSpline
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USplineComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USplineComponent* AFGManta::GetSpline()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGManta.GetSpline");

	AFGManta_GetSpline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGManta.GetCurrentTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGManta::GetCurrentTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGManta.GetCurrentTime");

	AFGManta_GetCurrentTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGManufacturingButton.SetButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UButton**                inButton                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGManufacturingButton::SetButton(class UButton** inButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGManufacturingButton.SetButton");

	UFGManufacturingButton_SetButton_Params params;
	params.inButton = inButton;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGManufacturingButton.OnReleasedButton
// (Final, Native, Protected, BlueprintCallable)

void UFGManufacturingButton::OnReleasedButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGManufacturingButton.OnReleasedButton");

	UFGManufacturingButton_OnReleasedButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGManufacturingButton.OnPressedButton
// (Final, Native, Protected)

void UFGManufacturingButton::OnPressedButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGManufacturingButton.OnPressedButton");

	UFGManufacturingButton_OnPressedButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapArea.GetZoneType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGMapArea::STATIC_GetZoneType(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapArea.GetZoneType");

	UFGMapArea_GetZoneType_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapArea.GetUserSetAreaDisplayName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGMapArea::STATIC_GetUserSetAreaDisplayName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapArea.GetUserSetAreaDisplayName");

	UFGMapArea_GetUserSetAreaDisplayName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapArea.GetAreaDisplayName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGMapArea::STATIC_GetAreaDisplayName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapArea.GetAreaDisplayName");

	UFGMapArea_GetAreaDisplayName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapAreaTexture.OnNewMapAreaVisisted
// (Final, Native, Private)
// Parameters:
// class UClass**                 newMapArea                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapAreaTexture::OnNewMapAreaVisisted(class UClass** newMapArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapAreaTexture.OnNewMapAreaVisisted");

	UFGMapAreaTexture_OnNewMapAreaVisisted_Params params;
	params.newMapArea = newMapArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapAreaTexture.GetFogOfWarTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGMapAreaTexture::GetFogOfWarTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapAreaTexture.GetFogOfWarTexture");

	UFGMapAreaTexture_GetFogOfWarTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapAreaZoneDescriptor.GetZoneType
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                  out_zoneType                   (Parm, OutParm, ZeroConstructor)

void UFGMapAreaZoneDescriptor::GetZoneType(class FString* out_zoneType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapAreaZoneDescriptor.GetZoneType");

	UFGMapAreaZoneDescriptor_GetZoneType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_zoneType != nullptr)
		*out_zoneType = params.out_zoneType;
}


// Function FactoryGame.FGMapFunctionLibrary.GetWorldBounds
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Min                            (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               Max                            (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFGMapFunctionLibrary::STATIC_GetWorldBounds(class UObject** WorldContext, struct FVector2D* Min, struct FVector2D* Max)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapFunctionLibrary.GetWorldBounds");

	UFGMapFunctionLibrary_GetWorldBounds_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Min != nullptr)
		*Min = params.Min;
	if (Max != nullptr)
		*Max = params.Max;
}


// Function FactoryGame.FGMapFunctionLibrary.GetNormalizedPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGMinimapCaptureActor** minimapCaptureActor            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                WorldLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UFGMapFunctionLibrary::STATIC_GetNormalizedPosition(class AFGMinimapCaptureActor** minimapCaptureActor, struct FVector* WorldLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapFunctionLibrary.GetNormalizedPosition");

	UFGMapFunctionLibrary_GetNormalizedPosition_Params params;
	params.minimapCaptureActor = minimapCaptureActor;
	params.WorldLocation = WorldLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapFunctionLibrary.GetMinimapCaptureActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGMinimapCaptureActor*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGMinimapCaptureActor* UFGMapFunctionLibrary::STATIC_GetMinimapCaptureActor(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapFunctionLibrary.GetMinimapCaptureActor");

	UFGMapFunctionLibrary_GetMinimapCaptureActor_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapFunctionLibrary.GetMapPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGMinimapCaptureActor** minimapCaptureActor            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                WorldLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         mapResolution                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UFGMapFunctionLibrary::STATIC_GetMapPosition(class AFGMinimapCaptureActor** minimapCaptureActor, struct FVector* WorldLocation, float* mapResolution)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapFunctionLibrary.GetMapPosition");

	UFGMapFunctionLibrary_GetMapPosition_Params params;
	params.minimapCaptureActor = minimapCaptureActor;
	params.WorldLocation = WorldLocation;
	params.mapResolution = mapResolution;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapFunctionLibrary.GetMapDistance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGMinimapCaptureActor** minimapCaptureActor            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         worldDistance                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         mapResolution                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGMapFunctionLibrary::STATIC_GetMapDistance(class AFGMinimapCaptureActor** minimapCaptureActor, float* worldDistance, float* mapResolution)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapFunctionLibrary.GetMapDistance");

	UFGMapFunctionLibrary_GetMapDistance_Params params;
	params.minimapCaptureActor = minimapCaptureActor;
	params.worldDistance = worldDistance;
	params.mapResolution = mapResolution;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapManager.OnActorRepresentationUpdated
// (Final, Native, Private)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void AFGMapManager::OnActorRepresentationUpdated(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapManager.OnActorRepresentationUpdated");

	AFGMapManager_OnActorRepresentationUpdated_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapManager.OnActorRepresentationRemoved
// (Final, Native, Private)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void AFGMapManager::OnActorRepresentationRemoved(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapManager.OnActorRepresentationRemoved");

	AFGMapManager_OnActorRepresentationRemoved_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapManager.OnActorRepresentationAdded
// (Final, Native, Private)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void AFGMapManager::OnActorRepresentationAdded(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapManager.OnActorRepresentationAdded");

	AFGMapManager_OnActorRepresentationAdded_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapManager.GetFogOfWarTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* AFGMapManager::GetFogOfWarTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapManager.GetFogOfWarTexture");

	AFGMapManager_GetFogOfWarTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapManager.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGMapManager*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGMapManager* AFGMapManager::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapManager.Get");

	AFGMapManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMapObjectWidget.OnObjectMoved
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D*              normalizedLocation             (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapObjectWidget::OnObjectMoved(struct FVector2D* normalizedLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapObjectWidget.OnObjectMoved");

	UFGMapObjectWidget_OnObjectMoved_Params params;
	params.normalizedLocation = normalizedLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapObjectWidget.OnObjectFiltered
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapObjectWidget::OnObjectFiltered(bool* visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapObjectWidget.OnObjectFiltered");

	UFGMapObjectWidget_OnObjectFiltered_Params params;
	params.visible = visible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapObjectWidget.OnActorRepresentationUpdated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGMapObjectWidget::OnActorRepresentationUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapObjectWidget.OnActorRepresentationUpdated");

	UFGMapObjectWidget_OnActorRepresentationUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapObjectWidget.OnActorRepresentationFiltered
// (Final, Native, Private)
// Parameters:
// ERepresentationType*           representationType             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapObjectWidget::OnActorRepresentationFiltered(ERepresentationType* representationType, bool* visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapObjectWidget.OnActorRepresentationFiltered");

	UFGMapObjectWidget_OnActorRepresentationFiltered_Params params;
	params.representationType = representationType;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnObjectUpdatedOnMap
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnObjectUpdatedOnMap(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnObjectUpdatedOnMap");

	UFGMapWidget_OnObjectUpdatedOnMap_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnObjectRemovedFromMap
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnObjectRemovedFromMap(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnObjectRemovedFromMap");

	UFGMapWidget_OnObjectRemovedFromMap_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnObjectAddedToMap
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnObjectAddedToMap(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnObjectAddedToMap");

	UFGMapWidget_OnObjectAddedToMap_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnMapCentered
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector2D*              normalizedWorldLocation        (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnMapCentered(struct FVector2D* normalizedWorldLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnMapCentered");

	UFGMapWidget_OnMapCentered_Params params;
	params.normalizedWorldLocation = normalizedWorldLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnActorRepresentationUpdated
// (Final, Native, Private)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnActorRepresentationUpdated(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnActorRepresentationUpdated");

	UFGMapWidget_OnActorRepresentationUpdated_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnActorRepresentationRemoved
// (Final, Native, Private)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnActorRepresentationRemoved(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnActorRepresentationRemoved");

	UFGMapWidget_OnActorRepresentationRemoved_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.OnActorRepresentationAdded
// (Final, Native, Private)
// Parameters:
// class UFGActorRepresentation** actorRepresentation            (Parm, ZeroConstructor, IsPlainOldData)

void UFGMapWidget::OnActorRepresentationAdded(class UFGActorRepresentation** actorRepresentation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.OnActorRepresentationAdded");

	UFGMapWidget_OnActorRepresentationAdded_Params params;
	params.actorRepresentation = actorRepresentation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMapWidget.GetFogOfWarTexture
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGMapWidget::GetFogOfWarTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMapWidget.GetFogOfWarTexture");

	UFGMapWidget_GetFogOfWarTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialEffectComponent.SetMeshes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UMeshComponent*>* meshes                         (Parm, ZeroConstructor)

void UFGMaterialEffectComponent::SetMeshes(TArray<class UMeshComponent*>* meshes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.SetMeshes");

	UFGMaterialEffectComponent_SetMeshes_Params params;
	params.meshes = meshes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.SetMaterialScalarParameterValue
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FName*                  Name                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGMaterialEffectComponent::SetMaterialScalarParameterValue(struct FName* Name, float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.SetMaterialScalarParameterValue");

	UFGMaterialEffectComponent_SetMaterialScalarParameterValue_Params params;
	params.Name = Name;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.SetDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGMaterialEffectComponent::SetDuration(float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.SetDuration");

	UFGMaterialEffectComponent_SetDuration_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.PreStarted
// (Native, Event, Protected, BlueprintEvent)

void UFGMaterialEffectComponent::PreStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.PreStarted");

	UFGMaterialEffectComponent_PreStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.OnUpdate
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGMaterialEffectComponent::OnUpdate(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.OnUpdate");

	UFGMaterialEffectComponent_OnUpdate_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.OnStarted
// (Native, Event, Protected, BlueprintEvent)

void UFGMaterialEffectComponent::OnStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.OnStarted");

	UFGMaterialEffectComponent_OnStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.OnEnded
// (Native, Event, Protected, BlueprintEvent)

void UFGMaterialEffectComponent::OnEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.OnEnded");

	UFGMaterialEffectComponent_OnEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMaterialEffectComponent.GetMeshesBounds
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, Const)
// Parameters:
// bool*                          onlyVisible                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          onlyColliding                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 out_origin                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 out_boxExtent                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFGMaterialEffectComponent::GetMeshesBounds(bool* onlyVisible, bool* onlyColliding, struct FVector* out_origin, struct FVector* out_boxExtent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.GetMeshesBounds");

	UFGMaterialEffectComponent_GetMeshesBounds_Params params;
	params.onlyVisible = onlyVisible;
	params.onlyColliding = onlyColliding;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_origin != nullptr)
		*out_origin = params.out_origin;
	if (out_boxExtent != nullptr)
		*out_boxExtent = params.out_boxExtent;
}


// Function FactoryGame.FGMaterialEffectComponent.GetMeshes
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// TArray<class UMeshComponent*>  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UMeshComponent*> UFGMaterialEffectComponent::GetMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.GetMeshes");

	UFGMaterialEffectComponent_GetMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialEffectComponent.GetDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGMaterialEffectComponent::GetDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffectComponent.GetDuration");

	UFGMaterialEffectComponent_GetDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialEffect_Build.GetSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGMaterialEffect_Build::GetSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffect_Build.GetSpeed");

	UFGMaterialEffect_Build_GetSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialEffect_Build.GetInstigator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UFGMaterialEffect_Build::GetInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffect_Build.GetInstigator");

	UFGMaterialEffect_Build_GetInstigator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialEffect_Build.GetCost
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGMaterialEffect_Build::GetCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialEffect_Build.GetCost");

	UFGMaterialEffect_Build_GetCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.PerformMaterialFlowAnalysis
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class UClass*>*         recipes                        (Parm, ZeroConstructor)
// class AFGRecipeManager**       recipeManager                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FMaterialFlowGraph      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FMaterialFlowGraph UFGMaterialFlowAnalysisFunctionLibrary::STATIC_PerformMaterialFlowAnalysis(TArray<class UClass*>* recipes, class AFGRecipeManager** recipeManager)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.PerformMaterialFlowAnalysis");

	UFGMaterialFlowAnalysisFunctionLibrary_PerformMaterialFlowAnalysis_Params params;
	params.recipes = recipes;
	params.recipeManager = recipeManager;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.GetGraphNodes
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FMaterialFlowGraph*     graph                          (ConstParm, Parm, OutParm, ReferenceParm)
// int*                           Depth                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FMaterialFlowNode> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FMaterialFlowNode> UFGMaterialFlowAnalysisFunctionLibrary::STATIC_GetGraphNodes(struct FMaterialFlowGraph* graph, int* Depth)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.GetGraphNodes");

	UFGMaterialFlowAnalysisFunctionLibrary_GetGraphNodes_Params params;
	params.graph = graph;
	params.Depth = Depth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.GetGraphDepth
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FMaterialFlowGraph*     graph                          (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGMaterialFlowAnalysisFunctionLibrary::STATIC_GetGraphDepth(struct FMaterialFlowGraph* graph)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMaterialFlowAnalysisFunctionLibrary.GetGraphDepth");

	UFGMaterialFlowAnalysisFunctionLibrary_GetGraphDepth_Params params;
	params.graph = graph;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMenuBase.OnMenuExitDone
// (Final, Native, Protected, BlueprintCallable)

void UFGMenuBase::OnMenuExitDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMenuBase.OnMenuExitDone");

	UFGMenuBase_OnMenuExitDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMenuBase.OnMenuExit
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget**                prevMenu                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          noAnimation                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGMenuBase::OnMenuExit(class UWidget** prevMenu, bool* noAnimation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMenuBase.OnMenuExit");

	UFGMenuBase_OnMenuExit_Params params;
	params.prevMenu = prevMenu;
	params.noAnimation = noAnimation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMenuBase.OnMenuEnterDone
// (Final, Native, Protected, BlueprintCallable)

void UFGMenuBase::OnMenuEnterDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMenuBase.OnMenuEnterDone");

	UFGMenuBase_OnMenuEnterDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMenuBase.OnMenuEnter
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget**                prevMenu                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGMenuBase::OnMenuEnter(class UWidget** prevMenu)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMenuBase.OnMenuEnter");

	UFGMenuBase_OnMenuEnter_Params params;
	params.prevMenu = prevMenu;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMessageSender.GetSenderDefaultObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UObject* UFGMessageSender::STATIC_GetSenderDefaultObject(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMessageSender.GetSenderDefaultObject");

	UFGMessageSender_GetSenderDefaultObject_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMinimapCaptureActor.GetMapAreaTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGMapAreaTexture*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGMapAreaTexture* AFGMinimapCaptureActor::GetMapAreaTexture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMinimapCaptureActor.GetMapAreaTexture");

	AFGMinimapCaptureActor_GetMapAreaTexture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGMultiplayerVerticalBox.Sort
// (Final, Native, Private, BlueprintCallable)

void UFGMultiplayerVerticalBox::Sort()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMultiplayerVerticalBox.Sort");

	UFGMultiplayerVerticalBox_Sort_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.Stop
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGMusicManager::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.Stop");

	UFGMusicManager_Stop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.Play
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGMusicManager::Play()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.Play");

	UFGMusicManager_Play_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.Pause
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGMusicManager::Pause()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.Pause");

	UFGMusicManager_Pause_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.OnPlayerNearBaseChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          isNear                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGMusicManager::OnPlayerNearBaseChanged(bool* isNear)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.OnPlayerNearBaseChanged");

	UFGMusicManager_OnPlayerNearBaseChanged_Params params;
	params.isNear = isNear;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.OnPlayerEnteredArea
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UClass**                 mapArea                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGMusicManager::OnPlayerEnteredArea(class UClass** mapArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.OnPlayerEnteredArea");

	UFGMusicManager_OnPlayerEnteredArea_Params params;
	params.mapArea = mapArea;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.NotifyPostLoadMap
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWorld**                 loadedWorld                    (Parm, ZeroConstructor, IsPlainOldData)
// class AWorldSettings**         WorldSettings                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGMusicManager::NotifyPostLoadMap(class UWorld** loadedWorld, class AWorldSettings** WorldSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.NotifyPostLoadMap");

	UFGMusicManager_NotifyPostLoadMap_Params params;
	params.loadedWorld = loadedWorld;
	params.WorldSettings = WorldSettings;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGMusicManager.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFGMusicManager*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGMusicManager* UFGMusicManager::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGMusicManager.Get");

	UFGMusicManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.NetIdHasValidPresence
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl*       netId                          (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPresenceLibrary::STATIC_NetIdHasValidPresence(class UObject** WorldContext, struct FUniqueNetIdRepl* netId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.NetIdHasValidPresence");

	UFGPresenceLibrary_NetIdHasValidPresence_Params params;
	params.WorldContext = WorldContext;
	params.netId = netId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.IsValid_OnlinePresence
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FOnlinePresence*        A                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPresenceLibrary::STATIC_IsValid_OnlinePresence(struct FOnlinePresence* A)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.IsValid_OnlinePresence");

	UFGPresenceLibrary_IsValid_OnlinePresence_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.IsPlayingThisGame
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FOnlinePresence*        presence                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPresenceLibrary::STATIC_IsPlayingThisGame(struct FOnlinePresence* presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.IsPlayingThisGame");

	UFGPresenceLibrary_IsPlayingThisGame_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.IsPlayingOtherGame
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FOnlinePresence*        presence                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPresenceLibrary::STATIC_IsPlayingOtherGame(struct FOnlinePresence* presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.IsPlayingOtherGame");

	UFGPresenceLibrary_IsPlayingOtherGame_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.IsOnline
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FOnlinePresence*        presence                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPresenceLibrary::STATIC_IsOnline(struct FOnlinePresence* presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.IsOnline");

	UFGPresenceLibrary_IsOnline_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.GetSessionFromPresence
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FOnlinePresence*        presence                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FBlueprintSessionResult ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBlueprintSessionResult UFGPresenceLibrary::STATIC_GetSessionFromPresence(struct FOnlinePresence* presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.GetSessionFromPresence");

	UFGPresenceLibrary_GetSessionFromPresence_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.GetPresenceString
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FOnlinePresence*        presence                       (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGPresenceLibrary::STATIC_GetPresenceString(struct FOnlinePresence* presence)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.GetPresenceString");

	UFGPresenceLibrary_GetPresenceString_Params params;
	params.presence = presence;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPresenceLibrary.GetPresenceFromNetId
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl*       netId                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FOnlinePresence         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FOnlinePresence UFGPresenceLibrary::STATIC_GetPresenceFromNetId(class UObject** WorldContext, struct FUniqueNetIdRepl* netId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPresenceLibrary.GetPresenceFromNetId");

	UFGPresenceLibrary_GetPresenceFromNetId_Params params;
	params.WorldContext = WorldContext;
	params.netId = netId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.IsWaitingForData
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULocalPlayer**           friendOf                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGOnlineFriend*        onlineFriend                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFriendsLibrary::STATIC_IsWaitingForData(class ULocalPlayer** friendOf, struct FFGOnlineFriend* onlineFriend)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.IsWaitingForData");

	UFGFriendsLibrary_IsWaitingForData_Params params;
	params.friendOf = friendOf;
	params.onlineFriend = onlineFriend;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.IsValid_Friend
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFGOnlineFriend*        A                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFriendsLibrary::STATIC_IsValid_Friend(struct FFGOnlineFriend* A)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.IsValid_Friend");

	UFGFriendsLibrary_IsValid_Friend_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.IsFriendJoinable
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULocalPlayer**           friendOf                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGOnlineFriend*        onlineFriend                   (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<ECantJoinReason>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ECantJoinReason> UFGFriendsLibrary::STATIC_IsFriendJoinable(class ULocalPlayer** friendOf, struct FFGOnlineFriend* onlineFriend)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.IsFriendJoinable");

	UFGFriendsLibrary_IsFriendJoinable_Params params;
	params.friendOf = friendOf;
	params.onlineFriend = onlineFriend;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.GetFriendUniqueNetId
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFGOnlineFriend*        onlineFriend                   (ConstParm, Parm, OutParm, ReferenceParm)
// struct FUniqueNetIdRepl        ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUniqueNetIdRepl UFGFriendsLibrary::STATIC_GetFriendUniqueNetId(struct FFGOnlineFriend* onlineFriend)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.GetFriendUniqueNetId");

	UFGFriendsLibrary_GetFriendUniqueNetId_Params params;
	params.onlineFriend = onlineFriend;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.GetFriendName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULocalPlayer**           friendOf                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGOnlineFriend*        onlineFriend                   (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                  out_displayName                (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFriendsLibrary::STATIC_GetFriendName(class ULocalPlayer** friendOf, struct FFGOnlineFriend* onlineFriend, class FString* out_displayName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.GetFriendName");

	UFGFriendsLibrary_GetFriendName_Params params;
	params.friendOf = friendOf;
	params.onlineFriend = onlineFriend;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_displayName != nullptr)
		*out_displayName = params.out_displayName;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.GetFriendFromNetId
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULocalPlayer**           friendOf                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl*       netId                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FFGOnlineFriend         ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFGOnlineFriend UFGFriendsLibrary::STATIC_GetFriendFromNetId(class ULocalPlayer** friendOf, struct FUniqueNetIdRepl* netId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.GetFriendFromNetId");

	UFGFriendsLibrary_GetFriendFromNetId_Params params;
	params.friendOf = friendOf;
	params.netId = netId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGFriendsLibrary.EqualEqual_FriendFriend
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFGOnlineFriend*        A                              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FFGOnlineFriend*        B                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGFriendsLibrary::STATIC_EqualEqual_FriendFriend(struct FFGOnlineFriend* A, struct FFGOnlineFriend* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGFriendsLibrary.EqualEqual_FriendFriend");

	UFGFriendsLibrary_EqualEqual_FriendFriend_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.SetSessionVisibility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ESessionVisibility>* Visibility                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGSessionLibrary::STATIC_SetSessionVisibility(class UObject** WorldContext, TEnumAsByte<ESessionVisibility>* Visibility)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.SetSessionVisibility");

	UFGSessionLibrary_SetSessionVisibility_Params params;
	params.WorldContext = WorldContext;
	params.Visibility = Visibility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSessionLibrary.JoinSession
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FBlueprintSessionResult* session                        (ConstParm, Parm, OutParm, ReferenceParm)

void UFGSessionLibrary::STATIC_JoinSession(class UObject** WorldContext, struct FBlueprintSessionResult* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.JoinSession");

	UFGSessionLibrary_JoinSession_Params params;
	params.WorldContext = WorldContext;
	params.session = session;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSessionLibrary.IsSessionValid
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* session                        (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSessionLibrary::STATIC_IsSessionValid(struct FBlueprintSessionResult* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.IsSessionValid");

	UFGSessionLibrary_IsSessionValid_Params params;
	params.session = session;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.IsInGameSession
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULocalPlayer**           LocalPlayer                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSessionLibrary::STATIC_IsInGameSession(class ULocalPlayer** LocalPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.IsInGameSession");

	UFGSessionLibrary_IsInGameSession_Params params;
	params.LocalPlayer = LocalPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.InOnlineSession
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl*       PlayerId                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSessionLibrary::STATIC_InOnlineSession(class UObject** WorldContext, struct FUniqueNetIdRepl* PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.InOnlineSession");

	UFGSessionLibrary_InOnlineSession_Params params;
	params.WorldContext = WorldContext;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.GetSessionVisibility
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* session                        (ConstParm, Parm, OutParm, ReferenceParm)
// TEnumAsByte<ESessionVisibility> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ESessionVisibility> UFGSessionLibrary::STATIC_GetSessionVisibility(struct FBlueprintSessionResult* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.GetSessionVisibility");

	UFGSessionLibrary_GetSessionVisibility_Params params;
	params.session = session;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.GetSessionSettings
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* session                        (ConstParm, Parm, OutParm, ReferenceParm)
// struct FFGOnlineSessionSettings ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFGOnlineSessionSettings UFGSessionLibrary::STATIC_GetSessionSettings(struct FBlueprintSessionResult* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.GetSessionSettings");

	UFGSessionLibrary_GetSessionSettings_Params params;
	params.session = session;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.GetMySession
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULocalPlayer**           LocalPlayer                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FBlueprintSessionResult ReturnValue                    (Parm, OutParm, ReturnParm)

struct FBlueprintSessionResult UFGSessionLibrary::STATIC_GetMySession(class ULocalPlayer** LocalPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.GetMySession");

	UFGSessionLibrary_GetMySession_Params params;
	params.LocalPlayer = LocalPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.GetMaxNumberOfPlayers
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult* session                        (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSessionLibrary::STATIC_GetMaxNumberOfPlayers(struct FBlueprintSessionResult* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.GetMaxNumberOfPlayers");

	UFGSessionLibrary_GetMaxNumberOfPlayers_Params params;
	params.session = session;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSessionLibrary.CheckIsCompatibleVersion
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFGOnlineSessionSettings* session                        (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSessionLibrary::STATIC_CheckIsCompatibleVersion(struct FFGOnlineSessionSettings* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSessionLibrary.CheckIsCompatibleVersion");

	UFGSessionLibrary_CheckIsCompatibleVersion_Params params;
	params.session = session;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInviteLibrary.SendInviteToFriend
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class ULocalPlayer**           fromPlayer                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FFGOnlineFriend*        toFriend                       (ConstParm, Parm, OutParm, ReferenceParm)

void UFGInviteLibrary::STATIC_SendInviteToFriend(class ULocalPlayer** fromPlayer, struct FFGOnlineFriend* toFriend)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.SendInviteToFriend");

	UFGInviteLibrary_SendInviteToFriend_Params params;
	params.fromPlayer = fromPlayer;
	params.toFriend = toFriend;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInviteLibrary.JoinInvite
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FPendingInvite*         invite                         (ConstParm, Parm, OutParm, ReferenceParm)

void UFGInviteLibrary::STATIC_JoinInvite(class UObject** WorldContext, struct FPendingInvite* invite)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.JoinInvite");

	UFGInviteLibrary_JoinInvite_Params params;
	params.WorldContext = WorldContext;
	params.invite = invite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGInviteLibrary.GetPendingInvites
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FPendingInvite>  out_invites                    (Parm, OutParm, ZeroConstructor)

void UFGInviteLibrary::STATIC_GetPendingInvites(class UObject** WorldContext, TArray<struct FPendingInvite>* out_invites)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.GetPendingInvites");

	UFGInviteLibrary_GetPendingInvites_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_invites != nullptr)
		*out_invites = params.out_invites;
}


// Function FactoryGame.FGInviteLibrary.GetInviteSenderUniqueNetId
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPendingInvite*         invite                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FUniqueNetIdRepl        ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUniqueNetIdRepl UFGInviteLibrary::STATIC_GetInviteSenderUniqueNetId(struct FPendingInvite* invite)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.GetInviteSenderUniqueNetId");

	UFGInviteLibrary_GetInviteSenderUniqueNetId_Params params;
	params.invite = invite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInviteLibrary.GetInviteFromSender
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl*       Sender                         (ConstParm, Parm, OutParm, ReferenceParm)
// struct FPendingInvite          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPendingInvite UFGInviteLibrary::STATIC_GetInviteFromSender(class UObject** WorldContext, struct FUniqueNetIdRepl* Sender)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.GetInviteFromSender");

	UFGInviteLibrary_GetInviteFromSender_Params params;
	params.WorldContext = WorldContext;
	params.Sender = Sender;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGInviteLibrary.DiscardInvite
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FPendingInvite*         invite                         (ConstParm, Parm, OutParm, ReferenceParm)

void UFGInviteLibrary::STATIC_DiscardInvite(class UObject** WorldContext, struct FPendingInvite* invite)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGInviteLibrary.DiscardInvite");

	UFGInviteLibrary_DiscardInvite_Params params;
	params.WorldContext = WorldContext;
	params.invite = invite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNetworkLibrary.SubmitFeedback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FUserFeedbackFrontEndData* frontEndFeedbackData           (Parm)
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::STATIC_SubmitFeedback(struct FUserFeedbackFrontEndData* frontEndFeedbackData, class APlayerController** PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.SubmitFeedback");

	UFGNetworkLibrary_SubmitFeedback_Params params;
	params.frontEndFeedbackData = frontEndFeedbackData;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.QueryNATType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)

void UFGNetworkLibrary::STATIC_QueryNATType(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.QueryNATType");

	UFGNetworkLibrary_QueryNATType_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNetworkLibrary.OpenWebURL
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString*                 URL                            (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::STATIC_OpenWebURL(class FString* URL)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.OpenWebURL");

	UFGNetworkLibrary_OpenWebURL_Params params;
	params.URL = URL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.NATTypeToText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ECachedNATType*                natType                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGNetworkLibrary::STATIC_NATTypeToText(ECachedNATType* natType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.NATTypeToText");

	UFGNetworkLibrary_NATTypeToText_Params params;
	params.natType = natType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.IsValid_UniqueNetId
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUniqueNetIdRepl*       A                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::STATIC_IsValid_UniqueNetId(struct FUniqueNetIdRepl* A)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.IsValid_UniqueNetId");

	UFGNetworkLibrary_IsValid_UniqueNetId_Params params;
	params.A = A;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.IsServer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::STATIC_IsServer(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.IsServer");

	UFGNetworkLibrary_IsServer_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.GetNameFromUniqueNetId
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class ULocalPlayer**           querier                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FUniqueNetIdRepl*       netId                          (ConstParm, Parm, OutParm, ReferenceParm)
// class FString                  out_name                       (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::STATIC_GetNameFromUniqueNetId(class ULocalPlayer** querier, struct FUniqueNetIdRepl* netId, class FString* out_name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.GetNameFromUniqueNetId");

	UFGNetworkLibrary_GetNameFromUniqueNetId_Params params;
	params.querier = querier;
	params.netId = netId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_name != nullptr)
		*out_name = params.out_name;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.GetLocalBuildVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGNetworkLibrary::STATIC_GetLocalBuildVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.GetLocalBuildVersion");

	UFGNetworkLibrary_GetLocalBuildVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.GetCachedNATType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// ECachedNATType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECachedNATType UFGNetworkLibrary::STATIC_GetCachedNATType(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.GetCachedNATType");

	UFGNetworkLibrary_GetCachedNATType_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.EqualEqual_NetIdNetId
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUniqueNetIdRepl*       A                              (ConstParm, Parm, OutParm, ReferenceParm)
// struct FUniqueNetIdRepl*       B                              (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::STATIC_EqualEqual_NetIdNetId(struct FUniqueNetIdRepl* A, struct FUniqueNetIdRepl* B)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.EqualEqual_NetIdNetId");

	UFGNetworkLibrary_EqualEqual_NetIdNetId_Params params;
	params.A = A;
	params.B = B;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNetworkLibrary.CheckIsCompatibleVersion
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFGOnlineSessionSettings* session                        (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGNetworkLibrary::STATIC_CheckIsCompatibleVersion(struct FFGOnlineSessionSettings* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNetworkLibrary.CheckIsCompatibleVersion");

	UFGNetworkLibrary_CheckIsCompatibleVersion_Params params;
	params.session = session;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNobeliskDetonator.Server_StartDetonations
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFGNobeliskDetonator::Server_StartDetonations()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.Server_StartDetonations");

	AFGNobeliskDetonator_Server_StartDetonations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.Server_SpawnExplosive
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FTransform*             SpawnTransform                 (Parm, IsPlainOldData)
// int*                           throwForce                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGNobeliskDetonator::Server_SpawnExplosive(struct FTransform* SpawnTransform, int* throwForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.Server_SpawnExplosive");

	AFGNobeliskDetonator_Server_SpawnExplosive_Params params;
	params.SpawnTransform = SpawnTransform;
	params.throwForce = throwForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.Server_ExecuteSecondaryFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFGNobeliskDetonator::Server_ExecuteSecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.Server_ExecuteSecondaryFire");

	AFGNobeliskDetonator_Server_ExecuteSecondaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.Server_ExecutePrimaryFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFGNobeliskDetonator::Server_ExecutePrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.Server_ExecutePrimaryFire");

	AFGNobeliskDetonator_Server_ExecutePrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.OnViewportFocusChanged
// (Final, Native, Protected)
// Parameters:
// bool*                          IsOpen                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 interactionClass               (Parm, ZeroConstructor, IsPlainOldData)

void AFGNobeliskDetonator::OnViewportFocusChanged(bool* IsOpen, class UClass** interactionClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.OnViewportFocusChanged");

	AFGNobeliskDetonator_OnViewportFocusChanged_Params params;
	params.IsOpen = IsOpen;
	params.interactionClass = interactionClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.OnSecondaryFirePressed
// (Native, Event, Protected, BlueprintEvent)

void AFGNobeliskDetonator::OnSecondaryFirePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.OnSecondaryFirePressed");

	AFGNobeliskDetonator_OnSecondaryFirePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.GetChargePct
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGNobeliskDetonator::GetChargePct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.GetChargePct");

	AFGNobeliskDetonator_GetChargePct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGNobeliskDetonator.ExecuteSecondaryFire
// (Final, Native, Protected, BlueprintCallable)

void AFGNobeliskDetonator::ExecuteSecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.ExecuteSecondaryFire");

	AFGNobeliskDetonator_ExecuteSecondaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonator.ExecutePrimaryFire
// (Final, Native, Protected, BlueprintCallable)

void AFGNobeliskDetonator::ExecutePrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonator.ExecutePrimaryFire");

	AFGNobeliskDetonator_ExecutePrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponAttachment.PlayFireEffect
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                flashLocation                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGWeaponAttachment::PlayFireEffect(struct FVector* flashLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponAttachment.PlayFireEffect");

	AFGWeaponAttachment_PlayFireEffect_Params params;
	params.flashLocation = flashLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponAttachment.Multicast_SetFlashLocation
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector*                newFlashLocation               (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFGWeaponAttachment::Multicast_SetFlashLocation(struct FVector* newFlashLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponAttachment.Multicast_SetFlashLocation");

	AFGWeaponAttachment_Multicast_SetFlashLocation_Params params;
	params.newFlashLocation = newFlashLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponAttachment.Multicast_PlayReloadEffectMulticast
// (Net, Native, Event, NetMulticast, Public)

void AFGWeaponAttachment::Multicast_PlayReloadEffectMulticast()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponAttachment.Multicast_PlayReloadEffectMulticast");

	AFGWeaponAttachment_Multicast_PlayReloadEffectMulticast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponAttachment.ClientPlayReloadEffect
// (Event, Public, BlueprintEvent)

void AFGWeaponAttachment::ClientPlayReloadEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponAttachment.ClientPlayReloadEffect");

	AFGWeaponAttachment_ClientPlayReloadEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonatorAttachment.OnIsLoadedSet
// (Event, Public, BlueprintEvent)

void AFGNobeliskDetonatorAttachment::OnIsLoadedSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonatorAttachment.OnIsLoadedSet");

	AFGNobeliskDetonatorAttachment_OnIsLoadedSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskDetonatorAttachment.Multicast_SetIsLoaded
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// bool*                          isLoaded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGNobeliskDetonatorAttachment::Multicast_SetIsLoaded(bool* isLoaded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskDetonatorAttachment.Multicast_SetIsLoaded");

	AFGNobeliskDetonatorAttachment_Multicast_SetIsLoaded_Params params;
	params.isLoaded = isLoaded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskExplosive.OnRep_DetonateIn
// (Final, Native, Public)

void AFGNobeliskExplosive::OnRep_DetonateIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskExplosive.OnRep_DetonateIn");

	AFGNobeliskExplosive_OnRep_DetonateIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskExplosiveAttachment.OnIsLoadedSet
// (Event, Public, BlueprintEvent)

void AFGNobeliskExplosiveAttachment::OnIsLoadedSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskExplosiveAttachment.OnIsLoadedSet");

	AFGNobeliskExplosiveAttachment_OnIsLoadedSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskExplosiveAttachment.OnBeginFireEffect
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGNobeliskExplosiveAttachment::OnBeginFireEffect(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskExplosiveAttachment.OnBeginFireEffect");

	AFGNobeliskExplosiveAttachment_OnBeginFireEffect_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskExplosiveAttachment.Multicast_SetIsLoaded
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// bool*                          isLoaded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGNobeliskExplosiveAttachment::Multicast_SetIsLoaded(bool* isLoaded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskExplosiveAttachment.Multicast_SetIsLoaded");

	AFGNobeliskExplosiveAttachment_Multicast_SetIsLoaded_Params params;
	params.isLoaded = isLoaded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGNobeliskExplosiveAttachment.Multicast_PlayBeginFireEffect
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AFGNobeliskExplosiveAttachment::Multicast_PlayBeginFireEffect(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGNobeliskExplosiveAttachment.Multicast_PlayBeginFireEffect");

	AFGNobeliskExplosiveAttachment_Multicast_PlayBeginFireEffect_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScanner.UpdateScannerVisuals
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          wasChange                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGObjectScanner::UpdateScannerVisuals(bool* wasChange)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.UpdateScannerVisuals");

	AFGObjectScanner_UpdateScannerVisuals_Params params;
	params.wasChange = wasChange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScanner.SetScannableEntry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 ScannableClass                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGObjectScanner::SetScannableEntry(class UClass** ScannableClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.SetScannableEntry");

	AFGObjectScanner_SetScannableEntry_Params params;
	params.ScannableClass = ScannableClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScanner.PlayBeep
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          isObjectInRange                (Parm, ZeroConstructor, IsPlainOldData)

void AFGObjectScanner::PlayBeep(bool* isObjectInRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.PlayBeep");

	AFGObjectScanner_PlayBeep_Params params;
	params.isObjectInRange = isObjectInRange;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScanner.IsBeeping
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGObjectScanner::IsBeeping()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.IsBeeping");

	AFGObjectScanner_IsBeeping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScanner.HasValidCurrentDetails
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGObjectScanner::HasValidCurrentDetails()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.HasValidCurrentDetails");

	AFGObjectScanner_HasValidCurrentDetails_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScanner.GetCurrentDetails
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FScannableDetails       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FScannableDetails AFGObjectScanner::GetCurrentDetails()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.GetCurrentDetails");

	AFGObjectScanner_GetCurrentDetails_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScanner.GetAvailableObjectDetails
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FScannableDetails> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FScannableDetails> AFGObjectScanner::GetAvailableObjectDetails()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.GetAvailableObjectDetails");

	AFGObjectScanner_GetAvailableObjectDetails_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScanner.CycleForward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGObjectScanner::CycleForward()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.CycleForward");

	AFGObjectScanner_CycleForward_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScanner.CycleBackward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGObjectScanner::CycleBackward()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScanner.CycleBackward");

	AFGObjectScanner_CycleBackward_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScannerAttachment.UpdateScannerVisuals
// (Event, Protected, BlueprintEvent)

void AFGObjectScannerAttachment::UpdateScannerVisuals()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScannerAttachment.UpdateScannerVisuals");

	AFGObjectScannerAttachment_UpdateScannerVisuals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScannerAttachment.OnRep_ScannerLightColor
// (Final, Native, Private)

void AFGObjectScannerAttachment::OnRep_ScannerLightColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScannerAttachment.OnRep_ScannerLightColor");

	AFGObjectScannerAttachment_OnRep_ScannerLightColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScannerAttachment.OnRep_IsBeeping
// (Final, Native, Private)

void AFGObjectScannerAttachment::OnRep_IsBeeping()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScannerAttachment.OnRep_IsBeeping");

	AFGObjectScannerAttachment_OnRep_IsBeeping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGObjectScannerAttachment.IsBeeping
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGObjectScannerAttachment::IsBeeping()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScannerAttachment.IsBeeping");

	AFGObjectScannerAttachment_IsBeeping_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGObjectScannerAttachment.GetScannerLightColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FColor AFGObjectScannerAttachment::GetScannerLightColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGObjectScannerAttachment.GetScannerLightColor");

	AFGObjectScannerAttachment_GetScannerLightColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGOptionsLibrary.GetDynamicOptionsWidgets
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget**            owningWidget                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// EOptionCategory*               Category                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UFGDynamicOptionsRow*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UFGDynamicOptionsRow*> UFGOptionsLibrary::STATIC_GetDynamicOptionsWidgets(class UUserWidget** owningWidget, EOptionCategory* Category)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOptionsLibrary.GetDynamicOptionsWidgets");

	UFGOptionsLibrary_GetDynamicOptionsWidgets_Params params;
	params.owningWidget = owningWidget;
	params.Category = Category;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGOptionsValueController.OnRowUnhovered
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGOptionsValueController::OnRowUnhovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOptionsValueController.OnRowUnhovered");

	UFGOptionsValueController_OnRowUnhovered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOptionsValueController.OnRowHovered
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGOptionsValueController::OnRowHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOptionsValueController.OnRowHovered");

	UFGOptionsValueController_OnRowHovered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOptionsValueController.OnOptionValueUpdated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGOptionsValueController::OnOptionValueUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOptionsValueController.OnOptionValueUpdated");

	UFGOptionsValueController_OnOptionValueUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOptionsValueController.OnInitValueController
// (Event, Public, BlueprintEvent)

void UFGOptionsValueController::OnInitValueController()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOptionsValueController.OnInitValueController");

	UFGOptionsValueController_OnInitValueController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOptionsValueController.GetNewSelectionKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                 currentKey                     (Parm, ZeroConstructor)
// bool*                          incrementSelection             (Parm, ZeroConstructor, IsPlainOldData)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGOptionsValueController::GetNewSelectionKey(class FString* currentKey, bool* incrementSelection)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOptionsValueController.GetNewSelectionKey");

	UFGOptionsValueController_GetNewSelectionKey_Params params;
	params.currentKey = currentKey;
	params.incrementSelection = incrementSelection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGOutlineComponent.UpdateProxyOutlineMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMesh**            newOutlineMesh                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGOutlineComponent::UpdateProxyOutlineMesh(class UStaticMesh** newOutlineMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.UpdateProxyOutlineMesh");

	UFGOutlineComponent_UpdateProxyOutlineMesh_Params params;
	params.newOutlineMesh = newOutlineMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.UpdateProxyOutlineLocationAndRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                NewLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               NewRotation                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGOutlineComponent::UpdateProxyOutlineLocationAndRotation(struct FVector* NewLocation, struct FRotator* NewRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.UpdateProxyOutlineLocationAndRotation");

	UFGOutlineComponent_UpdateProxyOutlineLocationAndRotation_Params params;
	params.NewLocation = NewLocation;
	params.NewRotation = NewRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.ShowProxyOutline
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UStaticMesh**            outlineMesh                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (ConstParm, Parm, IsPlainOldData)
// EOutlineColor*                 Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGOutlineComponent::ShowProxyOutline(class UStaticMesh** outlineMesh, struct FTransform* Transform, EOutlineColor* Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.ShowProxyOutline");

	UFGOutlineComponent_ShowProxyOutline_Params params;
	params.outlineMesh = outlineMesh;
	params.Transform = Transform;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.ShowOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 actorToOutline                 (Parm, ZeroConstructor, IsPlainOldData)
// EOutlineColor*                 Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGOutlineComponent::ShowOutline(class AActor** actorToOutline, EOutlineColor* Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.ShowOutline");

	UFGOutlineComponent_ShowOutline_Params params;
	params.actorToOutline = actorToOutline;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.ShowMultiActorOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>*         actorsToOutline                (Parm, ZeroConstructor)
// EOutlineColor*                 Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGOutlineComponent::ShowMultiActorOutline(TArray<class AActor*>* actorsToOutline, EOutlineColor* Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.ShowMultiActorOutline");

	UFGOutlineComponent_ShowMultiActorOutline_Params params;
	params.actorsToOutline = actorsToOutline;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.IsOutlineVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGOutlineComponent::IsOutlineVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.IsOutlineVisible");

	UFGOutlineComponent_IsOutlineVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGOutlineComponent.HideOutline
// (Final, Native, Public, BlueprintCallable)

void UFGOutlineComponent::HideOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.HideOutline");

	UFGOutlineComponent_HideOutline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGOutlineComponent.GetOutlineColor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOutlineColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EOutlineColor UFGOutlineComponent::GetOutlineColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGOutlineComponent.GetOutlineColor");

	UFGOutlineComponent_GetOutlineColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGParachute.OnDeployStop
// (Event, Protected, BlueprintEvent)

void AFGParachute::OnDeployStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachute.OnDeployStop");

	AFGParachute_OnDeployStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGParachute.OnDeployed
// (Event, Protected, BlueprintEvent)

void AFGParachute::OnDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachute.OnDeployed");

	AFGParachute_OnDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGParachute.ModifyVelocity
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                OldVelocity                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AFGParachute::ModifyVelocity(float* DeltaTime, struct FVector* OldVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachute.ModifyVelocity");

	AFGParachute_ModifyVelocity_Params params;
	params.DeltaTime = DeltaTime;
	params.OldVelocity = OldVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGParachute.IsDeployed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGParachute::IsDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachute.IsDeployed");

	AFGParachute_IsDeployed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGParachuteAttachment.OnRep_IsDeployed
// (Final, Native, Protected)

void AFGParachuteAttachment::OnRep_IsDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachuteAttachment.OnRep_IsDeployed");

	AFGParachuteAttachment_OnRep_IsDeployed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGParachuteAttachment.OnDeployStop
// (Event, Protected, BlueprintEvent)

void AFGParachuteAttachment::OnDeployStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachuteAttachment.OnDeployStop");

	AFGParachuteAttachment_OnDeployStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGParachuteAttachment.OnDeployed
// (Event, Protected, BlueprintEvent)

void AFGParachuteAttachment::OnDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGParachuteAttachment.OnDeployed");

	AFGParachuteAttachment_OnDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPassengerSeat.UpdateCamera
// (Event, Protected, BlueprintEvent)

void AFGPassengerSeat::UpdateCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPassengerSeat.UpdateCamera");

	AFGPassengerSeat_UpdateCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPassengerSeat.GetOuterVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGVehicle*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGVehicle* AFGPassengerSeat::GetOuterVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPassengerSeat.GetOuterVehicle");

	AFGPassengerSeat_GetOuterVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeAttachmentSnapTargetInterface.IsValidSnapTargetForAttachment
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass**                 attachmentClass                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPipeAttachmentSnapTargetInterface::IsValidSnapTargetForAttachment(class UClass** attachmentClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeAttachmentSnapTargetInterface.IsValidSnapTargetForAttachment");

	UFGPipeAttachmentSnapTargetInterface_IsValidSnapTargetForAttachment_Params params;
	params.attachmentClass = attachmentClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeBuilder.SpawnHolograms
// (Final, Native, Public, BlueprintCallable)

void AFGPipeBuilder::SpawnHolograms()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.SpawnHolograms");

	AFGPipeBuilder_SpawnHolograms_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeBuilder.SetupSplineAndSupport
// (Final, Native, Public, BlueprintCallable)

void AFGPipeBuilder::SetupSplineAndSupport()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.SetupSplineAndSupport");

	AFGPipeBuilder_SetupSplineAndSupport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeBuilder.SetRecipeFromIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           newIndex                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGPipeBuilder::SetRecipeFromIndex(int* newIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.SetRecipeFromIndex");

	AFGPipeBuilder_SetRecipeFromIndex_Params params;
	params.newIndex = newIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeBuilder.SetHologramsActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsActive                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGPipeBuilder::SetHologramsActive(bool* IsActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.SetHologramsActive");

	AFGPipeBuilder_SetHologramsActive_Params params;
	params.IsActive = IsActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeBuilder.Server_UpdateHitResult
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FHitResult*             inHitResult                    (Parm, IsPlainOldData)

void AFGPipeBuilder::Server_UpdateHitResult(struct FHitResult* inHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.Server_UpdateHitResult");

	AFGPipeBuilder_Server_UpdateHitResult_Params params;
	params.inHitResult = inHitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeBuilder.Server_SecondaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFGPipeBuilder::Server_SecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.Server_SecondaryFire");

	AFGPipeBuilder_Server_SecondaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeBuilder.Server_PrimaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFGPipeBuilder::Server_PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.Server_PrimaryFire");

	AFGPipeBuilder_Server_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeBuilder.OnSecondaryFirePressed
// (Final, Native, Public, BlueprintCallable)

void AFGPipeBuilder::OnSecondaryFirePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.OnSecondaryFirePressed");

	AFGPipeBuilder_OnSecondaryFirePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeBuilder.OnPrimaryFirePressed
// (Final, Native, Public, BlueprintCallable)

void AFGPipeBuilder::OnPrimaryFirePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.OnPrimaryFirePressed");

	AFGPipeBuilder_OnPrimaryFirePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeBuilder.GetTrail
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGPipeBuilderTrail*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGPipeBuilderTrail* AFGPipeBuilder::GetTrail()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.GetTrail");

	AFGPipeBuilder_GetTrail_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeBuilder.GetRecipeIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPipeBuilder::GetRecipeIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.GetRecipeIndex");

	AFGPipeBuilder_GetRecipeIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeBuilder.GetPipeSupportLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* AFGPipeBuilder::GetPipeSupportLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.GetPipeSupportLocation");

	AFGPipeBuilder_GetPipeSupportLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeBuilder.ClearSplineAndSupport
// (Final, Native, Public, BlueprintCallable)

void AFGPipeBuilder::ClearSplineAndSupport()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilder.ClearSplineAndSupport");

	AFGPipeBuilder_ClearSplineAndSupport_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeBuilderTrail.EffectDone
// (Final, Native, Public, BlueprintCallable)

void AFGPipeBuilderTrail::EffectDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeBuilderTrail.EffectDone");

	AFGPipeBuilderTrail_EffectDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeConnectionComponentBase.IsConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPipeConnectionComponentBase::IsConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeConnectionComponentBase.IsConnected");

	UFGPipeConnectionComponentBase_IsConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeConnectionComponentBase.GetConnectorClearance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPipeConnectionComponentBase::GetConnectorClearance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeConnectionComponentBase.GetConnectorClearance");

	UFGPipeConnectionComponentBase_GetConnectorClearance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeConnectionComponentBase.GetConnection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPipeConnectionComponentBase* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPipeConnectionComponentBase* UFGPipeConnectionComponentBase::GetConnection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeConnectionComponentBase.GetConnection");

	UFGPipeConnectionComponentBase_GetConnection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeConnectionComponent.OnRep_FluidDescriptor
// (Final, Native, Private)

void UFGPipeConnectionComponent::OnRep_FluidDescriptor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeConnectionComponent.OnRep_FluidDescriptor");

	UFGPipeConnectionComponent_OnRep_FluidDescriptor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeConnectionComponent.GetPipeConnection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPipeConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPipeConnectionComponent* UFGPipeConnectionComponent::GetPipeConnection()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeConnectionComponent.GetPipeConnection");

	UFGPipeConnectionComponent_GetPipeConnection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeHyperInterface.OnPipeMove
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFGCharacterMovementComponent** charMove                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGPipeHyperInterface::OnPipeMove(class UFGCharacterMovementComponent** charMove, float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeHyperInterface.OnPipeMove");

	UFGPipeHyperInterface_OnPipeMove_Params params;
	params.charMove = charMove;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeHyperInterface.OnPipeEnter
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFGCharacterMovementComponent** charMove                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UFGPipeConnectionComponentBase** connectionEnteredThrough       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 fromPipe                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPipeHyperInterface::OnPipeEnter(class UFGCharacterMovementComponent** charMove, class UFGPipeConnectionComponentBase** connectionEnteredThrough, class AActor** fromPipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeHyperInterface.OnPipeEnter");

	UFGPipeHyperInterface_OnPipeEnter_Params params;
	params.charMove = charMove;
	params.connectionEnteredThrough = connectionEnteredThrough;
	params.fromPipe = fromPipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeHyperInterface.GetPipeProgressOfConnection
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFGPipeConnectionComponentBase** connectionEnteredThrough       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPipeHyperInterface::GetPipeProgressOfConnection(class UFGPipeConnectionComponentBase** connectionEnteredThrough)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeHyperInterface.GetPipeProgressOfConnection");

	UFGPipeHyperInterface_GetPipeProgressOfConnection_Params params;
	params.connectionEnteredThrough = connectionEnteredThrough;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipelineFlowIndicatorComponent.OnFluidDescriptorSet
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UClass**                 fluidDescriptor                (Parm, ZeroConstructor, IsPlainOldData)

void UFGPipelineFlowIndicatorComponent::OnFluidDescriptorSet(class UClass** fluidDescriptor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipelineFlowIndicatorComponent.OnFluidDescriptorSet");

	UFGPipelineFlowIndicatorComponent_OnFluidDescriptorSet_Params params;
	params.fluidDescriptor = fluidDescriptor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipelineFlowIndicatorComponent.GetPipeline
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGBuildablePipeline*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildablePipeline* UFGPipelineFlowIndicatorComponent::GetPipeline()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipelineFlowIndicatorComponent.GetPipeline");

	UFGPipelineFlowIndicatorComponent_GetPipeline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipelineHologram.UpdateSplineComponent
// (Final, Native, Private)

void AFGPipelineHologram::UpdateSplineComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipelineHologram.UpdateSplineComponent");

	AFGPipelineHologram_UpdateSplineComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipelineSupportHologram.OnRep_SupportMesh
// (Final, Native, Private)

void AFGPipelineSupportHologram::OnRep_SupportMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipelineSupportHologram.OnRep_SupportMesh");

	AFGPipelineSupportHologram_OnRep_SupportMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipePartHologram.OnRep_SupportMesh
// (Final, Native, Private)

void AFGPipePartHologram::OnRep_SupportMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipePartHologram.OnRep_SupportMesh");

	AFGPipePartHologram_OnRep_SupportMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeSubsystem.TrySetNetworkFluidDescriptor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           networkID                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 fluidDescriptor                (Parm, ZeroConstructor, IsPlainOldData)

void AFGPipeSubsystem::TrySetNetworkFluidDescriptor(int* networkID, class UClass** fluidDescriptor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeSubsystem.TrySetNetworkFluidDescriptor");

	AFGPipeSubsystem_TrySetNetworkFluidDescriptor_Params params;
	params.networkID = networkID;
	params.fluidDescriptor = fluidDescriptor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeSubsystem.GetPipeSubsystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGPipeSubsystem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGPipeSubsystem* AFGPipeSubsystem::STATIC_GetPipeSubsystem(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeSubsystem.GetPipeSubsystem");

	AFGPipeSubsystem_GetPipeSubsystem_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPipeSubsystem.FlushPipeNetworkFromIntegrant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 integrantActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGPipeSubsystem::FlushPipeNetworkFromIntegrant(class AActor** integrantActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeSubsystem.FlushPipeNetworkFromIntegrant");

	AFGPipeSubsystem_FlushPipeNetworkFromIntegrant_Params params;
	params.integrantActor = integrantActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeSubsystem.FlushIntegrant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 integrantActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGPipeSubsystem::FlushIntegrant(class AActor** integrantActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeSubsystem.FlushIntegrant");

	AFGPipeSubsystem_FlushIntegrant_Params params;
	params.integrantActor = integrantActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPipeSubsystem.FindPipeNetwork
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// int*                           networkID                      (Parm, ZeroConstructor, IsPlainOldData)
// class AFGPipeNetwork*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGPipeNetwork* AFGPipeSubsystem::FindPipeNetwork(int* networkID)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPipeSubsystem.FindPipeNetwork");

	AFGPipeSubsystem_FindPipeNetwork_Params params;
	params.networkID = networkID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlanet.UpdatePreview
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGPlanet::UpdatePreview()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlanet.UpdatePreview");

	AFGPlanet_UpdatePreview_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.SetOnlyShowAffordableRecipes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::SetOnlyShowAffordableRecipes(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.SetOnlyShowAffordableRecipes");

	AFGPlayerState_SetOnlyShowAffordableRecipes_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.SetLastSelectedResourceSinkShopCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 selectedCategory               (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::SetLastSelectedResourceSinkShopCategory(class UClass** selectedCategory)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.SetLastSelectedResourceSinkShopCategory");

	AFGPlayerState_SetLastSelectedResourceSinkShopCategory_Params params;
	params.selectedCategory = selectedCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.SetItemCategoryCollapsed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 itemCategory                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          collapsed                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::SetItemCategoryCollapsed(class UClass** itemCategory, bool* collapsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.SetItemCategoryCollapsed");

	AFGPlayerState_SetItemCategoryCollapsed_Params params;
	params.itemCategory = itemCategory;
	params.collapsed = collapsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.Server_SetOnlyShowAffordableRecipes
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::Server_SetOnlyShowAffordableRecipes(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.Server_SetOnlyShowAffordableRecipes");

	AFGPlayerState_Server_SetOnlyShowAffordableRecipes_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.Server_SetMapFilter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// ERepresentationType*           representationType             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          visible                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::Server_SetMapFilter(ERepresentationType* representationType, bool* visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.Server_SetMapFilter");

	AFGPlayerState_Server_SetMapFilter_Params params;
	params.representationType = representationType;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.Server_SetItemCategoryCollapsed
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UClass**                 itemCategory                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          collapsed                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::Server_SetItemCategoryCollapsed(class UClass** itemCategory, bool* collapsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.Server_SetItemCategoryCollapsed");

	AFGPlayerState_Server_SetItemCategoryCollapsed_Params params;
	params.itemCategory = itemCategory;
	params.collapsed = collapsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.Server_SetCompassFilter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// ERepresentationType*           representationType             (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          visible                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::Server_SetCompassFilter(ERepresentationType* representationType, bool* visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.Server_SetCompassFilter");

	AFGPlayerState_Server_SetCompassFilter_Params params;
	params.representationType = representationType;
	params.visible = visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.Server_RemoveRecipe
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::Server_RemoveRecipe(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.Server_RemoveRecipe");

	AFGPlayerState_Server_RemoveRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.RemoveRecipe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::RemoveRecipe(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.RemoveRecipe");

	AFGPlayerState_RemoveRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.RemoveMessage
// (Final, Native, Public)
// Parameters:
// class UClass**                 inMessage                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::RemoveMessage(class UClass** inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.RemoveMessage");

	AFGPlayerState_RemoveMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.ReadMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inMessage                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::ReadMessage(class UClass** inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.ReadMessage");

	AFGPlayerState_ReadMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.OnRep_HotbarShortcuts
// (Final, Native, Protected)

void AFGPlayerState::OnRep_HotbarShortcuts()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.OnRep_HotbarShortcuts");

	AFGPlayerState_OnRep_HotbarShortcuts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.IsServerAdmin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerState::IsServerAdmin()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.IsServerAdmin");

	AFGPlayerState_IsServerAdmin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetUsername
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGPlayerState::GetUsername()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetUsername");

	AFGPlayerState_GetUsername_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetUserID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGPlayerState::GetUserID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetUserID");

	AFGPlayerState_GetUserID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetUniqeNetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUniqueNetIdRepl        ReturnValue                    (Parm, OutParm, ReturnParm)

struct FUniqueNetIdRepl AFGPlayerState::GetUniqeNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetUniqeNetId");

	AFGPlayerState_GetUniqeNetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetTutorialSubsystem
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGTutorialSubsystem*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGTutorialSubsystem* AFGPlayerState::GetTutorialSubsystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetTutorialSubsystem");

	AFGPlayerState_GetTutorialSubsystem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetSteamID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString AFGPlayerState::GetSteamID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetSteamID");

	AFGPlayerState_GetSteamID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetSlotNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerState::GetSlotNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetSlotNum");

	AFGPlayerState_GetSlotNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetPingColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AFGPlayerState::GetPingColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetPingColor");

	AFGPlayerState_GetPingColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetOnlyShowAffordableRecipes
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPlayerState::GetOnlyShowAffordableRecipes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetOnlyShowAffordableRecipes");

	AFGPlayerState_GetOnlyShowAffordableRecipes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetNumArmSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGPlayerState::GetNumArmSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetNumArmSlots");

	AFGPlayerState_GetNumArmSlots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetNametagColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AFGPlayerState::GetNametagColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetNametagColor");

	AFGPlayerState_GetNametagColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetLastSelectedResourceSinkShopCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGPlayerState::GetLastSelectedResourceSinkShopCategory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetLastSelectedResourceSinkShopCategory");

	AFGPlayerState_GetLastSelectedResourceSinkShopCategory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetCollapsedItemCategories
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGPlayerState::GetCollapsedItemCategories()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetCollapsedItemCategories");

	AFGPlayerState_GetCollapsedItemCategories_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetAllMessages
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EMessageType*                  MessageType                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGPlayerState::GetAllMessages(EMessageType* MessageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetAllMessages");

	AFGPlayerState_GetAllMessages_Params params;
	params.MessageType = MessageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.GetAllMessageData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FMessageData>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FMessageData> AFGPlayerState::GetAllMessageData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.GetAllMessageData");

	AFGPlayerState_GetAllMessageData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.CreateShortcut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 shortcutClass                  (Parm, ZeroConstructor, IsPlainOldData)
// class UFGHotbarShortcut*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGHotbarShortcut* AFGPlayerState::CreateShortcut(class UClass** shortcutClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.CreateShortcut");

	AFGPlayerState_CreateShortcut_Params params;
	params.shortcutClass = shortcutClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPlayerState.AddMessage
// (Final, Native, Public)
// Parameters:
// class UClass**                 inMessage                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::AddMessage(class UClass** inMessage)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.AddMessage");

	AFGPlayerState_AddMessage_Params params;
	params.inMessage = inMessage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPlayerState.AddArmSlots
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           slotsToAdd                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGPlayerState::AddArmSlots(int* slotsToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPlayerState.AddArmSlots");

	AFGPlayerState_AddArmSlots_Params params;
	params.slotsToAdd = slotsToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPoleDescriptor.GetHeightMeshes
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FPoleHeightMesh> out_heightMeshes               (Parm, OutParm, ZeroConstructor)

void UFGPoleDescriptor::STATIC_GetHeightMeshes(class UClass** inClass, TArray<struct FPoleHeightMesh>* out_heightMeshes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPoleDescriptor.GetHeightMeshes");

	UFGPoleDescriptor_GetHeightMeshes_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_heightMeshes != nullptr)
		*out_heightMeshes = params.out_heightMeshes;
}


// Function FactoryGame.FGPopupInstigatorInterface.WidgetFactory
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass**                 PopupClass                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UUserWidget*>     out_widgets                    (Parm, OutParm, ZeroConstructor)

void UFGPopupInstigatorInterface::WidgetFactory(class UClass** PopupClass, TArray<class UUserWidget*>* out_widgets)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupInstigatorInterface.WidgetFactory");

	UFGPopupInstigatorInterface_WidgetFactory_Params params;
	params.PopupClass = PopupClass;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_widgets != nullptr)
		*out_widgets = params.out_widgets;
}


// Function FactoryGame.FGPopupInstigatorInterface.NotifyPopupClosed
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass**                 PopupClass                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           exitCode                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGPopupInstigatorInterface::NotifyPopupClosed(class UClass** PopupClass, int* exitCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupInstigatorInterface.NotifyPopupClosed");

	UFGPopupInstigatorInterface_NotifyPopupClosed_Params params;
	params.PopupClass = PopupClass;
	params.exitCode = exitCode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidget.CallPopupConfirmClicked
// (Final, Native, Public, BlueprintCallable)

void UFGPopupWidget::CallPopupConfirmClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidget.CallPopupConfirmClicked");

	UFGPopupWidget_CallPopupConfirmClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidget.CallPopupClosedClicked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          confirm                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGPopupWidget::CallPopupClosedClicked(bool* confirm)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidget.CallPopupClosedClicked");

	UFGPopupWidget_CallPopupClosedClicked_Params params;
	params.confirm = confirm;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidgetContent.SetOptionalTextElements
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FText*                  Title                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText*                  Desc                           (ConstParm, Parm, OutParm, ReferenceParm)

void UFGPopupWidgetContent::SetOptionalTextElements(struct FText* Title, struct FText* Desc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidgetContent.SetOptionalTextElements");

	UFGPopupWidgetContent_SetOptionalTextElements_Params params;
	params.Title = Title;
	params.Desc = Desc;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidgetContent.SetInstigatorAndInitialize
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject**                Instigator                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGPopupWidgetContent::SetInstigatorAndInitialize(class UObject** Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidgetContent.SetInstigatorAndInitialize");

	UFGPopupWidgetContent_SetInstigatorAndInitialize_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidgetContent.NotifyPopupConfirmed
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGPopupWidgetContent::NotifyPopupConfirmed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidgetContent.NotifyPopupConfirmed");

	UFGPopupWidgetContent_NotifyPopupConfirmed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidgetContent.NotifyPopupCanceled
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFGPopupWidgetContent::NotifyPopupCanceled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidgetContent.NotifyPopupCanceled");

	UFGPopupWidgetContent_NotifyPopupCanceled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPopupWidgetContent.GetShouldOkayBeEnabled
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPopupWidgetContent::GetShouldOkayBeEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPopupWidgetContent.GetShouldOkayBeEnabled");

	UFGPopupWidgetContent_GetShouldOkayBeEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMiner.OnRep_IsProducing
// (Final, Native, Private)

void AFGPortableMiner::OnRep_IsProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.OnRep_IsProducing");

	AFGPortableMiner_OnRep_IsProducing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPortableMiner.IsProducing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPortableMiner::IsProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.IsProducing");

	AFGPortableMiner_IsProducing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMiner.GetOutputInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGPortableMiner::GetOutputInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.GetOutputInventory");

	AFGPortableMiner_GetOutputInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMiner.GetExtractionProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGPortableMiner::GetExtractionProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.GetExtractionProgress");

	AFGPortableMiner_GetExtractionProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMiner.GetDismantleInventoryReturns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FInventoryStack> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FInventoryStack> AFGPortableMiner::GetDismantleInventoryReturns()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.GetDismantleInventoryReturns");

	AFGPortableMiner_GetDismantleInventoryReturns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMiner.CanProduce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGPortableMiner::CanProduce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMiner.CanProduce");

	AFGPortableMiner_CanProduce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPortableMinerDispenser.SpawnPortableMiner
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFGResourceNode**        resourceNode                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGPortableMinerDispenser::SpawnPortableMiner(class AFGResourceNode** resourceNode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMinerDispenser.SpawnPortableMiner");

	AFGPortableMinerDispenser_SpawnPortableMiner_Params params;
	params.resourceNode = resourceNode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPortableMinerDispenser.Server_PrimaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFGPortableMinerDispenser::Server_PrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPortableMinerDispenser.Server_PrimaryFire");

	AFGPortableMinerDispenser_Server_PrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerCircuit.ResetFuse
// (Final, Native, Public, BlueprintCallable)

void UFGPowerCircuit::ResetFuse()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuit.ResetFuse");

	UFGPowerCircuit_ResetFuse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerCircuit.IsFuseTriggered
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPowerCircuit::IsFuseTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuit.IsFuseTriggered");

	UFGPowerCircuit_IsFuseTriggered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerCircuit.GetStats
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPowerCircuitStats      out_stats                      (Parm, OutParm)

void UFGPowerCircuit::GetStats(struct FPowerCircuitStats* out_stats)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuit.GetStats");

	UFGPowerCircuit_GetStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stats != nullptr)
		*out_stats = params.out_stats;
}


// Function FactoryGame.FGPowerCircuit.GetNumGraphPoint
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPowerCircuitStats*     stats                          (ConstParm, Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGPowerCircuit::STATIC_GetNumGraphPoint(struct FPowerCircuitStats* stats)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuit.GetNumGraphPoint");

	UFGPowerCircuit_GetNumGraphPoint_Params params;
	params.stats = stats;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerCircuit.GetGraphPointAtIndex
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPowerCircuitStats*     stats                          (ConstParm, Parm, OutParm, ReferenceParm)
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FPowerGraphPoint        out_item                       (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPowerCircuit::STATIC_GetGraphPointAtIndex(struct FPowerCircuitStats* stats, int* idx, struct FPowerGraphPoint* out_item)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuit.GetGraphPointAtIndex");

	UFGPowerCircuit_GetGraphPointAtIndex_Params params;
	params.stats = stats;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_item != nullptr)
		*out_item = params.out_item;

	return params.ReturnValue;
}


// DelegateFunction FactoryGame.FGPowerCircuitWidget.GetPowerCircuit__DelegateSignature
// (Public, Delegate)
// Parameters:
// class UFGPowerCircuit*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGPowerCircuit* UFGPowerCircuitWidget::GetPowerCircuit__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction FactoryGame.FGPowerCircuitWidget.GetPowerCircuit__DelegateSignature");

	UFGPowerCircuitWidget_GetPowerCircuit__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerCircuitWidget.GetPowerCircuit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPowerCircuit*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGPowerCircuit* UFGPowerCircuitWidget::GetPowerCircuit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerCircuitWidget.GetPowerCircuit");

	UFGPowerCircuitWidget_GetPowerCircuit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerConnectionComponent.SetPowerInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGPowerInfoComponent**  powerInfo                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGPowerConnectionComponent::SetPowerInfo(class UFGPowerInfoComponent** powerInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerConnectionComponent.SetPowerInfo");

	UFGPowerConnectionComponent_SetPowerInfo_Params params;
	params.powerInfo = powerInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerConnectionComponent.GetPowerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPowerInfoComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGPowerInfoComponent* UFGPowerConnectionComponent::GetPowerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerConnectionComponent.GetPowerInfo");

	UFGPowerConnectionComponent_GetPowerInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerConnectionComponent.GetPowerCircuit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPowerCircuit*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGPowerCircuit* UFGPowerConnectionComponent::GetPowerCircuit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerConnectionComponent.GetPowerCircuit");

	UFGPowerConnectionComponent_GetPowerCircuit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.SetTargetConsumption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newConsumption                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGPowerInfoComponent::SetTargetConsumption(float* newConsumption)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.SetTargetConsumption");

	UFGPowerInfoComponent_SetTargetConsumption_Params params;
	params.newConsumption = newConsumption;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerInfoComponent.SetDynamicProductionCapacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newProduction                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGPowerInfoComponent::SetDynamicProductionCapacity(float* newProduction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.SetDynamicProductionCapacity");

	UFGPowerInfoComponent_SetDynamicProductionCapacity_Params params;
	params.newProduction = newProduction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerInfoComponent.SetBaseProduction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newProduction                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGPowerInfoComponent::SetBaseProduction(float* newProduction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.SetBaseProduction");

	UFGPowerInfoComponent_SetBaseProduction_Params params;
	params.newProduction = newProduction;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGPowerInfoComponent.IsFuseTriggered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPowerInfoComponent::IsFuseTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.IsFuseTriggered");

	UFGPowerInfoComponent_IsFuseTriggered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.IsConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPowerInfoComponent::IsConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.IsConnected");

	UFGPowerInfoComponent_IsConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.HasPower
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGPowerInfoComponent::HasPower()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.HasPower");

	UFGPowerInfoComponent_HasPower_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetTargetConsumption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetTargetConsumption()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetTargetConsumption");

	UFGPowerInfoComponent_GetTargetConsumption_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetRegulatedDynamicProduction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetRegulatedDynamicProduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetRegulatedDynamicProduction");

	UFGPowerInfoComponent_GetRegulatedDynamicProduction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetPowerCircuit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGPowerCircuit*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGPowerCircuit* UFGPowerInfoComponent::GetPowerCircuit()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetPowerCircuit");

	UFGPowerInfoComponent_GetPowerCircuit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetDynamicProductionDemandFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetDynamicProductionDemandFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetDynamicProductionDemandFactor");

	UFGPowerInfoComponent_GetDynamicProductionDemandFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetDynamicProductionCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetDynamicProductionCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetDynamicProductionCapacity");

	UFGPowerInfoComponent_GetDynamicProductionCapacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetBaseProduction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetBaseProduction()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetBaseProduction");

	UFGPowerInfoComponent_GetBaseProduction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGPowerInfoComponent.GetActualConsumption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGPowerInfoComponent::GetActualConsumption()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGPowerInfoComponent.GetActualConsumption");

	UFGPowerInfoComponent_GetActualConsumption_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGProfileSpline.StartProfile
// (Event, Public, BlueprintEvent)

void AFGProfileSpline::StartProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProfileSpline.StartProfile");

	AFGProfileSpline_StartProfile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProximitySubsystem.OnPawnChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn**                  newPawn                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGProximitySubsystem::OnPawnChanged(class APawn** newPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProximitySubsystem.OnPawnChanged");

	AFGProximitySubsystem_OnPawnChanged_Params params;
	params.newPawn = newPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProximitySubsystem.OnEnteredMapArea
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UClass**                 newArea                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGProximitySubsystem::OnEnteredMapArea(class UClass** newArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProximitySubsystem.OnEnteredMapArea");

	AFGProximitySubsystem_OnEnteredMapArea_Params params;
	params.newArea = newArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGProximitySubsystem.GetParticleSystemFromMapArea
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inArea                         (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* AFGProximitySubsystem::GetParticleSystemFromMapArea(class UClass** inArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGProximitySubsystem.GetParticleSystemFromMapArea");

	AFGProximitySubsystem_GetParticleSystemFromMapArea_Params params;
	params.inArea = inArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRadiationInterface.ReceiveRadiation
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// float*                         amount                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageType                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGRadiationInterface::ReceiveRadiation(float* amount, float* Duration, struct FVector* Direction, class UClass** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRadiationInterface.ReceiveRadiation");

	UFGRadiationInterface_ReceiveRadiation_Params params;
	params.amount = amount;
	params.Duration = Duration;
	params.Direction = Direction;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRadioactivitySubsystem.OnActorSpawned
// (Final, Native, Public)
// Parameters:
// class AActor**                 SpawnedActor                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGRadioactivitySubsystem::OnActorSpawned(class AActor** SpawnedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRadioactivitySubsystem.OnActorSpawned");

	AFGRadioactivitySubsystem_OnActorSpawned_Params params;
	params.SpawnedActor = SpawnedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRadioactivitySubsystem.OnActorDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor**                 DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGRadioactivitySubsystem::OnActorDestroyed(class AActor** DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRadioactivitySubsystem.OnActorDestroyed");

	AFGRadioactivitySubsystem_OnActorDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRadioactivitySubsystem.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGRadioactivitySubsystem* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRadioactivitySubsystem* AFGRadioactivitySubsystem::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRadioactivitySubsystem.Get");

	AFGRadioactivitySubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadFunctionLibrary.IsValid
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRailroadTrackPosition* Position                       (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGRailroadFunctionLibrary::STATIC_IsValid(struct FRailroadTrackPosition* Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadFunctionLibrary.IsValid");

	UFGRailroadFunctionLibrary_IsValid_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadFunctionLibrary.GetWorldLocationAndDirection
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRailroadTrackPosition* Position                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FVector                 out_location                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 out_direction                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UFGRailroadFunctionLibrary::STATIC_GetWorldLocationAndDirection(struct FRailroadTrackPosition* Position, struct FVector* out_location, struct FVector* out_direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadFunctionLibrary.GetWorldLocationAndDirection");

	UFGRailroadFunctionLibrary_GetWorldLocationAndDirection_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_location != nullptr)
		*out_location = params.out_location;
	if (out_direction != nullptr)
		*out_direction = params.out_direction;
}


// Function FactoryGame.FGRailroadFunctionLibrary.GetTrack
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRailroadTrackPosition* Position                       (ConstParm, Parm, OutParm, ReferenceParm)
// class AFGBuildableRailroadTrack* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildableRailroadTrack* UFGRailroadFunctionLibrary::STATIC_GetTrack(struct FRailroadTrackPosition* Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadFunctionLibrary.GetTrack");

	UFGRailroadFunctionLibrary_GetTrack_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadFunctionLibrary.DrawDebugTrackPosition
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRailroadTrackPosition* Position                       (ConstParm, Parm, OutParm, ReferenceParm)
// struct FColor*                 Color                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool*                          isPersistentLines              (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailroadFunctionLibrary::STATIC_DrawDebugTrackPosition(struct FRailroadTrackPosition* Position, struct FColor* Color, bool* isPersistentLines)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadFunctionLibrary.DrawDebugTrackPosition");

	UFGRailroadFunctionLibrary_DrawDebugTrackPosition_Params params;
	params.Position = Position;
	params.Color = Color;
	params.isPersistentLines = isPersistentLines;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadSubsystem.GetTrainStations
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// int*                           trackID                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AFGTrainStationIdentifier*> out_stations                   (Parm, OutParm, ZeroConstructor)

void AFGRailroadSubsystem::GetTrainStations(int* trackID, TArray<class AFGTrainStationIdentifier*>* out_stations)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.GetTrainStations");

	AFGRailroadSubsystem_GetTrainStations_Params params;
	params.trackID = trackID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stations != nullptr)
		*out_stations = params.out_stations;
}


// Function FactoryGame.FGRailroadSubsystem.GetTrains
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// int*                           trackID                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AFGTrain*>        out_trains                     (Parm, OutParm, ZeroConstructor)

void AFGRailroadSubsystem::GetTrains(int* trackID, TArray<class AFGTrain*>* out_trains)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.GetTrains");

	AFGRailroadSubsystem_GetTrains_Params params;
	params.trackID = trackID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_trains != nullptr)
		*out_trains = params.out_trains;
}


// Function FactoryGame.FGRailroadSubsystem.GetAllTrainStations
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class AFGTrainStationIdentifier*> out_stations                   (Parm, OutParm, ZeroConstructor)

void AFGRailroadSubsystem::GetAllTrainStations(TArray<class AFGTrainStationIdentifier*>* out_stations)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.GetAllTrainStations");

	AFGRailroadSubsystem_GetAllTrainStations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stations != nullptr)
		*out_stations = params.out_stations;
}


// Function FactoryGame.FGRailroadSubsystem.GetAllTrains
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class AFGTrain*>        out_trains                     (Parm, OutParm, ZeroConstructor)

void AFGRailroadSubsystem::GetAllTrains(TArray<class AFGTrain*>* out_trains)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.GetAllTrains");

	AFGRailroadSubsystem_GetAllTrains_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_trains != nullptr)
		*out_trains = params.out_trains;
}


// Function FactoryGame.FGRailroadSubsystem.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGRailroadSubsystem*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRailroadSubsystem* AFGRailroadSubsystem::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadSubsystem.Get");

	AFGRailroadSubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.SetStops
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FTimeTableStop>* stops                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGRailroadTimeTable::SetStops(TArray<struct FTimeTableStop>* stops)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.SetStops");

	AFGRailroadTimeTable_SetStops_Params params;
	params.stops = stops;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.SetCurrentStop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGRailroadTimeTable::SetCurrentStop(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.SetCurrentStop");

	AFGRailroadTimeTable_SetCurrentStop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadTimeTable.RemoveStop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AFGRailroadTimeTable::RemoveStop(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.RemoveStop");

	AFGRailroadTimeTable_RemoveStop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadTimeTable.IsValidStop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGRailroadTimeTable::IsValidStop(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.IsValidStop");

	AFGRailroadTimeTable_IsValidStop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.IncrementCurrentStop
// (Final, Native, Public, BlueprintCallable)

void AFGRailroadTimeTable::IncrementCurrentStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.IncrementCurrentStop");

	AFGRailroadTimeTable_IncrementCurrentStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadTimeTable.GetStops
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<struct FTimeTableStop>  out_stops                      (Parm, OutParm, ZeroConstructor)

void AFGRailroadTimeTable::GetStops(TArray<struct FTimeTableStop>* out_stops)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.GetStops");

	AFGRailroadTimeTable_GetStops_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_stops != nullptr)
		*out_stops = params.out_stops;
}


// Function FactoryGame.FGRailroadTimeTable.GetStop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FTimeTableStop          ReturnValue                    (Parm, OutParm, ReturnParm)

struct FTimeTableStop AFGRailroadTimeTable::GetStop(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.GetStop");

	AFGRailroadTimeTable_GetStop_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.GetNumStops
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGRailroadTimeTable::GetNumStops()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.GetNumStops");

	AFGRailroadTimeTable_GetNumStops_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.GetMaxNumStops
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGRailroadTimeTable::GetMaxNumStops()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.GetMaxNumStops");

	AFGRailroadTimeTable_GetMaxNumStops_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.GetCurrentStop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGRailroadTimeTable::GetCurrentStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.GetCurrentStop");

	AFGRailroadTimeTable_GetCurrentStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTimeTable.AddStop
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FTimeTableStop*         Stop                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGRailroadTimeTable::AddStop(int* Index, struct FTimeTableStop* Stop)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTimeTable.AddStop");

	AFGRailroadTimeTable_AddStop_Params params;
	params.Index = Index;
	params.Stop = Stop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTrackConnectionComponent.SetSwitchPosition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Position                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailroadTrackConnectionComponent::SetSwitchPosition(int* Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTrackConnectionComponent.SetSwitchPosition");

	UFGRailroadTrackConnectionComponent_SetSwitchPosition_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadTrackConnectionComponent.GetSwitchPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGRailroadTrackConnectionComponent::GetSwitchPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTrackConnectionComponent.GetSwitchPosition");

	UFGRailroadTrackConnectionComponent_GetSwitchPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTrackConnectionComponent.GetNumSwitchPositions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGRailroadTrackConnectionComponent::GetNumSwitchPositions()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTrackConnectionComponent.GetNumSwitchPositions");

	UFGRailroadTrackConnectionComponent_GetNumSwitchPositions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailroadTrackConnectionComponent.GetConnection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Position                       (Parm, ZeroConstructor, IsPlainOldData)
// class UFGRailroadTrackConnectionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGRailroadTrackConnectionComponent* UFGRailroadTrackConnectionComponent::GetConnection(int* Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadTrackConnectionComponent.GetConnection");

	UFGRailroadTrackConnectionComponent_GetConnection_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRailRoadVehicleAnim.TriggerHandBrakeVfx
// (Final, Native, Public, BlueprintCallable)

void UFGRailRoadVehicleAnim::TriggerHandBrakeVfx()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailRoadVehicleAnim.TriggerHandBrakeVfx");

	UFGRailRoadVehicleAnim_TriggerHandBrakeVfx_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailRoadVehicleAnim.SetUsingHandBrake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          InValue                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGRailRoadVehicleAnim::SetUsingHandBrake(bool* InValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailRoadVehicleAnim.SetUsingHandBrake");

	UFGRailRoadVehicleAnim_SetUsingHandBrake_Params params;
	params.InValue = InValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailRoadVehicleAnim.SetupHandBrakeEffects
// (Final, Native, Public, BlueprintCallable)

void UFGRailRoadVehicleAnim::SetupHandBrakeEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailRoadVehicleAnim.SetupHandBrakeEffects");

	UFGRailRoadVehicleAnim_SetupHandBrakeEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailRoadVehicleAnim.RemoveHandBrakeEffects
// (Final, Native, Public, BlueprintCallable)

void UFGRailRoadVehicleAnim::RemoveHandBrakeEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailRoadVehicleAnim.RemoveHandBrakeEffects");

	UFGRailRoadVehicleAnim_RemoveHandBrakeEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailRoadVehicleAnim.RemoveBrakeEffects
// (Final, Native, Public, BlueprintCallable)

void UFGRailRoadVehicleAnim::RemoveBrakeEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailRoadVehicleAnim.RemoveBrakeEffects");

	UFGRailRoadVehicleAnim_RemoveBrakeEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.UpdateRTPCs
// (Event, Protected, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::UpdateRTPCs()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.UpdateRTPCs");

	UFGRailroadVehicleSoundComponent_UpdateRTPCs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.StopAllSounds
// (Event, Public, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::StopAllSounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.StopAllSounds");

	UFGRailroadVehicleSoundComponent_StopAllSounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.StartIdleSounds
// (Event, Protected, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::StartIdleSounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.StartIdleSounds");

	UFGRailroadVehicleSoundComponent_StartIdleSounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.RestartSounds
// (Native, Event, Public, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::RestartSounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.RestartSounds");

	UFGRailroadVehicleSoundComponent_RestartSounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnThrottleReleased
// (Event, Protected, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::OnThrottleReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnThrottleReleased");

	UFGRailroadVehicleSoundComponent_OnThrottleReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnThrottleApplied
// (Event, Protected, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::OnThrottleApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnThrottleApplied");

	UFGRailroadVehicleSoundComponent_OnThrottleApplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnStoppedMoving
// (Event, Protected, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::OnStoppedMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnStoppedMoving");

	UFGRailroadVehicleSoundComponent_OnStoppedMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnStartedMoving
// (Event, Protected, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::OnStartedMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnStartedMoving");

	UFGRailroadVehicleSoundComponent_OnStartedMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnDynamicBrakesReleased
// (Event, Protected, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::OnDynamicBrakesReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnDynamicBrakesReleased");

	UFGRailroadVehicleSoundComponent_OnDynamicBrakesReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnDynamicBrakesApplied
// (Event, Protected, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::OnDynamicBrakesApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnDynamicBrakesApplied");

	UFGRailroadVehicleSoundComponent_OnDynamicBrakesApplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnAirBrakesReleased
// (Event, Protected, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::OnAirBrakesReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnAirBrakesReleased");

	UFGRailroadVehicleSoundComponent_OnAirBrakesReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRailroadVehicleSoundComponent.OnAirBrakesApplied
// (Event, Protected, BlueprintEvent)

void UFGRailroadVehicleSoundComponent::OnAirBrakesApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRailroadVehicleSoundComponent.OnAirBrakesApplied");

	UFGRailroadVehicleSoundComponent_OnAirBrakesApplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRecipe.SortByName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UClass*>          recipes                        (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGRecipe::STATIC_SortByName(TArray<class UClass*>* recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.SortByName");

	UFGRecipe_SortByName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (recipes != nullptr)
		*recipes = params.recipes;
}


// Function FactoryGame.FGRecipe.IsRecipeAffordable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGRecipe::STATIC_IsRecipeAffordable(class AFGCharacterPlayer** Player, class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.IsRecipeAffordable");

	UFGRecipe_IsRecipeAffordable_Params params;
	params.Player = Player;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetRecipeName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGRecipe::STATIC_GetRecipeName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetRecipeName");

	UFGRecipe_GetRecipeName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetProducts
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          allowChildRecipes              (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGRecipe::STATIC_GetProducts(class UClass** inClass, bool* allowChildRecipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetProducts");

	UFGRecipe_GetProducts_Params params;
	params.inClass = inClass;
	params.allowChildRecipes = allowChildRecipes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetProducedIn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGRecipe::STATIC_GetProducedIn(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetProducedIn");

	UFGRecipe_GetProducedIn_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetManufacturingDuration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRecipe::STATIC_GetManufacturingDuration(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetManufacturingDuration");

	UFGRecipe_GetManufacturingDuration_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetManualManufacturingDuration
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGRecipe::STATIC_GetManualManufacturingDuration(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetManualManufacturingDuration");

	UFGRecipe_GetManualManufacturingDuration_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetIngredients
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGRecipe::STATIC_GetIngredients(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetIngredients");

	UFGRecipe_GetIngredients_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipe.GetDescriptorForRecipe
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGRecipe::STATIC_GetDescriptorForRecipe(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipe.GetDescriptorForRecipe");

	UFGRecipe_GetDescriptorForRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipeManager.IsRecipeAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 recipeClass                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGRecipeManager::IsRecipeAvailable(class UClass** recipeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.IsRecipeAvailable");

	AFGRecipeManager_IsRecipeAvailable_Params params;
	params.recipeClass = recipeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipeManager.GetAvailableRecipesForProducer
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass**                 forProducer                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor)

void AFGRecipeManager::GetAvailableRecipesForProducer(class UClass** forProducer, TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.GetAvailableRecipesForProducer");

	AFGRecipeManager_GetAvailableRecipesForProducer_Params params;
	params.forProducer = forProducer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGRecipeManager.GetAllAvailableRecipes
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor)

void AFGRecipeManager::GetAllAvailableRecipes(TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.GetAllAvailableRecipes");

	AFGRecipeManager_GetAllAvailableRecipes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGRecipeManager.GetAffordableRecipesForProducer
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 forProducer                    (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_recipes                    (Parm, OutParm, ZeroConstructor)

void AFGRecipeManager::GetAffordableRecipesForProducer(class AFGCharacterPlayer** Player, class UClass** forProducer, TArray<class UClass*>* out_recipes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.GetAffordableRecipesForProducer");

	AFGRecipeManager_GetAffordableRecipesForProducer_Params params;
	params.Player = Player;
	params.forProducer = forProducer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_recipes != nullptr)
		*out_recipes = params.out_recipes;
}


// Function FactoryGame.FGRecipeManager.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGRecipeManager*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRecipeManager* AFGRecipeManager::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.Get");

	AFGRecipeManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipeManager.FindRecipesByProduct
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UClass**                 product                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGRecipeManager::FindRecipesByProduct(class UClass** product)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.FindRecipesByProduct");

	AFGRecipeManager_FindRecipesByProduct_Params params;
	params.product = product;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipeManager.FindRecipesByIngredient
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UClass**                 ingredient                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGRecipeManager::FindRecipesByIngredient(class UClass** ingredient)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeManager.FindRecipesByIngredient");

	AFGRecipeManager_FindRecipesByIngredient_Params params;
	params.ingredient = ingredient;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRecipeShortcut.SetRecipe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGRecipeShortcut::SetRecipe(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeShortcut.SetRecipe");

	UFGRecipeShortcut_SetRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRecipeShortcut.OnRep_Recipe
// (Final, Native, Protected)

void UFGRecipeShortcut::OnRep_Recipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeShortcut.OnRep_Recipe");

	UFGRecipeShortcut_OnRep_Recipe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRecipeShortcut.GetRecipe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGRecipeShortcut::GetRecipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRecipeShortcut.GetRecipe");

	UFGRecipeShortcut_GetRecipe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRenderTargetStage.UpdateRenderedComponents
// (Final, Native, Public, BlueprintCallable)

void AFGRenderTargetStage::UpdateRenderedComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.UpdateRenderedComponents");

	AFGRenderTargetStage_UpdateRenderedComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRenderTargetStage.SetView
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FItemView*              View                           (ConstParm, Parm, OutParm, ReferenceParm)

void AFGRenderTargetStage::SetView(struct FItemView* View)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.SetView");

	AFGRenderTargetStage_SetView_Params params;
	params.View = View;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRenderTargetStage.SetPreviewDistance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGRenderTargetStage::SetPreviewDistance(float* Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.SetPreviewDistance");

	AFGRenderTargetStage_SetPreviewDistance_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRenderTargetStage.GetStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* AFGRenderTargetStage::GetStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.GetStage");

	AFGRenderTargetStage_GetStage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRenderTargetStage.GetRenderTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTextureRenderTarget2D*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTextureRenderTarget2D* AFGRenderTargetStage::GetRenderTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.GetRenderTarget");

	AFGRenderTargetStage_GetRenderTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGRenderTargetStage.EndCapture
// (Final, Native, Public, BlueprintCallable)

void AFGRenderTargetStage::EndCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.EndCapture");

	AFGRenderTargetStage_EndCapture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRenderTargetStage.CaptureOnce
// (Final, Native, Public, BlueprintCallable)

void AFGRenderTargetStage::CaptureOnce()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.CaptureOnce");

	AFGRenderTargetStage_CaptureOnce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGRenderTargetStage.BeginCapture
// (Final, Native, Public, BlueprintCallable)

void AFGRenderTargetStage::BeginCapture()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGRenderTargetStage.BeginCapture");

	AFGRenderTargetStage_BeginCapture_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.SetResearchRecipe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 researchRecipe                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGResearchMachine::SetResearchRecipe(class UClass** researchRecipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.SetResearchRecipe");

	UFGResearchMachine_SetResearchRecipe_Params params;
	params.researchRecipe = researchRecipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.SetResearchMeshCurveScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCurveFloat**            curveScale                     (Parm, ZeroConstructor, IsPlainOldData)

void UFGResearchMachine::SetResearchMeshCurveScale(class UCurveFloat** curveScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.SetResearchMeshCurveScale");

	UFGResearchMachine_SetResearchMeshCurveScale_Params params;
	params.curveScale = curveScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.SetResearchMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent**   StaticMeshComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGResearchMachine::SetResearchMeshComponent(class UStaticMeshComponent** StaticMeshComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.SetResearchMeshComponent");

	UFGResearchMachine_SetResearchMeshComponent_Params params;
	params.StaticMeshComponent = StaticMeshComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.SetMachineUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGResearchMachine::SetMachineUser(class AFGCharacterPlayer** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.SetMachineUser");

	UFGResearchMachine_SetMachineUser_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.OnResearchStarted
// (Final, Native, Public)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGResearchMachine::OnResearchStarted(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.OnResearchStarted");

	UFGResearchMachine_OnResearchStarted_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.OnResearchConcluded
// (Final, Native, Public)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGResearchMachine::OnResearchConcluded(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.OnResearchConcluded");

	UFGResearchMachine_OnResearchConcluded_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.OnRep_ResearchMesh
// (Final, Native, Private)

void UFGResearchMachine::OnRep_ResearchMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.OnRep_ResearchMesh");

	UFGResearchMachine_OnRep_ResearchMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchMachine.IsResearchBeingConducted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGResearchMachine::IsResearchBeingConducted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.IsResearchBeingConducted");

	UFGResearchMachine_IsResearchBeingConducted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchMachine.GetResearchMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UStaticMeshComponent* UFGResearchMachine::GetResearchMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.GetResearchMeshComponent");

	UFGResearchMachine_GetResearchMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchMachine.GetMachineUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* UFGResearchMachine::GetMachineUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchMachine.GetMachineUser");

	UFGResearchMachine_GetMachineUser_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.OnResearchTimerComplete
// (Final, Native, Private)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGResearchManager::OnResearchTimerComplete(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.OnResearchTimerComplete");

	AFGResearchManager_OnResearchTimerComplete_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchManager.OnRep_OngoingResearch
// (Final, Native, Protected)

void AFGResearchManager::OnRep_OngoingResearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.OnRep_OngoingResearch");

	AFGResearchManager_OnRep_OngoingResearch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchManager.IsResearchComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::IsResearchComplete(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.IsResearchComplete");

	AFGResearchManager_IsResearchComplete_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.IsResearchBeingConducted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::IsResearchBeingConducted(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.IsResearchBeingConducted");

	AFGResearchManager_IsResearchBeingConducted_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.IsAnyResearchBeingConducted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::IsAnyResearchBeingConducted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.IsAnyResearchBeingConducted");

	AFGResearchManager_IsAnyResearchBeingConducted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.InitiateResearch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGInventoryComponent**  playerInventory                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 InitiatingResearchTree         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::InitiateResearch(class UFGInventoryComponent** playerInventory, class UClass** schematic, class UClass** InitiatingResearchTree)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.InitiateResearch");

	AFGResearchManager_InitiateResearch_Params params;
	params.playerInventory = playerInventory;
	params.schematic = schematic;
	params.InitiatingResearchTree = InitiatingResearchTree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetResearchBeingConducted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGResearchManager::GetResearchBeingConducted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetResearchBeingConducted");

	AFGResearchManager_GetResearchBeingConducted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetPendingRewards
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_rewards                    (Parm, OutParm, ZeroConstructor)

void AFGResearchManager::GetPendingRewards(class UClass** schematic, TArray<class UClass*>* out_rewards)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetPendingRewards");

	AFGResearchManager_GetPendingRewards_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_rewards != nullptr)
		*out_rewards = params.out_rewards;
}


// Function FactoryGame.FGResearchManager.GetOngoingResearchTimeLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGResearchManager::GetOngoingResearchTimeLeft(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetOngoingResearchTimeLeft");

	AFGResearchManager_GetOngoingResearchTimeLeft_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetInitiatingResearchTree
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGResearchManager::GetInitiatingResearchTree(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetInitiatingResearchTree");

	AFGResearchManager_GetInitiatingResearchTree_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetCurrentResearchState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EResearchState                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EResearchState AFGResearchManager::GetCurrentResearchState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetCurrentResearchState");

	AFGResearchManager_GetCurrentResearchState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.GetAllResearchTrees
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          out_ResearchTrees              (Parm, OutParm, ZeroConstructor)

void AFGResearchManager::GetAllResearchTrees(TArray<class UClass*>* out_ResearchTrees)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetAllResearchTrees");

	AFGResearchManager_GetAllResearchTrees_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_ResearchTrees != nullptr)
		*out_ResearchTrees = params.out_ResearchTrees;
}


// Function FactoryGame.FGResearchManager.GetAllCompletedResearch
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGResearchManager::GetAllCompletedResearch(TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.GetAllCompletedResearch");

	AFGResearchManager_GetAllCompletedResearch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGResearchManager.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGResearchManager*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResearchManager* AFGResearchManager::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.Get");

	AFGResearchManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.ContainsAnyCompletedResearch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::ContainsAnyCompletedResearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.ContainsAnyCompletedResearch");

	AFGResearchManager_ContainsAnyCompletedResearch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.Client_NewResearchStarted
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class UClass**                 research                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGResearchManager::Client_NewResearchStarted(class UClass** research)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.Client_NewResearchStarted");

	AFGResearchManager_Client_NewResearchStarted_Params params;
	params.research = research;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchManager.ClaimResearchResults
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     instigatorPlayer               (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           selectedRewardIndex            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::ClaimResearchResults(class AFGCharacterPlayer** instigatorPlayer, class UClass** schematic, int* selectedRewardIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.ClaimResearchResults");

	AFGResearchManager_ClaimResearchResults_Params params;
	params.instigatorPlayer = instigatorPlayer;
	params.schematic = schematic;
	params.selectedRewardIndex = selectedRewardIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.CanResearchBeInitiated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::CanResearchBeInitiated(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.CanResearchBeInitiated");

	AFGResearchManager_CanResearchBeInitiated_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.CanConductMultipleResearch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::CanConductMultipleResearch()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.CanConductMultipleResearch");

	AFGResearchManager_CanConductMultipleResearch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchManager.CanAffordResearch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent**  playerInventory                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResearchManager::CanAffordResearch(class UFGInventoryComponent** playerInventory, class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchManager.CanAffordResearch");

	AFGResearchManager_CanAffordResearch_Params params;
	params.playerInventory = playerInventory;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchRecipe.IsValidResearchRecipeReward
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FResearchRecipeReward*  recipeReward                   (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGResearchRecipe::STATIC_IsValidResearchRecipeReward(struct FResearchRecipeReward* recipeReward)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchRecipe.IsValidResearchRecipeReward");

	UFGResearchRecipe_IsValidResearchRecipeReward_Params params;
	params.recipeReward = recipeReward;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchRecipe.IsResearchRepeatable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGResearchRecipe::STATIC_IsResearchRepeatable(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchRecipe.IsResearchRepeatable");

	UFGResearchRecipe_IsResearchRepeatable_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchRecipe.GetResearcResults
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FResearchRecipeReward   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FResearchRecipeReward UFGResearchRecipe::STATIC_GetResearcResults(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchRecipe.GetResearcResults");

	UFGResearchRecipe_GetResearcResults_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchRecipe.GetResearchTriggerItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGResearchRecipe::STATIC_GetResearchTriggerItems(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchRecipe.GetResearchTriggerItems");

	UFGResearchRecipe_GetResearchTriggerItems_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchRecipe.GetResearchTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGResearchRecipe::STATIC_GetResearchTime(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchRecipe.GetResearchTime");

	UFGResearchRecipe_GetResearchTime_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchTree.SetNodes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UFGResearchTreeNode*>* Nodes                          (Parm, ZeroConstructor)

void UFGResearchTree::STATIC_SetNodes(class UClass** inClass, TArray<class UFGResearchTreeNode*>* Nodes)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.SetNodes");

	UFGResearchTree_SetNodes_Params params;
	params.inClass = inClass;
	params.Nodes = Nodes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResearchTree.IsVisible
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGResearchTree::STATIC_IsVisible(class UObject** WorldContext, class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.IsVisible");

	UFGResearchTree_IsVisible_Params params;
	params.WorldContext = WorldContext;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchTree.IsUnlocked
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGResearchTree::STATIC_IsUnlocked(class UObject** WorldContext, class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.IsUnlocked");

	UFGResearchTree_IsUnlocked_Params params;
	params.WorldContext = WorldContext;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchTree.GetVisibilityDependencies
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UFGAvailabilityDependency*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UFGAvailabilityDependency*> UFGResearchTree::STATIC_GetVisibilityDependencies(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.GetVisibilityDependencies");

	UFGResearchTree_GetVisibilityDependencies_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchTree.GetUnlockDependencies
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UFGAvailabilityDependency*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UFGAvailabilityDependency*> UFGResearchTree::STATIC_GetUnlockDependencies(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.GetUnlockDependencies");

	UFGResearchTree_GetUnlockDependencies_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchTree.GetResearchTreeIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UFGResearchTree::STATIC_GetResearchTreeIcon(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.GetResearchTreeIcon");

	UFGResearchTree_GetResearchTreeIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchTree.GetPreUnlockDisplayName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGResearchTree::STATIC_GetPreUnlockDisplayName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.GetPreUnlockDisplayName");

	UFGResearchTree_GetPreUnlockDisplayName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchTree.GetPreUnlockDescription
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGResearchTree::STATIC_GetPreUnlockDescription(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.GetPreUnlockDescription");

	UFGResearchTree_GetPreUnlockDescription_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchTree.GetPostUnlockDescription
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGResearchTree::STATIC_GetPostUnlockDescription(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.GetPostUnlockDescription");

	UFGResearchTree_GetPostUnlockDescription_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchTree.GetNodes
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UFGResearchTreeNode*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UFGResearchTreeNode*> UFGResearchTree::STATIC_GetNodes(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.GetNodes");

	UFGResearchTree_GetNodes_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResearchTree.GetDisplayName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGResearchTree::STATIC_GetDisplayName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResearchTree.GetDisplayName");

	UFGResearchTree_GetDisplayName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.ToggleResourcePickUI
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceNode::ToggleResourcePickUI(class AFGCharacterPlayer** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.ToggleResourcePickUI");

	AFGResourceNode_ToggleResourcePickUI_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.OnRep_IsOccupied
// (Final, Native, Public)

void AFGResourceNode::OnRep_IsOccupied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.OnRep_IsOccupied");

	AFGResourceNode_OnRep_IsOccupied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.OnIsOccupiedChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          newIsOccupied                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceNode::OnIsOccupiedChanged(bool* newIsOccupied)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.OnIsOccupiedChanged");

	AFGResourceNode_OnIsOccupiedChanged_Params params;
	params.newIsOccupied = newIsOccupied;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.InitResource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 ResourceClass                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EResourceAmount>*  amount                         (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EResourcePurity>*  Purity                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceNode::InitResource(class UClass** ResourceClass, TEnumAsByte<EResourceAmount>* amount, TEnumAsByte<EResourcePurity>* Purity)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.InitResource");

	AFGResourceNode_InitResource_Params params;
	params.ResourceClass = ResourceClass;
	params.amount = amount;
	params.Purity = Purity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.GetResourceName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGResourceNode::GetResourceName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResourceName");

	AFGResourceNode_GetResourceName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetResourceAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<EResourceAmount>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EResourceAmount> AFGResourceNode::GetResourceAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResourceAmount");

	AFGResourceNode_GetResourceAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetResoucesLeftText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGResourceNode::GetResoucesLeftText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResoucesLeftText");

	AFGResourceNode_GetResoucesLeftText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetResoucePurityText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGResourceNode::GetResoucePurityText()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResoucePurityText");

	AFGResourceNode_GetResoucePurityText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetResoucePurity
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TEnumAsByte<EResourcePurity>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<EResourcePurity> AFGResourceNode::GetResoucePurity()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetResoucePurity");

	AFGResourceNode_GetResoucePurity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetIsLonerNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResourceNode::GetIsLonerNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetIsLonerNode");

	AFGResourceNode_GetIsLonerNode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.GetExtractMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResourceNode::GetExtractMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.GetExtractMultiplier");

	AFGResourceNode_GetExtractMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceNode.ExtractResourceAndGiveToPlayer
// (Native, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     toPlayer                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceNode::ExtractResourceAndGiveToPlayer(class AFGCharacterPlayer** toPlayer, int* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.ExtractResourceAndGiveToPlayer");

	AFGResourceNode_ExtractResourceAndGiveToPlayer_Params params;
	params.toPlayer = toPlayer;
	params.amount = amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceNode.ClearWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGResourceNode::ClearWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceNode.ClearWidget");

	AFGResourceNode_ClearWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceDeposit.PlayDepletedEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// class UClass**                 Descriptor                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceDeposit::PlayDepletedEffect(class UClass** Descriptor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDeposit.PlayDepletedEffect");

	AFGResourceDeposit_PlayDepletedEffect_Params params;
	params.Descriptor = Descriptor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceDeposit.OnRep_ResourceDepositEmptied
// (Final, Native, Protected)

void AFGResourceDeposit::OnRep_ResourceDepositEmptied()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDeposit.OnRep_ResourceDepositEmptied");

	AFGResourceDeposit_OnRep_ResourceDepositEmptied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceDeposit.IsDepositEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResourceDeposit::IsDepositEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDeposit.IsDepositEmpty");

	AFGResourceDeposit_IsDepositEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDeposit.GetMineAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResourceDeposit::GetMineAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDeposit.GetMineAmount");

	AFGResourceDeposit_GetMineAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetPingColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor UFGResourceDescriptor::STATIC_GetPingColor(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetPingColor");

	UFGResourceDescriptor_GetPingColor_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetMeshOverrideMaterial
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstance* UFGResourceDescriptor::STATIC_GetMeshOverrideMaterial(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetMeshOverrideMaterial");

	UFGResourceDescriptor_GetMeshOverrideMaterial_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetManualMiningParticle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UFGResourceDescriptor::STATIC_GetManualMiningParticle(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetManualMiningParticle");

	UFGResourceDescriptor_GetManualMiningParticle_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetManualMiningAudioName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UFGResourceDescriptor::STATIC_GetManualMiningAudioName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetManualMiningAudioName");

	UFGResourceDescriptor_GetManualMiningAudioName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetGroundMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGResourceDescriptor::STATIC_GetGroundMesh(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetGroundMesh");

	UFGResourceDescriptor_GetGroundMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetFactoryMiningParticle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UFGResourceDescriptor::STATIC_GetFactoryMiningParticle(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetFactoryMiningParticle");

	UFGResourceDescriptor_GetFactoryMiningParticle_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetDestroyedParticle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UFGResourceDescriptor::STATIC_GetDestroyedParticle(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetDestroyedParticle");

	UFGResourceDescriptor_GetDestroyedParticle_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetDepositMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UStaticMesh* UFGResourceDescriptor::STATIC_GetDepositMesh(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetDepositMesh");

	UFGResourceDescriptor_GetDepositMesh_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetDepositMaterial
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInstance* UFGResourceDescriptor::STATIC_GetDepositMaterial(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetDepositMaterial");

	UFGResourceDescriptor_GetDepositMaterial_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetDecalSize
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGResourceDescriptor::STATIC_GetDecalSize(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetDecalSize");

	UFGResourceDescriptor_GetDecalSize_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetDecalMaterial
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterial*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterial* UFGResourceDescriptor::STATIC_GetDecalMaterial(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetDecalMaterial");

	UFGResourceDescriptor_GetDecalMaterial_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetCompasTexture
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGResourceDescriptor::STATIC_GetCompasTexture(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetCompasTexture");

	UFGResourceDescriptor_GetCompasTexture_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.GetCollectSpeedMultiplier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGResourceDescriptor::STATIC_GetCollectSpeedMultiplier(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.GetCollectSpeedMultiplier");

	UFGResourceDescriptor_GetCollectSpeedMultiplier_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceDescriptor.CanBeHandMined
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGResourceDescriptor::STATIC_CanBeHandMined(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceDescriptor.CanBeHandMined");

	UFGResourceDescriptor_CanBeHandMined_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceMiner.StopMining
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGResourceMiner::StopMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.StopMining");

	AFGResourceMiner_StopMining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceMiner.StartMining
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGResourceMiner::StartMining()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.StartMining");

	AFGResourceMiner_StartMining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceMiner.SetResourceNode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGResourceNode**        inNode                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceMiner::SetResourceNode(class AFGResourceNode** inNode)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.SetResourceNode");

	AFGResourceMiner_SetResourceNode_Params params;
	params.inNode = inNode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceMiner.Server_ExtractResources
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFGResourceMiner::Server_ExtractResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.Server_ExtractResources");

	AFGResourceMiner_Server_ExtractResources_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceMiner.RemoveEquipment
// (Final, Native, Public, BlueprintCallable)

void AFGResourceMiner::RemoveEquipment()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.RemoveEquipment");

	AFGResourceMiner_RemoveEquipment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceMiner.GetResourceNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGResourceNode*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResourceNode* AFGResourceMiner::GetResourceNode()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.GetResourceNode");

	AFGResourceMiner_GetResourceNode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceMiner.DoMine
// (Final, Native, Public, BlueprintCallable)

void AFGResourceMiner::DoMine()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceMiner.DoMine");

	AFGResourceMiner_DoMine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.ShowResourceDescriptorSelectUI
// (Event, Public, BlueprintEvent)

void AFGResourceScanner::ShowResourceDescriptorSelectUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.ShowResourceDescriptorSelectUI");

	AFGResourceScanner_ShowResourceDescriptorSelectUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.SetResourceDescriptorToScanFor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceScanner::SetResourceDescriptorToScanFor(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.SetResourceDescriptorToScanFor");

	AFGResourceScanner_SetResourceDescriptorToScanFor_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.SetPressingScan
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          isPressingScan                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGResourceScanner::SetPressingScan(bool* isPressingScan)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.SetPressingScan");

	AFGResourceScanner_SetPressingScan_Params params;
	params.isPressingScan = isPressingScan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.Server_ScanReleased
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFGResourceScanner::Server_ScanReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.Server_ScanReleased");

	AFGResourceScanner_Server_ScanReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.PlayClusterEffects
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FNodeClusterData>* clusters                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AFGResourceScanner::PlayClusterEffects(TArray<struct FNodeClusterData>* clusters)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.PlayClusterEffects");

	AFGResourceScanner_PlayClusterEffects_Params params;
	params.clusters = clusters;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceScanner.GetScannableResources
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGResourceScanner::GetScannableResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.GetScannableResources");

	AFGResourceScanner_GetScannableResources_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceScanner.GetResourceDescriptorToScanFor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGResourceScanner::GetResourceDescriptorToScanFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.GetResourceDescriptorToScanFor");

	AFGResourceScanner_GetResourceDescriptorToScanFor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceScanner.CloseResourceDescriptorSelectUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGResourceScanner::CloseResourceDescriptorSelectUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceScanner.CloseResourceDescriptorSelectUI");

	AFGResourceScanner_CloseResourceDescriptorSelectUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceSettings.GetStackSizeFromEnum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EStackSize*                    StackSize                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGResourceSettings::GetStackSizeFromEnum(EStackSize* StackSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSettings.GetStackSizeFromEnum");

	UFGResourceSettings_GetStackSizeFromEnum_Params params;
	params.StackSize = StackSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSettings.GetResourceDepositDataFromClass
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 desiredResourceClass           (Parm, ZeroConstructor, IsPlainOldData)
// int                            out_resourceDepositPackageIdx  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor**                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FResourceDepositPackage ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FResourceDepositPackage UFGResourceSettings::STATIC_GetResourceDepositDataFromClass(class UClass** desiredResourceClass, class AActor** WorldContext, int* out_resourceDepositPackageIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSettings.GetResourceDepositDataFromClass");

	UFGResourceSettings_GetResourceDepositDataFromClass_Params params;
	params.desiredResourceClass = desiredResourceClass;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_resourceDepositPackageIdx != nullptr)
		*out_resourceDepositPackageIdx = params.out_resourceDepositPackageIdx;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSettings.GetRandomResourceDepositData
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            out_resourceDepositPackageIdx  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class AActor**                 WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FResourceDepositPackage ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FResourceDepositPackage UFGResourceSettings::STATIC_GetRandomResourceDepositData(class AActor** WorldContext, int* out_resourceDepositPackageIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSettings.GetRandomResourceDepositData");

	UFGResourceSettings_GetRandomResourceDepositData_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_resourceDepositPackageIdx != nullptr)
		*out_resourceDepositPackageIdx = params.out_resourceDepositPackageIdx;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSinkSubsystem.TriggerCyberCoupon
// (Final, Native, Private)

void AFGResourceSinkSubsystem::TriggerCyberCoupon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.TriggerCyberCoupon");

	AFGResourceSinkSubsystem_TriggerCyberCoupon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGResourceSinkSubsystem.PurchaseResourceSinkSchematics
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGInventoryComponent**  playerInventory                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class UClass*>*         Schematics                     (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResourceSinkSubsystem::PurchaseResourceSinkSchematics(class UFGInventoryComponent** playerInventory, TArray<class UClass*>* Schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.PurchaseResourceSinkSchematics");

	AFGResourceSinkSubsystem_PurchaseResourceSinkSchematics_Params params;
	params.playerInventory = playerInventory;
	params.Schematics = Schematics;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSinkSubsystem.GetProgressionTowardsNextCoupon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGResourceSinkSubsystem::GetProgressionTowardsNextCoupon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.GetProgressionTowardsNextCoupon");

	AFGResourceSinkSubsystem_GetProgressionTowardsNextCoupon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSinkSubsystem.GetNumTotalPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64_t                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int64_t AFGResourceSinkSubsystem::GetNumTotalPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.GetNumTotalPoints");

	AFGResourceSinkSubsystem_GetNumTotalPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSinkSubsystem.GetNumPointsToNextCoupon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResourceSinkSubsystem::GetNumPointsToNextCoupon()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.GetNumPointsToNextCoupon");

	AFGResourceSinkSubsystem_GetNumPointsToNextCoupon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSinkSubsystem.GetNumCoupons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResourceSinkSubsystem::GetNumCoupons()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.GetNumCoupons");

	AFGResourceSinkSubsystem_GetNumCoupons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSinkSubsystem.GetGlobalPointHistory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int>                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<int> AFGResourceSinkSubsystem::GetGlobalPointHistory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.GetGlobalPointHistory");

	AFGResourceSinkSubsystem_GetGlobalPointHistory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSinkSubsystem.GetCouponClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGResourceSinkSubsystem::GetCouponClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.GetCouponClass");

	AFGResourceSinkSubsystem_GetCouponClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSinkSubsystem.GetCostOfSchematics
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>*         Schematics                     (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGResourceSinkSubsystem::GetCostOfSchematics(TArray<class UClass*>* Schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.GetCostOfSchematics");

	AFGResourceSinkSubsystem_GetCostOfSchematics_Params params;
	params.Schematics = Schematics;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSinkSubsystem.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGResourceSinkSubsystem* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGResourceSinkSubsystem* AFGResourceSinkSubsystem::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.Get");

	AFGResourceSinkSubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGResourceSinkSubsystem.CanAffordResourceSinkSchematics
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent**  playerInventory                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// TArray<class UClass*>*         Schematics                     (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGResourceSinkSubsystem::CanAffordResourceSinkSchematics(class UFGInventoryComponent** playerInventory, TArray<class UClass*>* Schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGResourceSinkSubsystem.CanAffordResourceSinkSchematics");

	AFGResourceSinkSubsystem_CanAffordResourceSinkSchematics_Params params;
	params.playerInventory = playerInventory;
	params.Schematics = Schematics;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveInterface.ShouldSave
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveInterface::ShouldSave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.ShouldSave");

	UFGSaveInterface_ShouldSave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveInterface.PreSaveGame
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int*                           SaveVersion                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           GameVersion                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveInterface::PreSaveGame(int* SaveVersion, int* GameVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.PreSaveGame");

	UFGSaveInterface_PreSaveGame_Params params;
	params.SaveVersion = SaveVersion;
	params.GameVersion = GameVersion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveInterface.PreLoadGame
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int*                           SaveVersion                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           GameVersion                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveInterface::PreLoadGame(int* SaveVersion, int* GameVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.PreLoadGame");

	UFGSaveInterface_PreLoadGame_Params params;
	params.SaveVersion = SaveVersion;
	params.GameVersion = GameVersion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveInterface.PostSaveGame
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int*                           SaveVersion                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           GameVersion                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveInterface::PostSaveGame(int* SaveVersion, int* GameVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.PostSaveGame");

	UFGSaveInterface_PostSaveGame_Params params;
	params.SaveVersion = SaveVersion;
	params.GameVersion = GameVersion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveInterface.PostLoadGame
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int*                           SaveVersion                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           GameVersion                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveInterface::PostLoadGame(int* SaveVersion, int* GameVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.PostLoadGame");

	UFGSaveInterface_PostLoadGame_Params params;
	params.SaveVersion = SaveVersion;
	params.GameVersion = GameVersion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveInterface.NeedTransform
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveInterface::NeedTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.NeedTransform");

	UFGSaveInterface_NeedTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveInterface.GatherDependencies
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<class UObject*>         out_dependentObjects           (Parm, OutParm, ZeroConstructor)

void UFGSaveInterface::GatherDependencies(TArray<class UObject*>* out_dependentObjects)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveInterface.GatherDependencies");

	UFGSaveInterface_GatherDependencies_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_dependentObjects != nullptr)
		*out_dependentObjects = params.out_dependentObjects;
}


// Function FactoryGame.FGSaveSession.OnActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveSession::OnActorDestroyed(class AActor** DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.OnActorDestroyed");

	UFGSaveSession_OnActorDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveSession.GetVersion
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSaveSession::STATIC_GetVersion(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetVersion");

	UFGSaveSession_GetVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSessionName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::STATIC_GetSessionName(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSessionName");

	UFGSaveSession_GetSessionName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSessionID
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::STATIC_GetSessionID(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSessionID");

	UFGSaveSession_GetSessionID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSaveSessionVisibility
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// TEnumAsByte<ESessionVisibility> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ESessionVisibility> UFGSaveSession::STATIC_GetSaveSessionVisibility(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSaveSessionVisibility");

	UFGSaveSession_GetSaveSessionVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSaveSessionName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSessionSaveStruct      session                        (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::STATIC_GetSaveSessionName(struct FSessionSaveStruct* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSaveSessionName");

	UFGSaveSession_GetSaveSessionName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (session != nullptr)
		*session = params.session;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSaveSessionID
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSessionSaveStruct      session                        (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::STATIC_GetSaveSessionID(struct FSessionSaveStruct* session)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSaveSessionID");

	UFGSaveSession_GetSaveSessionID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (session != nullptr)
		*session = params.session;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetSaveDateTime
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// struct FDateTime               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FDateTime UFGSaveSession::STATIC_GetSaveDateTime(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetSaveDateTime");

	UFGSaveSession_GetSaveDateTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetPlayDurationSeconds
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSaveSession::STATIC_GetPlayDurationSeconds(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetPlayDurationSeconds");

	UFGSaveSession_GetPlayDurationSeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::STATIC_GetName(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetName");

	UFGSaveSession_GetName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetMapOptions
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::STATIC_GetMapOptions(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetMapOptions");

	UFGSaveSession_GetMapOptions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetMapName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGSaveSession::STATIC_GetMapName(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetMapName");

	UFGSaveSession_GetMapName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.GetBuildVersion
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader             Header                         (Parm, OutParm, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSaveSession::STATIC_GetBuildVersion(struct FSaveHeader* Header)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.GetBuildVersion");

	UFGSaveSession_GetBuildVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Header != nullptr)
		*Header = params.Header;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFGSaveSession*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGSaveSession* UFGSaveSession::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.Get");

	UFGSaveSession_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSession.Autosave
// (Final, Native, Public)

void UFGSaveSession::Autosave()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSession.Autosave");

	UFGSaveSession_Autosave_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSaveSystem.SortSessions
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FSessionSaveStruct> sessions                       (Parm, OutParm, ZeroConstructor, ReferenceParm)
// ESaveSortMode*                 sortMode                       (Parm, ZeroConstructor, IsPlainOldData)
// ESaveSortDirection*            sortDirection                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveSystem::STATIC_SortSessions(ESaveSortMode* sortMode, ESaveSortDirection* sortDirection, TArray<struct FSessionSaveStruct>* sessions)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.SortSessions");

	UFGSaveSystem_SortSessions_Params params;
	params.sortMode = sortMode;
	params.sortDirection = sortDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (sessions != nullptr)
		*sessions = params.sessions;
}


// Function FactoryGame.FGSaveSystem.SortSaves
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FSaveHeader>     saves                          (Parm, OutParm, ZeroConstructor, ReferenceParm)
// ESaveSortMode*                 sortMode                       (Parm, ZeroConstructor, IsPlainOldData)
// ESaveSortDirection*            sortDirection                  (Parm, ZeroConstructor, IsPlainOldData)

void UFGSaveSystem::STATIC_SortSaves(ESaveSortMode* sortMode, ESaveSortDirection* sortDirection, TArray<struct FSaveHeader>* saves)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.SortSaves");

	UFGSaveSystem_SortSaves_Params params;
	params.sortMode = sortMode;
	params.sortDirection = sortDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (saves != nullptr)
		*saves = params.saves;
}


// Function FactoryGame.FGSaveSystem.IsValidSaveName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString*                 saveName                       (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveSystem::STATIC_IsValidSaveName(class FString* saveName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.IsValidSaveName");

	UFGSaveSystem_IsValidSaveName_Params params;
	params.saveName = saveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSystem.IsSessionNameUsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString*                 SessionName                    (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSaveSystem::IsSessionNameUsed(class FString* SessionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.IsSessionNameUsed");

	UFGSaveSystem_IsSessionNameUsed_Params params;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSystem.GroupSavesPerSession
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FSaveHeader>*    saves                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FSessionSaveStruct> out_groupedBySession           (Parm, OutParm, ZeroConstructor)

void UFGSaveSystem::STATIC_GroupSavesPerSession(TArray<struct FSaveHeader>* saves, TArray<struct FSessionSaveStruct>* out_groupedBySession)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.GroupSavesPerSession");

	UFGSaveSystem_GroupSavesPerSession_Params params;
	params.saves = saves;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_groupedBySession != nullptr)
		*out_groupedBySession = params.out_groupedBySession;
}


// Function FactoryGame.FGSaveSystem.GetSaveState
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSaveHeader*            SaveGame                       (ConstParm, Parm, OutParm, ReferenceParm)
// ESaveState                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESaveState UFGSaveSystem::STATIC_GetSaveState(struct FSaveHeader* SaveGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.GetSaveState");

	UFGSaveSystem_GetSaveState_Params params;
	params.SaveGame = SaveGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSystem.GetCachedSaveExists
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FSaveHeader>*    cachedSaves                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class FString*                 saveName                       (Parm, ZeroConstructor)
// class FString*                 currentSessionName             (Parm, ZeroConstructor)
// ESaveExists                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESaveExists UFGSaveSystem::STATIC_GetCachedSaveExists(TArray<struct FSaveHeader>* cachedSaves, class FString* saveName, class FString* currentSessionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.GetCachedSaveExists");

	UFGSaveSystem_GetCachedSaveExists_Params params;
	params.cachedSaves = cachedSaves;
	params.saveName = saveName;
	params.currentSessionName = currentSessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSaveSystem.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class UFGSaveSystem*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGSaveSystem* UFGSaveSystem::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSaveSystem.Get");

	UFGSaveSystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.IsRepeatPurchasesAllowed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSchematic::STATIC_IsRepeatPurchasesAllowed(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.IsRepeatPurchasesAllowed");

	UFGSchematic_IsRepeatPurchasesAllowed_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.IsIncludedInBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGSchematic::STATIC_IsIncludedInBuild(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.IsIncludedInBuild");

	UFGSchematic_IsIncludedInBuild_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetUnlocks
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UFGUnlock*>       ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UFGUnlock*> UFGSchematic::STATIC_GetUnlocks(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetUnlocks");

	UFGSchematic_GetUnlocks_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// ESchematicType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESchematicType UFGSchematic::STATIC_GetType(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetType");

	UFGSchematic_GetType_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetTechTier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSchematic::STATIC_GetTechTier(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetTechTier");

	UFGSchematic_GetTechTier_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetSubCategories
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_subCategories              (Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFGSchematic::STATIC_GetSubCategories(class UClass** inClass, TArray<class UClass*>* out_subCategories)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetSubCategories");

	UFGSchematic_GetSubCategories_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_subCategories != nullptr)
		*out_subCategories = params.out_subCategories;
}


// Function FactoryGame.FGSchematic.GetShipTravelTimeAfterPurchase
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGSchematic::STATIC_GetShipTravelTimeAfterPurchase(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetShipTravelTimeAfterPurchase");

	UFGSchematic_GetShipTravelTimeAfterPurchase_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetSchematicDisplayName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGSchematic::STATIC_GetSchematicDisplayName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetSchematicDisplayName");

	UFGSchematic_GetSchematicDisplayName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetSchematicCategory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGSchematic::STATIC_GetSchematicCategory(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetSchematicCategory");

	UFGSchematic_GetSchematicCategory_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetItemIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UFGSchematic::STATIC_GetItemIcon(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetItemIcon");

	UFGSchematic_GetItemIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetDependentOnSchematic
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGSchematic::STATIC_GetDependentOnSchematic(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetDependentOnSchematic");

	UFGSchematic_GetDependentOnSchematic_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetCost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGSchematic::STATIC_GetCost(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetCost");

	UFGSchematic_GetCost_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematic.GetAdditionalSchematicDependencies
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGSchematic::STATIC_GetAdditionalSchematicDependencies(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematic.GetAdditionalSchematicDependencies");

	UFGSchematic_GetAdditionalSchematicDependencies_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicCategory.GetCategoryName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGSchematicCategory::STATIC_GetCategoryName(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicCategory.GetCategoryName");

	UFGSchematicCategory_GetCategoryName_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicCategory.GetCategoryIcon
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FSlateBrush             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSlateBrush UFGSchematicCategory::STATIC_GetCategoryIcon(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicCategory.GetCategoryIcon");

	UFGSchematicCategory_GetCategoryIcon_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.SetActiveSchematic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 newActiveSchematic             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::SetActiveSchematic(class UClass** newActiveSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.SetActiveSchematic");

	AFGSchematicManager_SetActiveSchematic_Params params;
	params.newActiveSchematic = newActiveSchematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.PayOffOnSchematic
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     amount                         (Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::PayOffOnSchematic(class UClass** schematic, TArray<struct FItemAmount>* amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.PayOffOnSchematic");

	AFGSchematicManager_PayOffOnSchematic_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (amount != nullptr)
		*amount = params.amount;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.OnRep_PurchasedSchematic
// (Final, Native, Private)

void AFGSchematicManager::OnRep_PurchasedSchematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.OnRep_PurchasedSchematic");

	AFGSchematicManager_OnRep_PurchasedSchematic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSchematicManager.OnRep_PaidOffOnSchematic
// (Final, Native, Private)

void AFGSchematicManager::OnRep_PaidOffOnSchematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.OnRep_PaidOffOnSchematic");

	AFGSchematicManager_OnRep_PaidOffOnSchematic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSchematicManager.OnRep_ActiveSchematic
// (Final, Native, Private)

void AFGSchematicManager::OnRep_ActiveSchematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.OnRep_ActiveSchematic");

	AFGSchematicManager_OnRep_ActiveSchematic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSchematicManager.LaunchShip
// (Final, Native, Public, BlueprintCallable)

void AFGSchematicManager::LaunchShip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.LaunchShip");

	AFGSchematicManager_LaunchShip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSchematicManager.IsShipAtTradingPost
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::IsShipAtTradingPost()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.IsShipAtTradingPost");

	AFGSchematicManager_IsShipAtTradingPost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.IsSchematicPurchased
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 SchematicClass                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::IsSchematicPurchased(class UClass** SchematicClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.IsSchematicPurchased");

	AFGSchematicManager_IsSchematicPurchased_Params params;
	params.SchematicClass = SchematicClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.IsSchematicPaidOff
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::IsSchematicPaidOff(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.IsSchematicPaidOff");

	AFGSchematicManager_IsSchematicPaidOff_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GiveAccessToSchematic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 SchematicClass                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          accessedViaCheats              (Parm, ZeroConstructor, IsPlainOldData)

void AFGSchematicManager::GiveAccessToSchematic(class UClass** SchematicClass, bool* accessedViaCheats)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GiveAccessToSchematic");

	AFGSchematicManager_GiveAccessToSchematic_Params params;
	params.SchematicClass = SchematicClass;
	params.accessedViaCheats = accessedViaCheats;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSchematicManager.GetTimeUntilShipReturn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGSchematicManager::GetTimeUntilShipReturn()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetTimeUntilShipReturn");

	AFGSchematicManager_GetTimeUntilShipReturn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetRemainingCostFor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> AFGSchematicManager::GetRemainingCostFor(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetRemainingCostFor");

	AFGSchematicManager_GetRemainingCostFor_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetPurchasedSchematicsOfTypes
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<ESchematicType>*        Types                          (Parm, ZeroConstructor)
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGSchematicManager::GetPurchasedSchematicsOfTypes(TArray<ESchematicType>* Types, TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetPurchasedSchematicsOfTypes");

	AFGSchematicManager_GetPurchasedSchematicsOfTypes_Params params;
	params.Types = Types;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGSchematicManager.GetPaidOffCostFor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> AFGSchematicManager::GetPaidOffCostFor(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetPaidOffCostFor");

	AFGSchematicManager_GetPaidOffCostFor_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetMaxAllowedTechTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGSchematicManager::GetMaxAllowedTechTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetMaxAllowedTechTier");

	AFGSchematicManager_GetMaxAllowedTechTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetHighestAvailableTechTier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGSchematicManager::GetHighestAvailableTechTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetHighestAvailableTechTier");

	AFGSchematicManager_GetHighestAvailableTechTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetCostFor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> AFGSchematicManager::GetCostFor(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetCostFor");

	AFGSchematicManager_GetCostFor_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.GetAvailableSchematics
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGSchematicManager::GetAvailableSchematics(TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetAvailableSchematics");

	AFGSchematicManager_GetAvailableSchematics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGSchematicManager.GetAllSchematicsOfTypeFilteredOnDependency
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// ESchematicType*                Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGSchematicManager::GetAllSchematicsOfTypeFilteredOnDependency(ESchematicType* Type, TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetAllSchematicsOfTypeFilteredOnDependency");

	AFGSchematicManager_GetAllSchematicsOfTypeFilteredOnDependency_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGSchematicManager.GetAllSchematicsOfType
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// ESchematicType*                Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGSchematicManager::GetAllSchematicsOfType(ESchematicType* Type, TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetAllSchematicsOfType");

	AFGSchematicManager_GetAllSchematicsOfType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGSchematicManager.GetAllSchematics
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGSchematicManager::GetAllSchematics(TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetAllSchematics");

	AFGSchematicManager_GetAllSchematics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGSchematicManager.GetAllPurchasedSchematics
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class UClass*>          out_schematics                 (Parm, OutParm, ZeroConstructor)

void AFGSchematicManager::GetAllPurchasedSchematics(TArray<class UClass*>* out_schematics)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetAllPurchasedSchematics");

	AFGSchematicManager_GetAllPurchasedSchematics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_schematics != nullptr)
		*out_schematics = params.out_schematics;
}


// Function FactoryGame.FGSchematicManager.GetActiveSchematic
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGSchematicManager::GetActiveSchematic()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.GetActiveSchematic");

	AFGSchematicManager_GetActiveSchematic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGSchematicManager*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGSchematicManager* AFGSchematicManager::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.Get");

	AFGSchematicManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.CanSetAsActiveSchematic
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inSchematic                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSchematicManager::CanSetAsActiveSchematic(class UClass** inSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.CanSetAsActiveSchematic");

	AFGSchematicManager_CanSetAsActiveSchematic_Params params;
	params.inSchematic = inSchematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSchematicManager.AddAvailableSchematic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 schematicClassToAdd            (Parm, ZeroConstructor, IsPlainOldData)

void AFGSchematicManager::AddAvailableSchematic(class UClass** schematicClassToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSchematicManager.AddAvailableSchematic");

	AFGSchematicManager_AddAvailableSchematic_Params params;
	params.schematicClassToAdd = schematicClassToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignCanvasWidget.OnElementSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGSignElementData**     elementData                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSignCanvasWidget::OnElementSelected(class UFGSignElementData** elementData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignCanvasWidget.OnElementSelected");

	UFGSignCanvasWidget_OnElementSelected_Params params;
	params.elementData = elementData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignCanvasWidget.GetComponentToCanvasLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D*              locationInComponent            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UFGSignCanvasWidget::GetComponentToCanvasLocation(struct FVector2D* locationInComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignCanvasWidget.GetComponentToCanvasLocation");

	UFGSignCanvasWidget_GetComponentToCanvasLocation_Params params;
	params.locationInComponent = locationInComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignCanvasWidget.GetCanvasToComponentLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D*              locationInCanvas               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UFGSignCanvasWidget::GetCanvasToComponentLocation(struct FVector2D* locationInCanvas)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignCanvasWidget.GetCanvasToComponentLocation");

	UFGSignCanvasWidget_GetCanvasToComponentLocation_Params params;
	params.locationInCanvas = locationInCanvas;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignCanvasWidget.AddSignCanvasElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGSignElementData**     elementData                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSignCanvasWidget::AddSignCanvasElement(class UFGSignElementData** elementData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignCanvasWidget.AddSignCanvasElement");

	UFGSignCanvasWidget_AddSignCanvasElement_Params params;
	params.elementData = elementData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignElementDragWidget.OnExitCanavasBounds
// (Event, Public, BlueprintEvent)

void UFGSignElementDragWidget::OnExitCanavasBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignElementDragWidget.OnExitCanavasBounds");

	UFGSignElementDragWidget_OnExitCanavasBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignElementDragWidget.OnEnterCanvasBounds
// (Event, Public, BlueprintEvent)

void UFGSignElementDragWidget::OnEnterCanvasBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignElementDragWidget.OnEnterCanvasBounds");

	UFGSignElementDragWidget_OnEnterCanvasBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignElementDragWidget.Init
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFGSignElementData**     elementData                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSignElementDragWidget::Init(class UFGSignElementData** elementData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignElementDragWidget.Init");

	UFGSignElementDragWidget_Init_Params params;
	params.elementData = elementData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignElementSettingsWidget.OnElementDataChanged
// (Final, Native, Public, BlueprintCallable)

void UFGSignElementSettingsWidget::OnElementDataChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignElementSettingsWidget.OnElementDataChanged");

	UFGSignElementSettingsWidget_OnElementDataChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignElementSettingsWidget.OnColorIndexSelected
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void UFGSignElementSettingsWidget::OnColorIndexSelected(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignElementSettingsWidget.OnColorIndexSelected");

	UFGSignElementSettingsWidget_OnColorIndexSelected_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignElementSettingsWidget.Init
// (Event, Public, BlueprintEvent)

void UFGSignElementSettingsWidget::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignElementSettingsWidget.Init");

	UFGSignElementSettingsWidget_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignElementWidget.RefreshElement
// (Native, Public, BlueprintCallable)
// Parameters:
// bool*                          isInitialization               (Parm, ZeroConstructor, IsPlainOldData)

void UFGSignElementWidget::RefreshElement(bool* isInitialization)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignElementWidget.RefreshElement");

	UFGSignElementWidget_RefreshElement_Params params;
	params.isInitialization = isInitialization;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignElementWidget.OnElementSelected
// (Event, Public, BlueprintEvent)

void UFGSignElementWidget::OnElementSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignElementWidget.OnElementSelected");

	UFGSignElementWidget_OnElementSelected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignElementWidget.OnElementDeselected
// (Event, Public, BlueprintEvent)

void UFGSignElementWidget::OnElementDeselected()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignElementWidget.OnElementDeselected");

	UFGSignElementWidget_OnElementDeselected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignElementWidget.GetElementData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGSignElementData*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGSignElementData* UFGSignElementWidget::GetElementData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignElementWidget.GetElementData");

	UFGSignElementWidget_GetElementData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignificanceInterface.SetupForSignificance
// (Native, Public)

void UFGSignificanceInterface::SetupForSignificance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.SetupForSignificance");

	UFGSignificanceInterface_SetupForSignificance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignificanceInterface.LostSignificance_Native
// (Native, Public)

void UFGSignificanceInterface::LostSignificance_Native()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.LostSignificance_Native");

	UFGSignificanceInterface_LostSignificance_Native_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignificanceInterface.LostSignificance
// (Native, Event, Public, BlueprintEvent)

void UFGSignificanceInterface::LostSignificance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.LostSignificance");

	UFGSignificanceInterface_LostSignificance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignificanceInterface.GetSignificanceRange
// (Native, Public)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGSignificanceInterface::GetSignificanceRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.GetSignificanceRange");

	UFGSignificanceInterface_GetSignificanceRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignificanceInterface.GetSignificanceBias
// (Native, Public)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGSignificanceInterface::GetSignificanceBias()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.GetSignificanceBias");

	UFGSignificanceInterface_GetSignificanceBias_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignificanceInterface.GainedSignificance_Native
// (Native, Public)

void UFGSignificanceInterface::GainedSignificance_Native()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.GainedSignificance_Native");

	UFGSignificanceInterface_GainedSignificance_Native_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignificanceInterface.GainedSignificance
// (Native, Event, Public, BlueprintEvent)

void UFGSignificanceInterface::GainedSignificance()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignificanceInterface.GainedSignificance");

	UFGSignificanceInterface_GainedSignificance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignInteractWidget.ApplySignData
// (Final, Native, Public, BlueprintCallable)

void UFGSignInteractWidget::ApplySignData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignInteractWidget.ApplySignData");

	UFGSignInteractWidget_ApplySignData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignInteractWidget.AddNewTextElement
// (Final, Native, Public)

void UFGSignInteractWidget::AddNewTextElement()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignInteractWidget.AddNewTextElement");

	UFGSignInteractWidget_AddNewTextElement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignInteractWidget.AddNewSignElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGSignElementData**     elementData                    (Parm, ZeroConstructor, IsPlainOldData)

void UFGSignInteractWidget::AddNewSignElement(class UFGSignElementData** elementData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignInteractWidget.AddNewSignElement");

	UFGSignInteractWidget_AddNewSignElement_Params params;
	params.elementData = elementData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignInteractWidget.AddNewIconElement
// (Final, Native, Public)

void UFGSignInteractWidget::AddNewIconElement()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignInteractWidget.AddNewIconElement");

	UFGSignInteractWidget_AddNewIconElement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignInterface.SetSignData
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSignData*              Data                           (ConstParm, Parm, OutParm, ReferenceParm)
// bool*                          bUpdate                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGSignInterface::SetSignData(struct FSignData* Data, bool* bUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignInterface.SetSignData");

	UFGSignInterface_SetSignData_Params params;
	params.Data = Data;
	params.bUpdate = bUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSignInterface.GetSignDimensions
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UFGSignInterface::GetSignDimensions()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignInterface.GetSignDimensions");

	UFGSignInterface_GetSignDimensions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignInterface.GetSignData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSignData               ReturnValue                    (Parm, OutParm, ReturnParm)

struct FSignData UFGSignInterface::GetSignData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignInterface.GetSignData");

	UFGSignInterface_GetSignData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignInterface.GetGridSquareDimensions
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UFGSignInterface::GetGridSquareDimensions()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignInterface.GetGridSquareDimensions");

	UFGSignInterface_GetGridSquareDimensions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignInterface.GetBuildable
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGBuildable*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildable* UFGSignInterface::GetBuildable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignInterface.GetBuildable");

	UFGSignInterface_GetBuildable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignInterface.GetAvailableElementID
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGSignInterface::GetAvailableElementID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignInterface.GetAvailableElementID");

	UFGSignInterface_GetAvailableElementID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignSettings.GetTextMaterialInstanceFromIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UFGSignSettings::STATIC_GetTextMaterialInstanceFromIndex(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignSettings.GetTextMaterialInstanceFromIndex");

	UFGSignSettings_GetTextMaterialInstanceFromIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignSettings.GetSignColorData
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FSignColorData>  ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<struct FSignColorData> UFGSignSettings::STATIC_GetSignColorData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignSettings.GetSignColorData");

	UFGSignSettings_GetSignColorData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignSettings.GetIconMaterialInstanceFromIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UFGSignSettings::STATIC_GetIconMaterialInstanceFromIndex(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignSettings.GetIconMaterialInstanceFromIndex");

	UFGSignSettings_GetIconMaterialInstanceFromIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignSettings.GetBackgroundMaterialInstanceFromIndex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMaterialInterface* UFGSignSettings::STATIC_GetBackgroundMaterialInstanceFromIndex(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignSettings.GetBackgroundMaterialInstanceFromIndex");

	UFGSignSettings_GetBackgroundMaterialInstanceFromIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSignTextWidget.GetTextBlock
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextBlock*              ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTextBlock* UFGSignTextWidget::GetTextBlock()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSignTextWidget.GetTextBlock");

	UFGSignTextWidget_GetTextBlock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSkySphere.UpdatePreview
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void AFGSkySphere::UpdatePreview()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSkySphere.UpdatePreview");

	AFGSkySphere_UpdatePreview_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSkySphere.GetFloatCurveValue
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRuntimeFloatCurve*     Curve                          (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGSkySphere::STATIC_GetFloatCurveValue(struct FRuntimeFloatCurve* Curve, float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSkySphere.GetFloatCurveValue");

	AFGSkySphere_GetFloatCurveValue_Params params;
	params.Curve = Curve;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSkySphere.GetColorCurveValue
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRuntimeCurveLinearColor* Curve                          (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLinearColor AFGSkySphere::STATIC_GetColorCurveValue(struct FRuntimeCurveLinearColor* Curve, float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSkySphere.GetColorCurveValue");

	AFGSkySphere_GetColorCurveValue_Params params;
	params.Curve = Curve;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSkySphere.ApplySkySphereSettings
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FSkySphereSettings*     Settings                       (ConstParm, Parm, OutParm, ReferenceParm)

void AFGSkySphere::ApplySkySphereSettings(struct FSkySphereSettings* Settings)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSkySphere.ApplySkySphereSettings");

	AFGSkySphere_ApplySkySphereSettings_Params params;
	params.Settings = Settings;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSoundSplineComponent.SetEmitterInterval
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newEmitterInterval             (Parm, ZeroConstructor, IsPlainOldData)

void UFGSoundSplineComponent::SetEmitterInterval(float* newEmitterInterval)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSoundSplineComponent.SetEmitterInterval");

	UFGSoundSplineComponent_SetEmitterInterval_Params params;
	params.newEmitterInterval = newEmitterInterval;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSoundSplineComponent.GetEmitterInterval
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         newEmitterInterval             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGSoundSplineComponent::GetEmitterInterval(float* newEmitterInterval)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSoundSplineComponent.GetEmitterInterval");

	UFGSoundSplineComponent_GetEmitterInterval_Params params;
	params.newEmitterInterval = newEmitterInterval;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGSplineComponent.UpdateSplineMeshes
// (Final, Native, Public, BlueprintCallable)

void UFGSplineComponent::UpdateSplineMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSplineComponent.UpdateSplineMeshes");

	UFGSplineComponent_UpdateSplineMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSplineComponent.SetOverrideMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface**     Material                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGSplineComponent::SetOverrideMaterial(class UMaterialInterface** Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSplineComponent.SetOverrideMaterial");

	UFGSplineComponent_SetOverrideMaterial_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSplineComponent.DrawDebugSpline
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor*                 color1                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FColor*                 color2                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Thickness                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGSplineComponent::DrawDebugSpline(struct FColor* color1, struct FColor* color2, float* Thickness)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSplineComponent.DrawDebugSpline");

	UFGSplineComponent_DrawDebugSpline_Params params;
	params.color1 = color1;
	params.color2 = color2;
	params.Thickness = Thickness;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGSporeFlower.ActorShouldTriggerFlower
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGSporeFlower::ActorShouldTriggerFlower(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGSporeFlower.ActorShouldTriggerFlower");

	AFGSporeFlower_ActorShouldTriggerFlower_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGStartingPod.StartSequence
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGStartingPod::StartSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStartingPod.StartSequence");

	AFGStartingPod_StartSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStartingPod.OnPlayerSkipIntroSequence
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFGStartingPod::OnPlayerSkipIntroSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStartingPod.OnPlayerSkipIntroSequence");

	AFGStartingPod_OnPlayerSkipIntroSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStartingPod.GetCachedPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* AFGStartingPod::GetCachedPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStartingPod.GetCachedPlayer");

	AFGStartingPod_GetCachedPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGStingerWidgetRewardData.GetIconTexture
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UFGStingerWidgetRewardData::STATIC_GetIconTexture(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStingerWidgetRewardData.GetIconTexture");

	UFGStingerWidgetRewardData_GetIconTexture_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGStingerWidgetRewardData.GetIconText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGStingerWidgetRewardData::STATIC_GetIconText(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStingerWidgetRewardData.GetIconText");

	UFGStingerWidgetRewardData_GetIconText_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGStorySubsystem.SetupDelegates
// (Final, Native, Protected)

void AFGStorySubsystem::SetupDelegates()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.SetupDelegates");

	AFGStorySubsystem_SetupDelegates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnSchematicPurchased
// (Final, Native, Public)
// Parameters:
// class UClass**                 newSchematic                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnSchematicPurchased(class UClass** newSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnSchematicPurchased");

	AFGStorySubsystem_OnSchematicPurchased_Params params;
	params.newSchematic = newSchematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnResearchTreeUnlocked
// (Final, Native, Public)
// Parameters:
// class UClass**                 researchTree                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnResearchTreeUnlocked(class UClass** researchTree)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnResearchTreeUnlocked");

	AFGStorySubsystem_OnResearchTreeUnlocked_Params params;
	params.researchTree = researchTree;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnResearchRecipeTimerComplete
// (Final, Native, Public)
// Parameters:
// class UClass**                 schematic                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnResearchRecipeTimerComplete(class UClass** schematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnResearchRecipeTimerComplete");

	AFGStorySubsystem_OnResearchRecipeTimerComplete_Params params;
	params.schematic = schematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnPlayerAddedItemToInventory
// (Final, Native, Public)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           numAdded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnPlayerAddedItemToInventory(class UClass** ItemClass, int* numAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnPlayerAddedItemToInventory");

	AFGStorySubsystem_OnPlayerAddedItemToInventory_Params params;
	params.ItemClass = ItemClass;
	params.numAdded = numAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.OnMapAreaVisited
// (Final, Native, Public)
// Parameters:
// class UClass**                 mapArea                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::OnMapAreaVisited(class UClass** mapArea)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.OnMapAreaVisited");

	AFGStorySubsystem_OnMapAreaVisited_Params params;
	params.mapArea = mapArea;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGStorySubsystem.AddPlayer
// (Final, Native, Public)
// Parameters:
// class AFGCharacterPlayer**     inPlayer                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGStorySubsystem::AddPlayer(class AFGCharacterPlayer** inPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGStorySubsystem.AddPlayer");

	AFGStorySubsystem_AddPlayer_Params params;
	params.inPlayer = inPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.SetWaitTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         newWaitTime                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGTargetPoint::SetWaitTime(float* newWaitTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.SetWaitTime");

	AFGTargetPoint_SetWaitTime_Params params;
	params.newWaitTime = newWaitTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.SetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          inVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGTargetPoint::SetVisibility(bool* inVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.SetVisibility");

	AFGTargetPoint_SetVisibility_Params params;
	params.inVisible = inVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.SetTargetSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           newSpeed                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGTargetPoint::SetTargetSpeed(int* newSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.SetTargetSpeed");

	AFGTargetPoint_SetTargetSpeed_Params params;
	params.newSpeed = newSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.SetOwningVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGWheeledVehicle**      newVehicle                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGTargetPoint::SetOwningVehicle(class AFGWheeledVehicle** newVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.SetOwningVehicle");

	AFGTargetPoint_SetOwningVehicle_Params params;
	params.newVehicle = newVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.OnRep_Visibility
// (Final, Native, Protected)

void AFGTargetPoint::OnRep_Visibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.OnRep_Visibility");

	AFGTargetPoint_OnRep_Visibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.IsTargetSpeedStill
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTargetPoint::IsTargetSpeedStill()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.IsTargetSpeedStill");

	AFGTargetPoint_IsTargetSpeedStill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPoint.IncreaseWaitTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         addedWaitTime                  (Parm, ZeroConstructor, IsPlainOldData)

void AFGTargetPoint::IncreaseWaitTime(float* addedWaitTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.IncreaseWaitTime");

	AFGTargetPoint_IncreaseWaitTime_Params params;
	params.addedWaitTime = addedWaitTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPoint.GetWaitTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTargetPoint::GetWaitTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.GetWaitTime");

	AFGTargetPoint_GetWaitTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPoint.GetTargetSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTargetPoint::GetTargetSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.GetTargetSpeed");

	AFGTargetPoint_GetTargetSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPoint.GetOwningVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGWheeledVehicle*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGWheeledVehicle* AFGTargetPoint::GetOwningVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPoint.GetOwningVehicle");

	AFGTargetPoint_GetOwningVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPointLinkedList.SetPathVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          inVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGTargetPointLinkedList::SetPathVisibility(bool* inVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.SetPathVisibility");

	UFGTargetPointLinkedList_SetPathVisibility_Params params;
	params.inVisible = inVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.SetNextTarget
// (Final, Native, Public, BlueprintCallable)

void UFGTargetPointLinkedList::SetNextTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.SetNextTarget");

	UFGTargetPointLinkedList_SetNextTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.SetCurrentTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGTargetPoint**         newTarget                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGTargetPointLinkedList::SetCurrentTarget(class AFGTargetPoint** newTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.SetCurrentTarget");

	UFGTargetPointLinkedList_SetCurrentTarget_Params params;
	params.newTarget = newTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.SetClosestPointAsTarget
// (Final, Native, Public, BlueprintCallable)

void UFGTargetPointLinkedList::SetClosestPointAsTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.SetClosestPointAsTarget");

	UFGTargetPointLinkedList_SetClosestPointAsTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.RemoveItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGTargetPoint**         targetToRemove                 (Parm, ZeroConstructor, IsPlainOldData)

void UFGTargetPointLinkedList::RemoveItem(class AFGTargetPoint** targetToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.RemoveItem");

	UFGTargetPointLinkedList_RemoveItem_Params params;
	params.targetToRemove = targetToRemove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.InsertItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGTargetPoint**         newTarget                      (Parm, ZeroConstructor, IsPlainOldData)

void UFGTargetPointLinkedList::InsertItem(class AFGTargetPoint** newTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.InsertItem");

	UFGTargetPointLinkedList_InsertItem_Params params;
	params.newTarget = newTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTargetPointLinkedList.GetLastTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGTargetPoint*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTargetPoint* UFGTargetPointLinkedList::GetLastTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.GetLastTarget");

	UFGTargetPointLinkedList_GetLastTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPointLinkedList.GetFirstTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGTargetPoint*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTargetPoint* UFGTargetPointLinkedList::GetFirstTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.GetFirstTarget");

	UFGTargetPointLinkedList_GetFirstTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPointLinkedList.GetCurrentTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGTargetPoint*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTargetPoint* UFGTargetPointLinkedList::GetCurrentTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.GetCurrentTarget");

	UFGTargetPointLinkedList_GetCurrentTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTargetPointLinkedList.ClearRecording
// (Final, Native, Public, BlueprintCallable)

void UFGTargetPointLinkedList::ClearRecording()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTargetPointLinkedList.ClearRecording");

	UFGTargetPointLinkedList_ClearRecording_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTimeOfDaySubsystem.UpdateServerDaySeconds
// (Final, Native, Protected)

void AFGTimeOfDaySubsystem::UpdateServerDaySeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.UpdateServerDaySeconds");

	AFGTimeOfDaySubsystem_UpdateServerDaySeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTimeOfDaySubsystem.SetTimeSpeedMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Multiplier                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGTimeOfDaySubsystem::SetTimeSpeedMultiplier(float* Multiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.SetTimeSpeedMultiplier");

	AFGTimeOfDaySubsystem_SetTimeSpeedMultiplier_Params params;
	params.Multiplier = Multiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTimeOfDaySubsystem.OnRep_ReplicatedDaySeconds
// (Final, Native, Protected)

void AFGTimeOfDaySubsystem::OnRep_ReplicatedDaySeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.OnRep_ReplicatedDaySeconds");

	AFGTimeOfDaySubsystem_OnRep_ReplicatedDaySeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTimeOfDaySubsystem.IsNight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTimeOfDaySubsystem::IsNight()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.IsNight");

	AFGTimeOfDaySubsystem_IsNight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.IsDay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTimeOfDaySubsystem::IsDay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.IsDay");

	AFGTimeOfDaySubsystem_IsDay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetTimeOfDayHours
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetTimeOfDayHours()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetTimeOfDayHours");

	AFGTimeOfDaySubsystem_GetTimeOfDayHours_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetSeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetSeconds");

	AFGTimeOfDaySubsystem_GetSeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetPassedDays
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTimeOfDaySubsystem::GetPassedDays()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetPassedDays");

	AFGTimeOfDaySubsystem_GetPassedDays_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetNormalizedTimeOfDay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetNormalizedTimeOfDay()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetNormalizedTimeOfDay");

	AFGTimeOfDaySubsystem_GetNormalizedTimeOfDay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetNighttimeSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetNighttimeSeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetNighttimeSeconds");

	AFGTimeOfDaySubsystem_GetNighttimeSeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetNightPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetNightPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetNightPct");

	AFGTimeOfDaySubsystem_GetNightPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetMinutes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTimeOfDaySubsystem::GetMinutes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetMinutes");

	AFGTimeOfDaySubsystem_GetMinutes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetHours
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTimeOfDaySubsystem::GetHours()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetHours");

	AFGTimeOfDaySubsystem_GetHours_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetDaytimeSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetDaytimeSeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetDaytimeSeconds");

	AFGTimeOfDaySubsystem_GetDaytimeSeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetDaySeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetDaySeconds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetDaySeconds");

	AFGTimeOfDaySubsystem_GetDaySeconds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetDayPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTimeOfDaySubsystem::GetDayPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetDayPct");

	AFGTimeOfDaySubsystem_GetDayPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.GetDayMinutes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTimeOfDaySubsystem::GetDayMinutes()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.GetDayMinutes");

	AFGTimeOfDaySubsystem_GetDayMinutes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTimeOfDaySubsystem.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGTimeOfDaySubsystem*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTimeOfDaySubsystem* AFGTimeOfDaySubsystem::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTimeOfDaySubsystem.Get");

	AFGTimeOfDaySubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.SetTrainName
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText*                  Name                           (ConstParm, Parm, OutParm, ReferenceParm)

void AFGTrain::SetTrainName(struct FText* Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.SetTrainName");

	AFGTrain_SetTrainName_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTrain.SetSelfDrivingEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsEnabled                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGTrain::SetSelfDrivingEnabled(bool* IsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.SetSelfDrivingEnabled");

	AFGTrain_SetSelfDrivingEnabled_Params params;
	params.IsEnabled = IsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTrain.OnRep_IsSelfDrivingEnabled
// (Final, Native, Private)

void AFGTrain::OnRep_IsSelfDrivingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.OnRep_IsSelfDrivingEnabled");

	AFGTrain_OnRep_IsSelfDrivingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTrain.OnRep_DockingState
// (Final, Native, Private)

void AFGTrain::OnRep_DockingState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.OnRep_DockingState");

	AFGTrain_OnRep_DockingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTrain.NewTimeTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGRailroadTimeTable*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRailroadTimeTable* AFGTrain::NewTimeTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.NewTimeTable");

	AFGTrain_NewTimeTable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.IsSelfDrivingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTrain::IsSelfDrivingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.IsSelfDrivingEnabled");

	AFGTrain_IsSelfDrivingEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.IsInputDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTrain::IsInputDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.IsInputDisabled");

	AFGTrain_IsInputDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.IsDocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTrain::IsDocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.IsDocked");

	AFGTrain_IsDocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.HasTimeTable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTrain::HasTimeTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.HasTimeTable");

	AFGTrain_HasTimeTable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.GetTrainName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGTrain::GetTrainName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.GetTrainName");

	AFGTrain_GetTrainName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.GetTrackGraphID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTrain::GetTrackGraphID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.GetTrackGraphID");

	AFGTrain_GetTrackGraphID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.GetTimeTable
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class AFGRailroadTimeTable*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRailroadTimeTable* AFGTrain::GetTimeTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.GetTimeTable");

	AFGTrain_GetTimeTable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.GetSelfDrivingError
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESelfDrivingLocomotiveError    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ESelfDrivingLocomotiveError AFGTrain::GetSelfDrivingError()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.GetSelfDrivingError");

	AFGTrain_GetSelfDrivingError_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.GetLastVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGRailroadVehicle*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRailroadVehicle* AFGTrain::GetLastVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.GetLastVehicle");

	AFGTrain_GetLastVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.GetFirstVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGRailroadVehicle*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGRailroadVehicle* AFGTrain::GetFirstVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.GetFirstVehicle");

	AFGTrain_GetFirstVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.GetDockingState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ETrainDockingState             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ETrainDockingState AFGTrain::GetDockingState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.GetDockingState");

	AFGTrain_GetDockingState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrain.Dock
// (Final, Native, Public, BlueprintCallable)

void AFGTrain::Dock()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrain.Dock");

	AFGTrain_Dock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTrainStationIdentifier.SetStationName
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText*                  Text                           (ConstParm, Parm, OutParm, ReferenceParm)

void AFGTrainStationIdentifier::SetStationName(struct FText* Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrainStationIdentifier.SetStationName");

	AFGTrainStationIdentifier_SetStationName_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTrainStationIdentifier.OnRep_StationName
// (Final, Native, Private)

void AFGTrainStationIdentifier::OnRep_StationName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrainStationIdentifier.OnRep_StationName");

	AFGTrainStationIdentifier_OnRep_StationName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTrainStationIdentifier.GetTrackGraphID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTrainStationIdentifier::GetTrackGraphID()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrainStationIdentifier.GetTrackGraphID");

	AFGTrainStationIdentifier_GetTrackGraphID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrainStationIdentifier.GetStationName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AFGTrainStationIdentifier::GetStationName()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrainStationIdentifier.GetStationName");

	AFGTrainStationIdentifier_GetStationName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTrainStationIdentifier.GetStation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFGBuildableRailroadStation* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGBuildableRailroadStation* AFGTrainStationIdentifier::GetStation()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTrainStationIdentifier.GetStation");

	AFGTrainStationIdentifier_GetStation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.UpdateTutorial
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EIntroTutorialSteps*           nextTutorialStep               (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::UpdateTutorial(EIntroTutorialSteps* nextTutorialStep)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.UpdateTutorial");

	AFGTutorialIntroManager_UpdateTutorial_Params params;
	params.nextTutorialStep = nextTutorialStep;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.StartSkipIntroSequence
// (Final, Native, Public, BlueprintCallable)

void AFGTutorialIntroManager::StartSkipIntroSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.StartSkipIntroSequence");

	AFGTutorialIntroManager_StartSkipIntroSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.SetInputGatesFromTutorialLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGPlayerController**    PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::SetInputGatesFromTutorialLevel(class AFGPlayerController** PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.SetInputGatesFromTutorialLevel");

	AFGTutorialIntroManager_SetInputGatesFromTutorialLevel_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.SetCanSkipTutorialIntro
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          canSkip                        (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::SetCanSkipTutorialIntro(bool* canSkip)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.SetCanSkipTutorialIntro");

	AFGTutorialIntroManager_SetCanSkipTutorialIntro_Params params;
	params.canSkip = canSkip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.OnSchematicPurchased
// (Final, Native, Protected)
// Parameters:
// class UClass**                 newSchematic                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::OnSchematicPurchased(class UClass** newSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.OnSchematicPurchased");

	AFGTutorialIntroManager_OnSchematicPurchased_Params params;
	params.newSchematic = newSchematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.OnRep_TradingPostLevel
// (Final, Native, Protected)

void AFGTutorialIntroManager::OnRep_TradingPostLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.OnRep_TradingPostLevel");

	AFGTutorialIntroManager_OnRep_TradingPostLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.OnPlayerAddedItemToInventory
// (Final, Native, Protected)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           numAdded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::OnPlayerAddedItemToInventory(class UClass** ItemClass, int* numAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.OnPlayerAddedItemToInventory");

	AFGTutorialIntroManager_OnPlayerAddedItemToInventory_Params params;
	params.ItemClass = ItemClass;
	params.numAdded = numAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.OnPlayerAddedItemToArmSlot
// (Final, Native, Protected)
// Parameters:
// class UClass**                 ItemClass                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           numAdded                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::OnPlayerAddedItemToArmSlot(class UClass** ItemClass, int* numAdded)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.OnPlayerAddedItemToArmSlot");

	AFGTutorialIntroManager_OnPlayerAddedItemToArmSlot_Params params;
	params.ItemClass = ItemClass;
	params.numAdded = numAdded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.OnBuildingBuiltGlobal
// (Final, Native, Protected)
// Parameters:
// class AFGBuildable**           buildable                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGTutorialIntroManager::OnBuildingBuiltGlobal(class AFGBuildable** buildable)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.OnBuildingBuiltGlobal");

	AFGTutorialIntroManager_OnBuildingBuiltGlobal_Params params;
	params.buildable = buildable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.IntroDone
// (Final, Native, Public, BlueprintCallable)

void AFGTutorialIntroManager::IntroDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.IntroDone");

	AFGTutorialIntroManager_IntroDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.HasTradingpostBeenBuilt
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTutorialIntroManager::HasTradingpostBeenBuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.HasTradingpostBeenBuilt");

	AFGTutorialIntroManager_HasTradingpostBeenBuilt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetTradingPostLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGTutorialIntroManager::GetTradingPostLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetTradingPostLevel");

	AFGTutorialIntroManager_GetTradingPostLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetNormalizedProgressToSkip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGTutorialIntroManager::GetNormalizedProgressToSkip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetNormalizedProgressToSkip");

	AFGTutorialIntroManager_GetNormalizedProgressToSkip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetIsTutorialCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTutorialIntroManager::GetIsTutorialCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetIsTutorialCompleted");

	AFGTutorialIntroManager_GetIsTutorialCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetIsIntroSequenceDone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTutorialIntroManager::GetIsIntroSequenceDone()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetIsIntroSequenceDone");

	AFGTutorialIntroManager_GetIsIntroSequenceDone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetCurrentTutorialStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EIntroTutorialSteps            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EIntroTutorialSteps AFGTutorialIntroManager::GetCurrentTutorialStep()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetCurrentTutorialStep");

	AFGTutorialIntroManager_GetCurrentTutorialStep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.GetCanSkipTutorial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGTutorialIntroManager::GetCanSkipTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.GetCanSkipTutorial");

	AFGTutorialIntroManager_GetCanSkipTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGTutorialIntroManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGTutorialIntroManager* AFGTutorialIntroManager::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.Get");

	AFGTutorialIntroManager_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGTutorialIntroManager.EndSkipIntroSequence
// (Final, Native, Public, BlueprintCallable)

void AFGTutorialIntroManager::EndSkipIntroSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.EndSkipIntroSequence");

	AFGTutorialIntroManager_EndSkipIntroSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.CompleteTutorial
// (Final, Native, Public, BlueprintCallable)

void AFGTutorialIntroManager::CompleteTutorial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.CompleteTutorial");

	AFGTutorialIntroManager_CompleteTutorial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialIntroManager.CancelSkipIntroSequence
// (Final, Native, Public, BlueprintCallable)

void AFGTutorialIntroManager::CancelSkipIntroSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialIntroManager.CancelSkipIntroSequence");

	AFGTutorialIntroManager_CancelSkipIntroSequence_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialSubsystem.OnBuildingBuilt
// (Final, Native, Public)
// Parameters:
// class UClass**                 itemDesc                       (Parm, ZeroConstructor, IsPlainOldData)

void UFGTutorialSubsystem::OnBuildingBuilt(class UClass** itemDesc)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialSubsystem.OnBuildingBuilt");

	UFGTutorialSubsystem_OnBuildingBuilt_Params params;
	params.itemDesc = itemDesc;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialSubsystem.ClearBuiltData
// (Final, Native, Public, BlueprintCallable)

void UFGTutorialSubsystem::ClearBuiltData()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialSubsystem.ClearBuiltData");

	UFGTutorialSubsystem_ClearBuiltData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGTutorialSubsystem.AddToBuiltClasses
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGTutorialSubsystem::AddToBuiltClasses(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGTutorialSubsystem.AddToBuiltClasses");

	UFGTutorialSubsystem_AddToBuiltClasses_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUnlock.OnUnlock
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFGUnlockSubsystem**     unlockSubssytem                (Parm, ZeroConstructor, IsPlainOldData)

void UFGUnlock::OnUnlock(class AFGUnlockSubsystem** unlockSubssytem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlock.OnUnlock");

	UFGUnlock_OnUnlock_Params params;
	params.unlockSubssytem = unlockSubssytem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUnlock.OnApply
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFGUnlockSubsystem**     unlockSubssytem                (Parm, ZeroConstructor, IsPlainOldData)

void UFGUnlock::OnApply(class AFGUnlockSubsystem** unlockSubssytem)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlock.OnApply");

	UFGUnlock_OnApply_Params params;
	params.unlockSubssytem = unlockSubssytem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUnlock.IsRepeatPurchasesAllowed
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGUnlock::IsRepeatPurchasesAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlock.IsRepeatPurchasesAllowed");

	UFGUnlock_IsRepeatPurchasesAllowed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockArmEquipmentSlot.GetNumArmEquipmentSlotsToUnlock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGUnlockArmEquipmentSlot::GetNumArmEquipmentSlotsToUnlock()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockArmEquipmentSlot.GetNumArmEquipmentSlotsToUnlock");

	UFGUnlockArmEquipmentSlot_GetNumArmEquipmentSlotsToUnlock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockGiveItem.GetItemsToGive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FItemAmount>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemAmount> UFGUnlockGiveItem::GetItemsToGive()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockGiveItem.GetItemsToGive");

	UFGUnlockGiveItem_GetItemsToGive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockInventorySlot.GetNumInventorySlotsToUnlock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UFGUnlockInventorySlot::GetNumInventorySlotsToUnlock()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockInventorySlot.GetNumInventorySlotsToUnlock");

	UFGUnlockInventorySlot_GetNumInventorySlotsToUnlock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockRecipe.GetRecipesToUnlock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGUnlockRecipe::GetRecipesToUnlock()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockRecipe.GetRecipesToUnlock");

	UFGUnlockRecipe_GetRecipesToUnlock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockScannableResource.GetResourcesToAddToScanner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGUnlockScannableResource::GetResourcesToAddToScanner()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockScannableResource.GetResourcesToAddToScanner");

	UFGUnlockScannableResource_GetResourcesToAddToScanner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockSchematic.GetSchematicsToUnlock
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> UFGUnlockSchematic::GetSchematicsToUnlock()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockSchematic.GetSchematicsToUnlock");

	UFGUnlockSchematic_GetSchematicsToUnlock_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockSubsystem.RemoveAllScannableResources
// (Final, Native, Public, BlueprintCallable)

void AFGUnlockSubsystem::RemoveAllScannableResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockSubsystem.RemoveAllScannableResources");

	AFGUnlockSubsystem_RemoveAllScannableResources_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUnlockSubsystem.OnSchematicPurchased
// (Final, Native, Public)
// Parameters:
// class UClass**                 newSchematic                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGUnlockSubsystem::OnSchematicPurchased(class UClass** newSchematic)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockSubsystem.OnSchematicPurchased");

	AFGUnlockSubsystem_OnSchematicPurchased_Params params;
	params.newSchematic = newSchematic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUnlockSubsystem.GetScannableResources
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UClass*> AFGUnlockSubsystem::GetScannableResources()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockSubsystem.GetScannableResources");

	AFGUnlockSubsystem_GetScannableResources_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockSubsystem.GetIsMapUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGUnlockSubsystem::GetIsMapUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockSubsystem.GetIsMapUnlocked");

	AFGUnlockSubsystem_GetIsMapUnlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockSubsystem.GetIsBuildingOverclockUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGUnlockSubsystem::GetIsBuildingOverclockUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockSubsystem.GetIsBuildingOverclockUnlocked");

	AFGUnlockSubsystem_GetIsBuildingOverclockUnlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockSubsystem.GetIsBuildingEfficiencyUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGUnlockSubsystem::GetIsBuildingEfficiencyUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockSubsystem.GetIsBuildingEfficiencyUnlocked");

	AFGUnlockSubsystem_GetIsBuildingEfficiencyUnlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUnlockSubsystem.Get
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContext                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGUnlockSubsystem*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGUnlockSubsystem* AFGUnlockSubsystem::STATIC_Get(class UObject** WorldContext)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUnlockSubsystem.Get");

	AFGUnlockSubsystem_Get_Params params;
	params.WorldContext = WorldContext;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUseableInterface.UpdateUseState
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                atLocation                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UPrimitiveComponent**    componentHit                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FUseState               out_useState                   (Parm, OutParm, ReferenceParm)

void UFGUseableInterface::UpdateUseState(class AFGCharacterPlayer** byCharacter, struct FVector* atLocation, class UPrimitiveComponent** componentHit, struct FUseState* out_useState)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.UpdateUseState");

	UFGUseableInterface_UpdateUseState_Params params;
	params.byCharacter = byCharacter;
	params.atLocation = atLocation;
	params.componentHit = componentHit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_useState != nullptr)
		*out_useState = params.out_useState;
}


// Function FactoryGame.FGUseableInterface.UnregisterInteractingPlayer
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGUseableInterface::UnregisterInteractingPlayer(class AFGCharacterPlayer** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.UnregisterInteractingPlayer");

	UFGUseableInterface_UnregisterInteractingPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.StopIsLookedAt
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUseState*              State                          (ConstParm, Parm, OutParm, ReferenceParm)

void UFGUseableInterface::StopIsLookedAt(class AFGCharacterPlayer** byCharacter, struct FUseState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.StopIsLookedAt");

	UFGUseableInterface_StopIsLookedAt_Params params;
	params.byCharacter = byCharacter;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.StartIsLookedAt
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUseState*              State                          (ConstParm, Parm, OutParm, ReferenceParm)

void UFGUseableInterface::StartIsLookedAt(class AFGCharacterPlayer** byCharacter, struct FUseState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.StartIsLookedAt");

	UFGUseableInterface_StartIsLookedAt_Params params;
	params.byCharacter = byCharacter;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.RegisterInteractingPlayer
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGUseableInterface::RegisterInteractingPlayer(class AFGCharacterPlayer** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.RegisterInteractingPlayer");

	UFGUseableInterface_RegisterInteractingPlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.OnUseStop
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUseState*              State                          (ConstParm, Parm, OutParm, ReferenceParm)

void UFGUseableInterface::OnUseStop(class AFGCharacterPlayer** byCharacter, struct FUseState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.OnUseStop");

	UFGUseableInterface_OnUseStop_Params params;
	params.byCharacter = byCharacter;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.OnUse
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUseState*              State                          (ConstParm, Parm, OutParm, ReferenceParm)

void UFGUseableInterface::OnUse(class AFGCharacterPlayer** byCharacter, struct FUseState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.OnUse");

	UFGUseableInterface_OnUse_Params params;
	params.byCharacter = byCharacter;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGUseableInterface.IsUseable
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGUseableInterface::IsUseable()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.IsUseable");

	UFGUseableInterface_IsUseable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGUseableInterface.GetLookAtDecription
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFGCharacterPlayer**     byCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FUseState*              State                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UFGUseableInterface::GetLookAtDecription(class AFGCharacterPlayer** byCharacter, struct FUseState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGUseableInterface.GetLookAtDecription");

	UFGUseableInterface_GetLookAtDecription_Params params;
	params.byCharacter = byCharacter;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicleCollisionBoxComponent.OnOverlapBegin
// (Final, Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UFGVehicleCollisionBoxComponent::OnOverlapBegin(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicleCollisionBoxComponent.OnOverlapBegin");

	UFGVehicleCollisionBoxComponent_OnOverlapBegin_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVehicleDescriptor.GetVehicleClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 inClass                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGVehicleDescriptor::STATIC_GetVehicleClass(class UClass** inClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicleDescriptor.GetVehicleClass");

	UFGVehicleDescriptor_GetVehicleClass_Params params;
	params.inClass = inClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicleDestroyableInterface.GetForceThreshold
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGVehicleDestroyableInterface::GetForceThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicleDestroyableInterface.GetForceThreshold");

	UFGVehicleDestroyableInterface_GetForceThreshold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicleDestroyableInterface.GetDestroyEffect
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UParticleSystem* UFGVehicleDestroyableInterface::GetDestroyEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicleDestroyableInterface.GetDestroyEffect");

	UFGVehicleDestroyableInterface_GetDestroyEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVehicleDestroyableInterface.GetDestroyAudioEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGVehicleDestroyableInterface::GetDestroyAudioEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVehicleDestroyableInterface.GetDestroyAudioEvent");

	UFGVehicleDestroyableInterface_GetDestroyAudioEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVersionFunctionLibrary.IsPublicBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGVersionFunctionLibrary::STATIC_IsPublicBuild()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVersionFunctionLibrary.IsPublicBuild");

	UFGVersionFunctionLibrary_IsPublicBuild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVersionFunctionLibrary.GetVersionString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

class FString UFGVersionFunctionLibrary::STATIC_GetVersionString()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVersionFunctionLibrary.GetVersionString");

	UFGVersionFunctionLibrary_GetVersionString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVersionFunctionLibrary.GetGameVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EGameVersion                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EGameVersion UFGVersionFunctionLibrary::STATIC_GetGameVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVersionFunctionLibrary.GetGameVersion");

	UFGVersionFunctionLibrary_GetGameVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGVirtualCursorFunctionLibrary.EnableVirtualCursor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController**      PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UFGVirtualCursorFunctionLibrary::STATIC_EnableVirtualCursor(class APlayerController** PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVirtualCursorFunctionLibrary.EnableVirtualCursor");

	UFGVirtualCursorFunctionLibrary_EnableVirtualCursor_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVirtualCursorFunctionLibrary.DisableVirtualCursor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController**      PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UFGVirtualCursorFunctionLibrary::STATIC_DisableVirtualCursor(class APlayerController** PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVirtualCursorFunctionLibrary.DisableVirtualCursor");

	UFGVirtualCursorFunctionLibrary_DisableVirtualCursor_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVolumeMapArea.OnPrimitiveComponentEntered
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          fromSweep                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGVolumeMapArea::OnPrimitiveComponentEntered(class UPrimitiveComponent** OverlappedComp, class AActor** Other, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* fromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVolumeMapArea.OnPrimitiveComponentEntered");

	AFGVolumeMapArea_OnPrimitiveComponentEntered_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.fromSweep = fromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGVolumeMapArea.GetMapArea
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AFGVolumeMapArea::GetMapArea()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGVolumeMapArea.GetMapArea");

	AFGVolumeMapArea_GetMapArea_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWaterAudio.OnPawnHitSurface
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AFGWaterVolume**         waterVolume                    (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                surfaceLocation                (Parm, ZeroConstructor, IsPlainOldData)

void UFGWaterAudio::OnPawnHitSurface(class AFGWaterVolume** waterVolume, class APawn** Pawn, struct FVector* surfaceLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterAudio.OnPawnHitSurface");

	UFGWaterAudio_OnPawnHitSurface_Params params;
	params.waterVolume = waterVolume;
	params.Pawn = Pawn;
	params.surfaceLocation = surfaceLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWaterAudio.OnCameraExitedWater
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AFGWaterVolume**         waterVolume                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                exitLocation                   (Parm, ZeroConstructor, IsPlainOldData)
// class AFGPlayerController**    PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UFGWaterAudio::OnCameraExitedWater(class AFGWaterVolume** waterVolume, struct FVector* exitLocation, class AFGPlayerController** PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterAudio.OnCameraExitedWater");

	UFGWaterAudio_OnCameraExitedWater_Params params;
	params.waterVolume = waterVolume;
	params.exitLocation = exitLocation;
	params.PC = PC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWaterAudio.OnCameraEnteredWater
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AFGWaterVolume**         waterVolume                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                enterLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// class AFGPlayerController**    PC                             (Parm, ZeroConstructor, IsPlainOldData)

void UFGWaterAudio::OnCameraEnteredWater(class AFGWaterVolume** waterVolume, struct FVector* enterLocation, class AFGPlayerController** PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterAudio.OnCameraEnteredWater");

	UFGWaterAudio_OnCameraEnteredWater_Params params;
	params.waterVolume = waterVolume;
	params.enterLocation = enterLocation;
	params.PC = PC;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWaterAudio.GetImpactEvent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn**                  Pawn                           (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* UFGWaterAudio::GetImpactEvent(class APawn** Pawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterAudio.GetImpactEvent");

	UFGWaterAudio_GetImpactEvent_Params params;
	params.Pawn = Pawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWaterVolume.OnPrimitiveComponentExited
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGWaterVolume::OnPrimitiveComponentExited(class UPrimitiveComponent** OverlappedComp, class AActor** Other, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterVolume.OnPrimitiveComponentExited");

	AFGWaterVolume_OnPrimitiveComponentExited_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWaterVolume.OnPrimitiveComponentEntered
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          fromSweep                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGWaterVolume::OnPrimitiveComponentEntered(class UPrimitiveComponent** OverlappedComp, class AActor** Other, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* fromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWaterVolume.OnPrimitiveComponentEntered");

	AFGWaterVolume_OnPrimitiveComponentEntered_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.fromSweep = fromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyReloading
// (Native, Event, Public, BlueprintEvent)

void AFGWeaponChild::NotifyReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyReloading");

	AFGWeaponChild_NotifyReloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyReloadComplete
// (Native, Event, Public, BlueprintEvent)

void AFGWeaponChild::NotifyReloadComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyReloadComplete");

	AFGWeaponChild_NotifyReloadComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyPrimaryFireExecuted
// (Native, Event, Public, BlueprintEvent)

void AFGWeaponChild::NotifyPrimaryFireExecuted()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyPrimaryFireExecuted");

	AFGWeaponChild_NotifyPrimaryFireExecuted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyFailedToFire
// (Native, Event, Public, BlueprintEvent)

void AFGWeaponChild::NotifyFailedToFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyFailedToFire");

	AFGWeaponChild_NotifyFailedToFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyEndSecondaryFire
// (Native, Event, Public, BlueprintEvent)

void AFGWeaponChild::NotifyEndSecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyEndSecondaryFire");

	AFGWeaponChild_NotifyEndSecondaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyEndPrimaryFire
// (Native, Event, Public, BlueprintEvent)

void AFGWeaponChild::NotifyEndPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyEndPrimaryFire");

	AFGWeaponChild_NotifyEndPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyBeginSecondaryFire
// (Native, Event, Public, BlueprintEvent)

void AFGWeaponChild::NotifyBeginSecondaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyBeginSecondaryFire");

	AFGWeaponChild_NotifyBeginSecondaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWeaponChild.NotifyBeginPrimaryFire
// (Native, Event, Public, BlueprintEvent)

void AFGWeaponChild::NotifyBeginPrimaryFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWeaponChild.NotifyBeginPrimaryFire");

	AFGWeaponChild_NotifyBeginPrimaryFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.WantsToMove
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::WantsToMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.WantsToMove");

	AFGWheeledVehicle_WantsToMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.UseReplicatedState
// (Final, Native, Protected)

void AFGWheeledVehicle::UseReplicatedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.UseReplicatedState");

	AFGWheeledVehicle_UseReplicatedState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetPathVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          inVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::SetPathVisibility(bool* inVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetPathVisibility");

	AFGWheeledVehicle_SetPathVisibility_Params params;
	params.inVisible = inVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetPathFromArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AFGTargetPoint*>* targetPoints                   (Parm, ZeroConstructor)

void AFGWheeledVehicle::SetPathFromArray(TArray<class AFGTargetPoint*>* targetPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetPathFromArray");

	AFGWheeledVehicle_SetPathFromArray_Params params;
	params.targetPoints = targetPoints;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetMovementComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWheeledVehicleMovementComponent** MovementComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AFGWheeledVehicle::SetMovementComponent(class UWheeledVehicleMovementComponent** MovementComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetMovementComponent");

	AFGWheeledVehicle_SetMovementComponent_Params params;
	params.MovementComponent = MovementComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetIsDrifting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          newDrifting                    (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::SetIsDrifting(bool* newDrifting)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetIsDrifting");

	AFGWheeledVehicle_SetIsDrifting_Params params;
	params.newDrifting = newDrifting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetAddedAngularVelocityYaw
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float*                         yawToAdd                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::SetAddedAngularVelocityYaw(float* yawToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetAddedAngularVelocityYaw");

	AFGWheeledVehicle_SetAddedAngularVelocityYaw_Params params;
	params.yawToAdd = yawToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.SetAddedAngularVelocityPitch
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float*                         pitchToAdd                     (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::SetAddedAngularVelocityPitch(float* pitchToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.SetAddedAngularVelocityPitch");

	AFGWheeledVehicle_SetAddedAngularVelocityPitch_Params params;
	params.pitchToAdd = pitchToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.ServerUpdateAssistedVelocitiesState
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          inDrifting                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         inInputYaw                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         inInputPitch                   (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::ServerUpdateAssistedVelocitiesState(bool* inDrifting, float* inInputYaw, float* inInputPitch)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.ServerUpdateAssistedVelocitiesState");

	AFGWheeledVehicle_ServerUpdateAssistedVelocitiesState_Params params;
	params.inDrifting = inDrifting;
	params.inInputYaw = inInputYaw;
	params.inInputPitch = inInputPitch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.ResetAddedAngularVelocityValues
// (Final, Native, Protected, BlueprintCallable)

void AFGWheeledVehicle::ResetAddedAngularVelocityValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.ResetAddedAngularVelocityValues");

	AFGWheeledVehicle_ResetAddedAngularVelocityValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.RemoveTargetPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGTargetPoint**         targetToRemove                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::RemoveTargetPoint(class AFGTargetPoint** targetToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.RemoveTargetPoint");

	AFGWheeledVehicle_RemoveTargetPoint_Params params;
	params.targetToRemove = targetToRemove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.OpenVehicleTrunk
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::OpenVehicleTrunk(class AFGCharacterPlayer** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.OpenVehicleTrunk");

	AFGWheeledVehicle_OpenVehicleTrunk_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.OnRep_TransferStatusChanged
// (Final, Native, Private)

void AFGWheeledVehicle::OnRep_TransferStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.OnRep_TransferStatusChanged");

	AFGWheeledVehicle_OnRep_TransferStatusChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.OnRep_IsSimulated
// (Final, Native, Private)

void AFGWheeledVehicle::OnRep_IsSimulated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.OnRep_IsSimulated");

	AFGWheeledVehicle_OnRep_IsSimulated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.OnOverlapEnd
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::OnOverlapEnd(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.OnOverlapEnd");

	AFGWheeledVehicle_OnOverlapEnd_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.OnOverlapBegin
// (Final, Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AFGWheeledVehicle::OnOverlapBegin(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.OnOverlapBegin");

	AFGWheeledVehicle_OnOverlapBegin_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.NumWheelsOnGround
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AFGWheeledVehicle::NumWheelsOnGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.NumWheelsOnGround");

	AFGWheeledVehicle_NumWheelsOnGround_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.Multicast_PlayFoliageDestroyedEffect
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class UParticleSystem**        destroyEffect                  (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent**          destroyAudioEvent              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::Multicast_PlayFoliageDestroyedEffect(class UParticleSystem** destroyEffect, class UAkAudioEvent** destroyAudioEvent, struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.Multicast_PlayFoliageDestroyedEffect");

	AFGWheeledVehicle_Multicast_PlayFoliageDestroyedEffect_Params params;
	params.destroyEffect = destroyEffect;
	params.destroyAudioEvent = destroyAudioEvent;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.IsValidFuel
// (Final, Native, Public, Const)
// Parameters:
// class UClass**                 Resource                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::IsValidFuel(class UClass** Resource)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.IsValidFuel");

	AFGWheeledVehicle_IsValidFuel_Params params;
	params.Resource = Resource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.IsSimulated
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::IsSimulated()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.IsSimulated");

	AFGWheeledVehicle_IsSimulated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.HasFuel
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::HasFuel()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.HasFuel");

	AFGWheeledVehicle_HasFuel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetVehicleMovementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWheeledVehicleMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UWheeledVehicleMovementComponent* AFGWheeledVehicle::GetVehicleMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetVehicleMovementComponent");

	AFGWheeledVehicle_GetVehicleMovementComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetTireData
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FTireData>       out_tireData                   (Parm, OutParm, ZeroConstructor)

void AFGWheeledVehicle::GetTireData(TArray<struct FTireData>* out_tireData)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetTireData");

	AFGWheeledVehicle_GetTireData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (out_tireData != nullptr)
		*out_tireData = params.out_tireData;
}


// Function FactoryGame.FGWheeledVehicle.GetTargetNodeLinkedList
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFGTargetPointLinkedList* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UFGTargetPointLinkedList* AFGWheeledVehicle::GetTargetNodeLinkedList()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetTargetNodeLinkedList");

	AFGWheeledVehicle_GetTargetNodeLinkedList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetStorageInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGWheeledVehicle::GetStorageInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetStorageInventory");

	AFGWheeledVehicle_GetStorageInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetSimulationComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFloatingPawnMovement*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFloatingPawnMovement* AFGWheeledVehicle::GetSimulationComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetSimulationComponent");

	AFGWheeledVehicle_GetSimulationComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetPathVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::GetPathVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetPathVisibility");

	AFGWheeledVehicle_GetPathVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetIsInAir
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::GetIsInAir()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetIsInAir");

	AFGWheeledVehicle_GetIsInAir_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetIsGrounded
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::GetIsGrounded()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetIsGrounded");

	AFGWheeledVehicle_GetIsGrounded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetIsDrifting
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::GetIsDrifting()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetIsDrifting");

	AFGWheeledVehicle_GetIsDrifting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetFuelInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* AFGWheeledVehicle::GetFuelInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetFuelInventory");

	AFGWheeledVehicle_GetFuelInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetForwardSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AFGWheeledVehicle::GetForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetForwardSpeed");

	AFGWheeledVehicle_GetForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetDriftForceOffset
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AFGWheeledVehicle::GetDriftForceOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetDriftForceOffset");

	AFGWheeledVehicle_GetDriftForceOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.GetCachedSurfaceMaterial
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPhysicalMaterial*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPhysicalMaterial* AFGWheeledVehicle::GetCachedSurfaceMaterial()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.GetCachedSurfaceMaterial");

	AFGWheeledVehicle_GetCachedSurfaceMaterial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.FilterFuelClasses
// (Final, Native, Public, Const)
// Parameters:
// class UClass**                 Object                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           idx                            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AFGWheeledVehicle::FilterFuelClasses(class UClass** Object, int* idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.FilterFuelClasses");

	AFGWheeledVehicle_FilterFuelClasses_Params params;
	params.Object = Object;
	params.idx = idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicle.CreateInventoryItemDrops
// (Native, Event, Protected, BlueprintEvent)

void AFGWheeledVehicle::CreateInventoryItemDrops()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.CreateInventoryItemDrops");

	AFGWheeledVehicle_CreateInventoryItemDrops_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.CloseVehicleTrunk
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFGCharacterPlayer**     Player                         (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::CloseVehicleTrunk(class AFGCharacterPlayer** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.CloseVehicleTrunk");

	AFGWheeledVehicle_CloseVehicleTrunk_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicle.Client_PlayFoliageDestroyedEffect
// (BlueprintCosmetic, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class UParticleSystem**        destroyEffect                  (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent**          destroyAudioEvent              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGWheeledVehicle::Client_PlayFoliageDestroyedEffect(class UParticleSystem** destroyEffect, class UAkAudioEvent** destroyAudioEvent, struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicle.Client_PlayFoliageDestroyedEffect");

	AFGWheeledVehicle_Client_PlayFoliageDestroyedEffect_Params params;
	params.destroyEffect = destroyEffect;
	params.destroyAudioEvent = destroyAudioEvent;
	params.Location = Location;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestTireLoadValue
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent4W::GetLargestTireLoadValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestTireLoadValue");

	UFGWheeledVehicleMovementComponent4W_GetLargestTireLoadValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestLongitudinalSlip
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent4W::GetLargestLongitudinalSlip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestLongitudinalSlip");

	UFGWheeledVehicleMovementComponent4W_GetLargestLongitudinalSlip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestLateralSlip
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent4W::GetLargestLateralSlip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent4W.GetLargestLateralSlip");

	UFGWheeledVehicleMovementComponent4W_GetLargestLateralSlip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestTireLoadValue
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent6W::GetLargestTireLoadValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestTireLoadValue");

	UFGWheeledVehicleMovementComponent6W_GetLargestTireLoadValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestLongitudinalSlip
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent6W::GetLargestLongitudinalSlip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestLongitudinalSlip");

	UFGWheeledVehicleMovementComponent6W_GetLargestLongitudinalSlip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestLateralSlip
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWheeledVehicleMovementComponent6W::GetLargestLateralSlip()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWheeledVehicleMovementComponent6W.GetLargestLateralSlip");

	UFGWheeledVehicleMovementComponent6W_GetLargestLateralSlip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWidgetSwitcher.FadeOut
// (Final, Native, Protected)

void UFGWidgetSwitcher::FadeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWidgetSwitcher.FadeOut");

	UFGWidgetSwitcher_FadeOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWidgetSwitcher.ExitAnimationTookToLong
// (Final, Native, Protected)

void UFGWidgetSwitcher::ExitAnimationTookToLong()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWidgetSwitcher.ExitAnimationTookToLong");

	UFGWidgetSwitcher_ExitAnimationTookToLong_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWidgetSwitcher.EnterAnimationTookToLong
// (Final, Native, Protected)

void UFGWidgetSwitcher::EnterAnimationTookToLong()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWidgetSwitcher.EnterAnimationTookToLong");

	UFGWidgetSwitcher_EnterAnimationTookToLong_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWindow.GetCloseButton
// (Event, Public, BlueprintEvent)
// Parameters:
// class UUserWidget*             ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UUserWidget* UFGWindow::GetCloseButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWindow.GetCloseButton");

	UFGWindow_GetCloseButton_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWireHologram.OnAutomaticPoleDisableToggle
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Disabled                       (Parm, ZeroConstructor, IsPlainOldData)

void AFGWireHologram::OnAutomaticPoleDisableToggle(bool* Disabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWireHologram.OnAutomaticPoleDisableToggle");

	AFGWireHologram_OnAutomaticPoleDisableToggle_Params params;
	params.Disabled = Disabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.SetWorkBenchUser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFGCharacterPlayer**     newUser                        (Parm, ZeroConstructor, IsPlainOldData)

void UFGWorkBench::SetWorkBenchUser(class AFGCharacterPlayer** newUser)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.SetWorkBenchUser");

	UFGWorkBench_SetWorkBenchUser_Params params;
	params.newUser = newUser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.SetupManufacturingButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGManufacturingButton** inButton                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGWorkBench::SetupManufacturingButton(class UFGManufacturingButton** inButton)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.SetupManufacturingButton");

	UFGWorkBench_SetupManufacturingButton_Params params;
	params.inButton = inButton;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.SetRecipe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGWorkBench::SetRecipe(class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.SetRecipe");

	UFGWorkBench_SetRecipe_Params params;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.SetInventory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGInventoryComponent**  newInventory                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UFGWorkBench::SetInventory(class UFGInventoryComponent** newInventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.SetInventory");

	UFGWorkBench_SetInventory_Params params;
	params.newInventory = newInventory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.RemoveIngredientsAndAwardRewards
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFGInventoryComponent**  inventory                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)

void UFGWorkBench::RemoveIngredientsAndAwardRewards(class UFGInventoryComponent** inventory, class UClass** Recipe)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.RemoveIngredientsAndAwardRewards");

	UFGWorkBench_RemoveIngredientsAndAwardRewards_Params params;
	params.inventory = inventory;
	params.Recipe = Recipe;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.Produce
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         dt                             (Parm, ZeroConstructor, IsPlainOldData)

void UFGWorkBench::Produce(float* dt)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.Produce");

	UFGWorkBench_Produce_Params params;
	params.dt = dt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.IsProducing
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGWorkBench::IsProducing()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.IsProducing");

	UFGWorkBench_IsProducing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetWorkBenchUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* UFGWorkBench::GetWorkBenchUser()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetWorkBenchUser");

	UFGWorkBench_GetWorkBenchUser_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetPlayerWorkingAtBench
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFGCharacterPlayer*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AFGCharacterPlayer* UFGWorkBench::GetPlayerWorkingAtBench()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetPlayerWorkingAtBench");

	UFGWorkBench_GetPlayerWorkingAtBench_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetManufacturingSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWorkBench::GetManufacturingSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetManufacturingSpeed");

	UFGWorkBench_GetManufacturingSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetManufacturingProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWorkBench::GetManufacturingProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetManufacturingProgress");

	UFGWorkBench_GetManufacturingProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFGInventoryComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UFGInventoryComponent* UFGWorkBench::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetInventory");

	UFGWorkBench_GetInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetCurrentRecipe
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UFGWorkBench::GetCurrentRecipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetCurrentRecipe");

	UFGWorkBench_GetCurrentRecipe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetCurrentFatigue
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWorkBench::GetCurrentFatigue()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetCurrentFatigue");

	UFGWorkBench_GetCurrentFatigue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetCurrentDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWorkBench::GetCurrentDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetCurrentDuration");

	UFGWorkBench_GetCurrentDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.GetActiveManufacturingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UFGWorkBench::GetActiveManufacturingTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.GetActiveManufacturingTime");

	UFGWorkBench_GetActiveManufacturingTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorkBench.CraftComplete
// (Event, Public, BlueprintEvent)

void UFGWorkBench::CraftComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.CraftComplete");

	UFGWorkBench_CraftComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorkBench.CanProduce
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 Recipe                         (Parm, ZeroConstructor, IsPlainOldData)
// class UFGInventoryComponent**  inventory                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UFGWorkBench::CanProduce(class UClass** Recipe, class UFGInventoryComponent** inventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorkBench.CanProduce");

	UFGWorkBench_CanProduce_Params params;
	params.Recipe = Recipe;
	params.inventory = inventory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function FactoryGame.FGWorldSettings.UpdateWorldBounds
// (Final, Native, Public)

void AFGWorldSettings::UpdateWorldBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorldSettings.UpdateWorldBounds");

	AFGWorldSettings_UpdateWorldBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function FactoryGame.FGWorldSettings.GetLevelStartedAkEvent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAkAudioEvent*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAkAudioEvent* AFGWorldSettings::GetLevelStartedAkEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function FactoryGame.FGWorldSettings.GetLevelStartedAkEvent");

	AFGWorldSettings_GetLevelStartedAkEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
